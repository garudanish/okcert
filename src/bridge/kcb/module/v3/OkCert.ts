import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Boolean as java_lang_Boolean } from "./../../../java/lang/Boolean";
import { Authenticator as java_net_Authenticator } from "./../../../java/net/Authenticator";
import { Map as java_util_Map } from "./../../../java/util/Map";
import { InputStream as java_io_InputStream } from "./../../../java/io/InputStream";
import { Integer as java_lang_Integer } from "./../../../java/lang/Integer";
import { Proxy as java_net_Proxy } from "./../../../java/net/Proxy";
import { Long as java_lang_Long } from "./../../../java/lang/Long";
import { Class as java_lang_Class } from "./../../../java/lang/Class";

/**
 * This class just defines types, you should import OkCert instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class OkCertClass extends JavaClass {
    // ================== Method delLicense ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public delLicense(var0: string | null): Promise<void>;
    // ================== Method delLicense ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public delLicenseSync(var0: string | null): void;
    // ================== Method containsLicense ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public containsLicense(var0: string | null): Promise<boolean>;
    // ================== Method containsLicense ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public containsLicenseSync(var0: string | null): boolean;
    // ================== Method setProtocol2type ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public setProtocol2type(var0: string | null): Promise<void>;
    // ================== Method setProtocol2type ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public setProtocol2typeSync(var0: string | null): void;
    // ================== Method setSslCiphers ==================
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    public setSslCiphers(var0: (string | null)[] | null): Promise<void>;
    // ================== Method setSslCiphers ==================
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    public setSslCiphersSync(var0: (string | null)[] | null): void;
    // ================== Method setSslProtocols ==================
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    public setSslProtocols(var0: (string | null)[] | null): Promise<void>;
    // ================== Method setSslProtocols ==================
    /**
     * @param var0 original type: 'java.lang.String[]'
     * @return original return type: 'void'
     */
    public setSslProtocolsSync(var0: (string | null)[] | null): void;
    // ================== Method setSslCertChk ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    public setSslCertChk(var0: java_lang_Boolean | boolean): Promise<void>;
    // ================== Method setSslCertChk ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    public setSslCertChkSync(var0: java_lang_Boolean | boolean): void;
    // ================== Method setHandlerOpt ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public setHandlerOpt(var0: string | null): Promise<void>;
    // ================== Method setHandlerOpt ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public setHandlerOptSync(var0: string | null): void;
    // ================== Method setAuthenticator ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public setAuthenticator(var0: string | null, var1: string | null): Promise<void>;
    // ================== Method setAuthenticator ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public setAuthenticatorSync(var0: string | null, var1: string | null): void;
    /**
     * @param var0 original type: 'java.net.Authenticator'
     * @return original return type: 'void'
     */
    public setAuthenticator(var0: java_net_Authenticator | null): Promise<void>;
    /**
     * @param var0 original type: 'java.net.Authenticator'
     * @return original return type: 'void'
     */
    public setAuthenticatorSync(var0: java_net_Authenticator | null): void;
    // ================== Method setHttpHeaders ==================
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'void'
     */
    public setHttpHeaders(var0: java_util_Map | null): Promise<void>;
    // ================== Method setHttpHeaders ==================
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'void'
     */
    public setHttpHeadersSync(var0: java_util_Map | null): void;
    // ================== Method callOkCert ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @param var5 original type: 'java.io.InputStream'
     * @return original return type: 'java.lang.String'
     */
    public callOkCert(var0: string | null, var1: string | null, var2: string | null, var3: string | null, var4: string | null, var5: java_io_InputStream | null): Promise<string | null>;
    // ================== Method callOkCert ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @param var5 original type: 'java.io.InputStream'
     * @return original return type: 'java.lang.String'
     */
    public callOkCertSync(var0: string | null, var1: string | null, var2: string | null, var3: string | null, var4: string | null, var5: java_io_InputStream | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    public callOkCert(var0: string | null, var1: string | null, var2: string | null, var3: string | null, var4: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    public callOkCertSync(var0: string | null, var1: string | null, var2: string | null, var3: string | null, var4: string | null): string | null;
    // ================== Method setProxy ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public setProxy(var0: string | null, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method setProxy ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public setProxySync(var0: string | null, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'java.net.Proxy'
     * @return original return type: 'void'
     */
    public setProxy(var0: java_net_Proxy | null): Promise<void>;
    /**
     * @param var0 original type: 'java.net.Proxy'
     * @return original return type: 'void'
     */
    public setProxySync(var0: java_net_Proxy | null): void;
    // ================== Method setConnectTimeout ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    public setConnectTimeout(var0: java_lang_Integer | number): Promise<void>;
    // ================== Method setConnectTimeout ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    public setConnectTimeoutSync(var0: java_lang_Integer | number): void;
    // ================== Method setReadTimeout ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    public setReadTimeout(var0: java_lang_Integer | number): Promise<void>;
    // ================== Method setReadTimeout ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'void'
     */
    public setReadTimeoutSync(var0: java_lang_Integer | number): void;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
    // ================== Method newInstance ==================
    /**
     * @return original return type: 'kcb.module.v3.OkCert'
     */
    public static newInstance(): Promise<OkCert>;
    // ================== Constructors ==================
    public constructor();
}

/**
 * Class kcb.module.v3.OkCert.
 *
 * This actually imports the java class for further use.
 * The class OkCertClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class OkCert extends importClass<typeof OkCertClass>("kcb.module.v3.OkCert") {
}
export default OkCert;