import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { FilenameFilter as java_io_FilenameFilter } from "./FilenameFilter";
import { URL as java_net_URL } from "./../net/URL";
import { URI as java_net_URI } from "./../net/URI";
import { FileFilter as java_io_FileFilter } from "./FileFilter";
import { Long as java_lang_Long } from "./../lang/Long";
import { Boolean as java_lang_Boolean } from "./../lang/Boolean";
import { Path as java_nio_file_Path } from "./../nio/file/Path";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import File instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FileClass extends JavaClass {
    // ================== Field separatorChar ==================
    /**
     * Original type: 'char'
     */
    public static readonly separatorChar: string | null;
    // ================== Field separator ==================
    /**
     * Original type: 'java.lang.String'
     */
    public static readonly separator: string | null;
    // ================== Field pathSeparatorChar ==================
    /**
     * Original type: 'char'
     */
    public static readonly pathSeparatorChar: string | null;
    // ================== Field pathSeparator ==================
    /**
     * Original type: 'java.lang.String'
     */
    public static readonly pathSeparator: string | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'int'
     */
    public compareTo(var0: FileClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'int'
     */
    public compareToSync(var0: FileClass | null): number;
    // ================== Method getName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getName(): Promise<string | null>;
    // ================== Method getName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getNameSync(): string | null;
    // ================== Method length ==================
    /**
     * @return original return type: 'long'
     */
    public length(): Promise<number>;
    // ================== Method length ==================
    /**
     * @return original return type: 'long'
     */
    public lengthSync(): number;
    // ================== Method getParent ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getParent(): Promise<string | null>;
    // ================== Method getParent ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getParentSync(): string | null;
    // ================== Method isAbsolute ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAbsolute(): Promise<boolean>;
    // ================== Method isAbsolute ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAbsoluteSync(): boolean;
    // ================== Method getCanonicalPath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getCanonicalPath(): Promise<string | null>;
    // ================== Method getCanonicalPath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getCanonicalPathSync(): string | null;
    // ================== Method delete ==================
    /**
     * @return original return type: 'boolean'
     */
    public delete(): Promise<boolean>;
    // ================== Method delete ==================
    /**
     * @return original return type: 'boolean'
     */
    public deleteSync(): boolean;
    // ================== Method setReadOnly ==================
    /**
     * @return original return type: 'boolean'
     */
    public setReadOnly(): Promise<boolean>;
    // ================== Method setReadOnly ==================
    /**
     * @return original return type: 'boolean'
     */
    public setReadOnlySync(): boolean;
    // ================== Method list ==================
    /**
     * @return original return type: 'java.lang.String[]'
     */
    public list(): Promise<(string | null)[] | null>;
    // ================== Method list ==================
    /**
     * @return original return type: 'java.lang.String[]'
     */
    public listSync(): (string | null)[] | null;
    /**
     * @param var0 original type: 'java.io.FilenameFilter'
     * @return original return type: 'java.lang.String[]'
     */
    public list(var0: java_io_FilenameFilter | null): Promise<(string | null)[] | null>;
    /**
     * @param var0 original type: 'java.io.FilenameFilter'
     * @return original return type: 'java.lang.String[]'
     */
    public listSync(var0: java_io_FilenameFilter | null): (string | null)[] | null;
    // ================== Method getParentFile ==================
    /**
     * @return original return type: 'java.io.File'
     */
    public getParentFile(): Promise<File | null>;
    // ================== Method getParentFile ==================
    /**
     * @return original return type: 'java.io.File'
     */
    public getParentFileSync(): File | null;
    // ================== Method getPath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getPath(): Promise<string | null>;
    // ================== Method getPath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getPathSync(): string | null;
    // ================== Method getAbsolutePath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getAbsolutePath(): Promise<string | null>;
    // ================== Method getAbsolutePath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getAbsolutePathSync(): string | null;
    // ================== Method getAbsoluteFile ==================
    /**
     * @return original return type: 'java.io.File'
     */
    public getAbsoluteFile(): Promise<File | null>;
    // ================== Method getAbsoluteFile ==================
    /**
     * @return original return type: 'java.io.File'
     */
    public getAbsoluteFileSync(): File | null;
    // ================== Method getCanonicalFile ==================
    /**
     * @return original return type: 'java.io.File'
     */
    public getCanonicalFile(): Promise<File | null>;
    // ================== Method getCanonicalFile ==================
    /**
     * @return original return type: 'java.io.File'
     */
    public getCanonicalFileSync(): File | null;
    // ================== Method toURL ==================
    /**
     * @return original return type: 'java.net.URL'
     */
    public toURL(): Promise<java_net_URL | null>;
    // ================== Method toURL ==================
    /**
     * @return original return type: 'java.net.URL'
     */
    public toURLSync(): java_net_URL | null;
    // ================== Method toURI ==================
    /**
     * @return original return type: 'java.net.URI'
     */
    public toURI(): Promise<java_net_URI | null>;
    // ================== Method toURI ==================
    /**
     * @return original return type: 'java.net.URI'
     */
    public toURISync(): java_net_URI | null;
    // ================== Method canRead ==================
    /**
     * @return original return type: 'boolean'
     */
    public canRead(): Promise<boolean>;
    // ================== Method canRead ==================
    /**
     * @return original return type: 'boolean'
     */
    public canReadSync(): boolean;
    // ================== Method canWrite ==================
    /**
     * @return original return type: 'boolean'
     */
    public canWrite(): Promise<boolean>;
    // ================== Method canWrite ==================
    /**
     * @return original return type: 'boolean'
     */
    public canWriteSync(): boolean;
    // ================== Method exists ==================
    /**
     * @return original return type: 'boolean'
     */
    public exists(): Promise<boolean>;
    // ================== Method exists ==================
    /**
     * @return original return type: 'boolean'
     */
    public existsSync(): boolean;
    // ================== Method isDirectory ==================
    /**
     * @return original return type: 'boolean'
     */
    public isDirectory(): Promise<boolean>;
    // ================== Method isDirectory ==================
    /**
     * @return original return type: 'boolean'
     */
    public isDirectorySync(): boolean;
    // ================== Method isFile ==================
    /**
     * @return original return type: 'boolean'
     */
    public isFile(): Promise<boolean>;
    // ================== Method isFile ==================
    /**
     * @return original return type: 'boolean'
     */
    public isFileSync(): boolean;
    // ================== Method isHidden ==================
    /**
     * @return original return type: 'boolean'
     */
    public isHidden(): Promise<boolean>;
    // ================== Method isHidden ==================
    /**
     * @return original return type: 'boolean'
     */
    public isHiddenSync(): boolean;
    // ================== Method lastModified ==================
    /**
     * @return original return type: 'long'
     */
    public lastModified(): Promise<number>;
    // ================== Method lastModified ==================
    /**
     * @return original return type: 'long'
     */
    public lastModifiedSync(): number;
    // ================== Method createNewFile ==================
    /**
     * @return original return type: 'boolean'
     */
    public createNewFile(): Promise<boolean>;
    // ================== Method createNewFile ==================
    /**
     * @return original return type: 'boolean'
     */
    public createNewFileSync(): boolean;
    // ================== Method deleteOnExit ==================
    /**
     * @return original return type: 'void'
     */
    public deleteOnExit(): Promise<void>;
    // ================== Method deleteOnExit ==================
    /**
     * @return original return type: 'void'
     */
    public deleteOnExitSync(): void;
    // ================== Method listFiles ==================
    /**
     * @return original return type: 'java.io.File[]'
     */
    public listFiles(): Promise<(File | null)[] | null>;
    // ================== Method listFiles ==================
    /**
     * @return original return type: 'java.io.File[]'
     */
    public listFilesSync(): (File | null)[] | null;
    /**
     * @param var0 original type: 'java.io.FileFilter'
     * @return original return type: 'java.io.File[]'
     */
    public listFiles(var0: java_io_FileFilter | null): Promise<(File | null)[] | null>;
    /**
     * @param var0 original type: 'java.io.FileFilter'
     * @return original return type: 'java.io.File[]'
     */
    public listFilesSync(var0: java_io_FileFilter | null): (File | null)[] | null;
    /**
     * @param var0 original type: 'java.io.FilenameFilter'
     * @return original return type: 'java.io.File[]'
     */
    public listFiles(var0: java_io_FilenameFilter | null): Promise<(File | null)[] | null>;
    /**
     * @param var0 original type: 'java.io.FilenameFilter'
     * @return original return type: 'java.io.File[]'
     */
    public listFilesSync(var0: java_io_FilenameFilter | null): (File | null)[] | null;
    // ================== Method mkdir ==================
    /**
     * @return original return type: 'boolean'
     */
    public mkdir(): Promise<boolean>;
    // ================== Method mkdir ==================
    /**
     * @return original return type: 'boolean'
     */
    public mkdirSync(): boolean;
    // ================== Method mkdirs ==================
    /**
     * @return original return type: 'boolean'
     */
    public mkdirs(): Promise<boolean>;
    // ================== Method mkdirs ==================
    /**
     * @return original return type: 'boolean'
     */
    public mkdirsSync(): boolean;
    // ================== Method renameTo ==================
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    public renameTo(var0: FileClass | null): Promise<boolean>;
    // ================== Method renameTo ==================
    /**
     * @param var0 original type: 'java.io.File'
     * @return original return type: 'boolean'
     */
    public renameToSync(var0: FileClass | null): boolean;
    // ================== Method setLastModified ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'boolean'
     */
    public setLastModified(var0: java_lang_Long | bigint | number): Promise<boolean>;
    // ================== Method setLastModified ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'boolean'
     */
    public setLastModifiedSync(var0: java_lang_Long | bigint | number): boolean;
    // ================== Method setWritable ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setWritable(var0: java_lang_Boolean | boolean): Promise<boolean>;
    // ================== Method setWritable ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setWritableSync(var0: java_lang_Boolean | boolean): boolean;
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setWritable(var0: java_lang_Boolean | boolean, var1: java_lang_Boolean | boolean): Promise<boolean>;
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setWritableSync(var0: java_lang_Boolean | boolean, var1: java_lang_Boolean | boolean): boolean;
    // ================== Method setReadable ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setReadable(var0: java_lang_Boolean | boolean, var1: java_lang_Boolean | boolean): Promise<boolean>;
    // ================== Method setReadable ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setReadableSync(var0: java_lang_Boolean | boolean, var1: java_lang_Boolean | boolean): boolean;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setReadable(var0: java_lang_Boolean | boolean): Promise<boolean>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setReadableSync(var0: java_lang_Boolean | boolean): boolean;
    // ================== Method setExecutable ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setExecutable(var0: java_lang_Boolean | boolean, var1: java_lang_Boolean | boolean): Promise<boolean>;
    // ================== Method setExecutable ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setExecutableSync(var0: java_lang_Boolean | boolean, var1: java_lang_Boolean | boolean): boolean;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setExecutable(var0: java_lang_Boolean | boolean): Promise<boolean>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public setExecutableSync(var0: java_lang_Boolean | boolean): boolean;
    // ================== Method canExecute ==================
    /**
     * @return original return type: 'boolean'
     */
    public canExecute(): Promise<boolean>;
    // ================== Method canExecute ==================
    /**
     * @return original return type: 'boolean'
     */
    public canExecuteSync(): boolean;
    // ================== Method listRoots ==================
    /**
     * @return original return type: 'java.io.File[]'
     */
    public static listRoots(): Promise<(File | null)[] | null>;
    // ================== Method listRoots ==================
    /**
     * @return original return type: 'java.io.File[]'
     */
    public static listRootsSync(): (File | null)[] | null;
    // ================== Method getTotalSpace ==================
    /**
     * @return original return type: 'long'
     */
    public getTotalSpace(): Promise<number>;
    // ================== Method getTotalSpace ==================
    /**
     * @return original return type: 'long'
     */
    public getTotalSpaceSync(): number;
    // ================== Method getFreeSpace ==================
    /**
     * @return original return type: 'long'
     */
    public getFreeSpace(): Promise<number>;
    // ================== Method getFreeSpace ==================
    /**
     * @return original return type: 'long'
     */
    public getFreeSpaceSync(): number;
    // ================== Method getUsableSpace ==================
    /**
     * @return original return type: 'long'
     */
    public getUsableSpace(): Promise<number>;
    // ================== Method getUsableSpace ==================
    /**
     * @return original return type: 'long'
     */
    public getUsableSpaceSync(): number;
    // ================== Method createTempFile ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.io.File'
     * @return original return type: 'java.io.File'
     */
    public static createTempFile(var0: string | null, var1: string | null, var2: FileClass | null): Promise<File | null>;
    // ================== Method createTempFile ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.io.File'
     * @return original return type: 'java.io.File'
     */
    public static createTempFileSync(var0: string | null, var1: string | null, var2: FileClass | null): File | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.io.File'
     */
    public static createTempFile(var0: string | null, var1: string | null): Promise<File | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.io.File'
     */
    public static createTempFileSync(var0: string | null, var1: string | null): File | null;
    // ================== Method toPath ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public toPath(): Promise<java_nio_file_Path | null>;
    // ================== Method toPath ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public toPathSync(): java_nio_file_Path | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
    // ================== Method newInstance ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.io.File'
     */
    public static newInstance(var0: string | null, var1: string | null): Promise<File>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.io.File'
     */
    public static newInstance(var0: string | null): Promise<File>;
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.io.File'
     */
    public static newInstance(var0: FileClass | null, var1: string | null): Promise<File>;
    /**
     * @param var0 original type: 'java.net.URI'
     * @return original return type: 'java.io.File'
     */
    public static newInstance(var0: java_net_URI | null): Promise<File>;
    // ================== Constructors ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     */
    public constructor(var0: string | null, var1: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     */
    public constructor(var0: string | null);
    /**
     * @param var0 original type: 'java.io.File'
     * @param var1 original type: 'java.lang.String'
     */
    public constructor(var0: FileClass | null, var1: string | null);
    /**
     * @param var0 original type: 'java.net.URI'
     */
    public constructor(var0: java_net_URI | null);
}

/**
 * Class java.io.File.
 *
 * This actually imports the java class for further use.
 * The class FileClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class File extends importClass<typeof FileClass>("java.io.File") {
}
export default File;