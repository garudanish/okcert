import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Map as java_util_Map } from "./../util/Map";
import { ZoneRules as java_time_zone_ZoneRules } from "./zone/ZoneRules";
import { Set as java_util_Set } from "./../util/Set";
import { ZoneOffset as java_time_ZoneOffset } from "./ZoneOffset";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./temporal/TemporalAccessor";
import { TextStyle as java_time_format_TextStyle } from "./format/TextStyle";
import { Locale as java_util_Locale } from "./../util/Locale";
import { Long as java_lang_Long } from "./../lang/Long";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import ZoneId instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ZoneIdClass extends JavaClass {
    // ================== Field SHORT_IDS ==================
    /**
     * Original type: 'java.util.Map'
     */
    public static readonly SHORT_IDS: java_util_Map | null;
    // ================== Method systemDefault ==================
    /**
     * @return original return type: 'java.time.ZoneId'
     */
    public static systemDefault(): Promise<ZoneId | null>;
    // ================== Method systemDefault ==================
    /**
     * @return original return type: 'java.time.ZoneId'
     */
    public static systemDefaultSync(): ZoneId | null;
    // ================== Method getRules ==================
    /**
     * @return original return type: 'java.time.zone.ZoneRules'
     */
    public getRules(): Promise<java_time_zone_ZoneRules | null>;
    // ================== Method getRules ==================
    /**
     * @return original return type: 'java.time.zone.ZoneRules'
     */
    public getRulesSync(): java_time_zone_ZoneRules | null;
    // ================== Method getAvailableZoneIds ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public static getAvailableZoneIds(): Promise<java_util_Set | null>;
    // ================== Method getAvailableZoneIds ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public static getAvailableZoneIdsSync(): java_util_Set | null;
    // ================== Method ofOffset ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.ZoneId'
     */
    public static ofOffset(var0: string | null, var1: java_time_ZoneOffset | null): Promise<ZoneId | null>;
    // ================== Method ofOffset ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.ZoneId'
     */
    public static ofOffsetSync(var0: string | null, var1: java_time_ZoneOffset | null): ZoneId | null;
    // ================== Method normalized ==================
    /**
     * @return original return type: 'java.time.ZoneId'
     */
    public normalized(): Promise<ZoneId | null>;
    // ================== Method normalized ==================
    /**
     * @return original return type: 'java.time.ZoneId'
     */
    public normalizedSync(): ZoneId | null;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.ZoneId'
     */
    public static from(var0: java_time_temporal_TemporalAccessor | null): Promise<ZoneId | null>;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.ZoneId'
     */
    public static fromSync(var0: java_time_temporal_TemporalAccessor | null): ZoneId | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method getId ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getId(): Promise<string | null>;
    // ================== Method getId ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getIdSync(): string | null;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Map'
     * @return original return type: 'java.time.ZoneId'
     */
    public static of(var0: string | null, var1: java_util_Map | null): Promise<ZoneId | null>;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.util.Map'
     * @return original return type: 'java.time.ZoneId'
     */
    public static ofSync(var0: string | null, var1: java_util_Map | null): ZoneId | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.time.ZoneId'
     */
    public static of(var0: string | null): Promise<ZoneId | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.time.ZoneId'
     */
    public static ofSync(var0: string | null): ZoneId | null;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.time.format.TextStyle'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayName(var0: java_time_format_TextStyle | null, var1: java_util_Locale | null): Promise<string | null>;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.time.format.TextStyle'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayNameSync(var0: java_time_format_TextStyle | null, var1: java_util_Locale | null): string | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.time.ZoneId.
 *
 * This actually imports the java class for further use.
 * The class ZoneIdClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class ZoneId extends importClass<typeof ZoneIdClass>("java.time.ZoneId") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default ZoneId;