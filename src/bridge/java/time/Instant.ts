import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Long as java_lang_Long } from "./../lang/Long";
import { Clock as java_time_Clock } from "./Clock";
import { TemporalField as java_time_temporal_TemporalField } from "./temporal/TemporalField";
import { TemporalAdjuster as java_time_temporal_TemporalAdjuster } from "./temporal/TemporalAdjuster";
import { Temporal as java_time_temporal_Temporal } from "./temporal/Temporal";
import { TemporalUnit as java_time_temporal_TemporalUnit } from "./temporal/TemporalUnit";
import { TemporalAmount as java_time_temporal_TemporalAmount } from "./temporal/TemporalAmount";
import { OffsetDateTime as java_time_OffsetDateTime } from "./OffsetDateTime";
import { ZoneOffset as java_time_ZoneOffset } from "./ZoneOffset";
import { ZonedDateTime as java_time_ZonedDateTime } from "./ZonedDateTime";
import { ZoneId as java_time_ZoneId } from "./ZoneId";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./temporal/TemporalAccessor";
import { TemporalQuery as java_time_temporal_TemporalQuery } from "./temporal/TemporalQuery";
import { CharSequence as java_lang_CharSequence } from "./../lang/CharSequence";
import { ValueRange as java_time_temporal_ValueRange } from "./temporal/ValueRange";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import Instant instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class InstantClass extends JavaClass {
    // ================== Field EPOCH ==================
    /**
     * Original type: 'java.time.Instant'
     */
    public static readonly EPOCH: InstantClass | null;
    // ================== Field MIN ==================
    /**
     * Original type: 'java.time.Instant'
     */
    public static readonly MIN: InstantClass | null;
    // ================== Field MAX ==================
    /**
     * Original type: 'java.time.Instant'
     */
    public static readonly MAX: InstantClass | null;
    // ================== Method getEpochSecond ==================
    /**
     * @return original return type: 'long'
     */
    public getEpochSecond(): Promise<number>;
    // ================== Method getEpochSecond ==================
    /**
     * @return original return type: 'long'
     */
    public getEpochSecondSync(): number;
    // ================== Method getNano ==================
    /**
     * @return original return type: 'int'
     */
    public getNano(): Promise<number>;
    // ================== Method getNano ==================
    /**
     * @return original return type: 'int'
     */
    public getNanoSync(): number;
    // ================== Method ofEpochSecond ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public static ofEpochSecond(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method ofEpochSecond ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public static ofEpochSecondSync(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number): Instant | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public static ofEpochSecond(var0: java_lang_Long | bigint | number): Promise<Instant | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public static ofEpochSecondSync(var0: java_lang_Long | bigint | number): Instant | null;
    // ================== Method now ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public static now(): Promise<Instant | null>;
    // ================== Method now ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public static nowSync(): Instant | null;
    /**
     * @param var0 original type: 'java.time.Clock'
     * @return original return type: 'java.time.Instant'
     */
    public static now(var0: java_time_Clock | null): Promise<Instant | null>;
    /**
     * @param var0 original type: 'java.time.Clock'
     * @return original return type: 'java.time.Instant'
     */
    public static nowSync(var0: java_time_Clock | null): Instant | null;
    // ================== Method ofEpochMilli ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public static ofEpochMilli(var0: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method ofEpochMilli ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public static ofEpochMilliSync(var0: java_lang_Long | bigint | number): Instant | null;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Instant | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.Instant'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<Instant | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.Instant'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): Instant | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
    // ================== Method truncatedTo ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Instant'
     */
    public truncatedTo(var0: java_time_temporal_TemporalUnit | null): Promise<Instant | null>;
    // ================== Method truncatedTo ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Instant'
     */
    public truncatedToSync(var0: java_time_temporal_TemporalUnit | null): Instant | null;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.Instant'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<Instant | null>;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.Instant'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): Instant | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Instant'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<Instant | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Instant'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Instant | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    // ================== Method plusSeconds ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public plusSeconds(var0: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method plusSeconds ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public plusSecondsSync(var0: java_lang_Long | bigint | number): Instant | null;
    // ================== Method plusMillis ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public plusMillis(var0: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method plusMillis ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public plusMillisSync(var0: java_lang_Long | bigint | number): Instant | null;
    // ================== Method plusNanos ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public plusNanos(var0: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method plusNanos ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public plusNanosSync(var0: java_lang_Long | bigint | number): Instant | null;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.Instant'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<Instant | null>;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.Instant'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): Instant | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Instant'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<Instant | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.Instant'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Instant | null;
    // ================== Method minusSeconds ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public minusSeconds(var0: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method minusSeconds ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public minusSecondsSync(var0: java_lang_Long | bigint | number): Instant | null;
    // ================== Method minusMillis ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public minusMillis(var0: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method minusMillis ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public minusMillisSync(var0: java_lang_Long | bigint | number): Instant | null;
    // ================== Method minusNanos ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public minusNanos(var0: java_lang_Long | bigint | number): Promise<Instant | null>;
    // ================== Method minusNanos ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Instant'
     */
    public minusNanosSync(var0: java_lang_Long | bigint | number): Instant | null;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustInto(var0: java_time_temporal_Temporal | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustIntoSync(var0: java_time_temporal_Temporal | null): java_time_temporal_Temporal | null;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public until(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): Promise<number>;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public untilSync(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): number;
    // ================== Method atOffset ==================
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public atOffset(var0: java_time_ZoneOffset | null): Promise<java_time_OffsetDateTime | null>;
    // ================== Method atOffset ==================
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public atOffsetSync(var0: java_time_ZoneOffset | null): java_time_OffsetDateTime | null;
    // ================== Method atZone ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public atZone(var0: java_time_ZoneId | null): Promise<java_time_ZonedDateTime | null>;
    // ================== Method atZone ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public atZoneSync(var0: java_time_ZoneId | null): java_time_ZonedDateTime | null;
    // ================== Method toEpochMilli ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochMilli(): Promise<number>;
    // ================== Method toEpochMilli ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochMilliSync(): number;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    public isAfter(var0: InstantClass | null): Promise<boolean>;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    public isAfterSync(var0: InstantClass | null): boolean;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    public isBefore(var0: InstantClass | null): Promise<boolean>;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    public isBeforeSync(var0: InstantClass | null): boolean;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.Instant'
     */
    public static from(var0: java_time_temporal_TemporalAccessor | null): Promise<Instant | null>;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.Instant'
     */
    public static fromSync(var0: java_time_temporal_TemporalAccessor | null): Instant | null;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public get(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public getSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'int'
     */
    public compareTo(var0: InstantClass | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'int'
     */
    public compareToSync(var0: InstantClass | null): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLong(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLongSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public query(var0: java_time_temporal_TemporalQuery | null): Promise<BasicOrJavaType | null>;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public querySync(var0: java_time_temporal_TemporalQuery | null): BasicOrJavaType | null;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalField | null): Promise<boolean>;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalField | null): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalUnit | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalUnit | null): boolean;
    // ================== Method parse ==================
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.time.Instant'
     */
    public static parse(var0: java_lang_CharSequence | null): Promise<Instant | null>;
    // ================== Method parse ==================
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.time.Instant'
     */
    public static parseSync(var0: java_lang_CharSequence | null): Instant | null;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(var0: java_time_temporal_TemporalField | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(var0: java_time_temporal_TemporalField | null): java_time_temporal_ValueRange | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.time.Instant.
 *
 * This actually imports the java class for further use.
 * The class InstantClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Instant extends importClass<typeof InstantClass>("java.time.Instant") {
}
export default Instant;