import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { List as java_util_List } from "./../../util/List";
import { LocalDateTime as java_time_LocalDateTime } from "./../LocalDateTime";
import { ZoneOffsetTransition as java_time_zone_ZoneOffsetTransition } from "./ZoneOffsetTransition";
import { ZoneOffset as java_time_ZoneOffset } from "./../ZoneOffset";
import { Instant as java_time_Instant } from "./../Instant";
import { Duration as java_time_Duration } from "./../Duration";
import { Long as java_lang_Long } from "./../../lang/Long";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { Class as java_lang_Class } from "./../../lang/Class";

/**
 * This class just defines types, you should import ZoneRules instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ZoneRulesClass extends JavaClass {
    // ================== Method getValidOffsets ==================
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @return original return type: 'java.util.List'
     */
    public getValidOffsets(var0: java_time_LocalDateTime | null): Promise<java_util_List | null>;
    // ================== Method getValidOffsets ==================
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @return original return type: 'java.util.List'
     */
    public getValidOffsetsSync(var0: java_time_LocalDateTime | null): java_util_List | null;
    // ================== Method getTransition ==================
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @return original return type: 'java.time.zone.ZoneOffsetTransition'
     */
    public getTransition(var0: java_time_LocalDateTime | null): Promise<java_time_zone_ZoneOffsetTransition | null>;
    // ================== Method getTransition ==================
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @return original return type: 'java.time.zone.ZoneOffsetTransition'
     */
    public getTransitionSync(var0: java_time_LocalDateTime | null): java_time_zone_ZoneOffsetTransition | null;
    // ================== Method isValidOffset ==================
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @param var1 original type: 'java.time.ZoneOffset'
     * @return original return type: 'boolean'
     */
    public isValidOffset(var0: java_time_LocalDateTime | null, var1: java_time_ZoneOffset | null): Promise<boolean>;
    // ================== Method isValidOffset ==================
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @param var1 original type: 'java.time.ZoneOffset'
     * @return original return type: 'boolean'
     */
    public isValidOffsetSync(var0: java_time_LocalDateTime | null, var1: java_time_ZoneOffset | null): boolean;
    // ================== Method getStandardOffset ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getStandardOffset(var0: java_time_Instant | null): Promise<java_time_ZoneOffset | null>;
    // ================== Method getStandardOffset ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getStandardOffsetSync(var0: java_time_Instant | null): java_time_ZoneOffset | null;
    // ================== Method getDaylightSavings ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.Duration'
     */
    public getDaylightSavings(var0: java_time_Instant | null): Promise<java_time_Duration | null>;
    // ================== Method getDaylightSavings ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.Duration'
     */
    public getDaylightSavingsSync(var0: java_time_Instant | null): java_time_Duration | null;
    // ================== Method isDaylightSavings ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    public isDaylightSavings(var0: java_time_Instant | null): Promise<boolean>;
    // ================== Method isDaylightSavings ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'boolean'
     */
    public isDaylightSavingsSync(var0: java_time_Instant | null): boolean;
    // ================== Method nextTransition ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.zone.ZoneOffsetTransition'
     */
    public nextTransition(var0: java_time_Instant | null): Promise<java_time_zone_ZoneOffsetTransition | null>;
    // ================== Method nextTransition ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.zone.ZoneOffsetTransition'
     */
    public nextTransitionSync(var0: java_time_Instant | null): java_time_zone_ZoneOffsetTransition | null;
    // ================== Method previousTransition ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.zone.ZoneOffsetTransition'
     */
    public previousTransition(var0: java_time_Instant | null): Promise<java_time_zone_ZoneOffsetTransition | null>;
    // ================== Method previousTransition ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.zone.ZoneOffsetTransition'
     */
    public previousTransitionSync(var0: java_time_Instant | null): java_time_zone_ZoneOffsetTransition | null;
    // ================== Method getTransitions ==================
    /**
     * @return original return type: 'java.util.List'
     */
    public getTransitions(): Promise<java_util_List | null>;
    // ================== Method getTransitions ==================
    /**
     * @return original return type: 'java.util.List'
     */
    public getTransitionsSync(): java_util_List | null;
    // ================== Method getTransitionRules ==================
    /**
     * @return original return type: 'java.util.List'
     */
    public getTransitionRules(): Promise<java_util_List | null>;
    // ================== Method getTransitionRules ==================
    /**
     * @return original return type: 'java.util.List'
     */
    public getTransitionRulesSync(): java_util_List | null;
    // ================== Method isFixedOffset ==================
    /**
     * @return original return type: 'boolean'
     */
    public isFixedOffset(): Promise<boolean>;
    // ================== Method isFixedOffset ==================
    /**
     * @return original return type: 'boolean'
     */
    public isFixedOffsetSync(): boolean;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @param var1 original type: 'java.time.ZoneOffset'
     * @param var2 original type: 'java.util.List'
     * @param var3 original type: 'java.util.List'
     * @param var4 original type: 'java.util.List'
     * @return original return type: 'java.time.zone.ZoneRules'
     */
    public static of(var0: java_time_ZoneOffset | null, var1: java_time_ZoneOffset | null, var2: java_util_List | null, var3: java_util_List | null, var4: java_util_List | null): Promise<ZoneRules | null>;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @param var1 original type: 'java.time.ZoneOffset'
     * @param var2 original type: 'java.util.List'
     * @param var3 original type: 'java.util.List'
     * @param var4 original type: 'java.util.List'
     * @return original return type: 'java.time.zone.ZoneRules'
     */
    public static ofSync(var0: java_time_ZoneOffset | null, var1: java_time_ZoneOffset | null, var2: java_util_List | null, var3: java_util_List | null, var4: java_util_List | null): ZoneRules | null;
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.zone.ZoneRules'
     */
    public static of(var0: java_time_ZoneOffset | null): Promise<ZoneRules | null>;
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.zone.ZoneRules'
     */
    public static ofSync(var0: java_time_ZoneOffset | null): ZoneRules | null;
    // ================== Method getOffset ==================
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getOffset(var0: java_time_LocalDateTime | null): Promise<java_time_ZoneOffset | null>;
    // ================== Method getOffset ==================
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getOffsetSync(var0: java_time_LocalDateTime | null): java_time_ZoneOffset | null;
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getOffset(var0: java_time_Instant | null): Promise<java_time_ZoneOffset | null>;
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getOffsetSync(var0: java_time_Instant | null): java_time_ZoneOffset | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.time.zone.ZoneRules.
 *
 * This actually imports the java class for further use.
 * The class ZoneRulesClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class ZoneRules extends importClass<typeof ZoneRulesClass>("java.time.zone.ZoneRules") {
}
export default ZoneRules;