import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Boolean as java_lang_Boolean } from "./../lang/Boolean";
import { Long as java_lang_Long } from "./../lang/Long";
import { Temporal as java_time_temporal_Temporal } from "./temporal/Temporal";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./temporal/TemporalAccessor";
import { TemporalField as java_time_temporal_TemporalField } from "./temporal/TemporalField";
import { Enum as java_lang_Enum } from "./../lang/Enum";
import { Class as java_lang_Class } from "./../lang/Class";
import { TemporalQuery as java_time_temporal_TemporalQuery } from "./temporal/TemporalQuery";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { ValueRange as java_time_temporal_ValueRange } from "./temporal/ValueRange";
import { TextStyle as java_time_format_TextStyle } from "./format/TextStyle";
import { Locale as java_util_Locale } from "./../util/Locale";

/**
 * This class just defines types, you should import Month instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class MonthClass extends JavaClass {
    // ================== Field JANUARY ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly JANUARY: MonthClass | null;
    // ================== Field FEBRUARY ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly FEBRUARY: MonthClass | null;
    // ================== Field MARCH ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly MARCH: MonthClass | null;
    // ================== Field APRIL ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly APRIL: MonthClass | null;
    // ================== Field MAY ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly MAY: MonthClass | null;
    // ================== Field JUNE ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly JUNE: MonthClass | null;
    // ================== Field JULY ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly JULY: MonthClass | null;
    // ================== Field AUGUST ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly AUGUST: MonthClass | null;
    // ================== Field SEPTEMBER ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly SEPTEMBER: MonthClass | null;
    // ================== Field OCTOBER ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly OCTOBER: MonthClass | null;
    // ================== Field NOVEMBER ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly NOVEMBER: MonthClass | null;
    // ================== Field DECEMBER ==================
    /**
     * Original type: 'java.time.Month'
     */
    public static readonly DECEMBER: MonthClass | null;
    // ================== Method firstDayOfYear ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'int'
     */
    public firstDayOfYear(var0: java_lang_Boolean | boolean): Promise<number>;
    // ================== Method firstDayOfYear ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'int'
     */
    public firstDayOfYearSync(var0: java_lang_Boolean | boolean): number;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Month'
     */
    public plus(var0: java_lang_Long | bigint | number): Promise<Month | null>;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Month'
     */
    public plusSync(var0: java_lang_Long | bigint | number): Month | null;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Month'
     */
    public minus(var0: java_lang_Long | bigint | number): Promise<Month | null>;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.Month'
     */
    public minusSync(var0: java_lang_Long | bigint | number): Month | null;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustInto(var0: java_time_temporal_Temporal | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustIntoSync(var0: java_time_temporal_Temporal | null): java_time_temporal_Temporal | null;
    // ================== Method maxLength ==================
    /**
     * @return original return type: 'int'
     */
    public maxLength(): Promise<number>;
    // ================== Method maxLength ==================
    /**
     * @return original return type: 'int'
     */
    public maxLengthSync(): number;
    // ================== Method minLength ==================
    /**
     * @return original return type: 'int'
     */
    public minLength(): Promise<number>;
    // ================== Method minLength ==================
    /**
     * @return original return type: 'int'
     */
    public minLengthSync(): number;
    // ================== Method firstMonthOfQuarter ==================
    /**
     * @return original return type: 'java.time.Month'
     */
    public firstMonthOfQuarter(): Promise<Month | null>;
    // ================== Method firstMonthOfQuarter ==================
    /**
     * @return original return type: 'java.time.Month'
     */
    public firstMonthOfQuarterSync(): Month | null;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.Month'
     */
    public static from(var0: java_time_temporal_TemporalAccessor | null): Promise<Month | null>;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.Month'
     */
    public static fromSync(var0: java_time_temporal_TemporalAccessor | null): Month | null;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public get(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public getSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method values ==================
    /**
     * @return original return type: 'java.time.Month[]'
     */
    public static values(): Promise<(Month | null)[] | null>;
    // ================== Method values ==================
    /**
     * @return original return type: 'java.time.Month[]'
     */
    public static valuesSync(): (Month | null)[] | null;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLong(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLongSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method valueOf ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.time.Month'
     */
    public static valueOf(var0: string | null): Promise<Month | null>;
    // ================== Method valueOf ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.time.Month'
     */
    public static valueOfSync(var0: string | null): Month | null;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Enum'
     */
    public static valueOf(var0: java_lang_Class | null, var1: string | null): Promise<java_lang_Enum | null>;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Enum'
     */
    public static valueOfSync(var0: java_lang_Class | null, var1: string | null): java_lang_Enum | null;
    // ================== Method length ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'int'
     */
    public length(var0: java_lang_Boolean | boolean): Promise<number>;
    // ================== Method length ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'int'
     */
    public lengthSync(var0: java_lang_Boolean | boolean): number;
    // ================== Method getValue ==================
    /**
     * @return original return type: 'int'
     */
    public getValue(): Promise<number>;
    // ================== Method getValue ==================
    /**
     * @return original return type: 'int'
     */
    public getValueSync(): number;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public query(var0: java_time_temporal_TemporalQuery | null): Promise<BasicOrJavaType | null>;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public querySync(var0: java_time_temporal_TemporalQuery | null): BasicOrJavaType | null;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.Month'
     */
    public static of(var0: java_lang_Integer | number): Promise<Month | null>;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.Month'
     */
    public static ofSync(var0: java_lang_Integer | number): Month | null;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalField | null): Promise<boolean>;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalField | null): boolean;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(var0: java_time_temporal_TemporalField | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(var0: java_time_temporal_TemporalField | null): java_time_temporal_ValueRange | null;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.time.format.TextStyle'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayName(var0: java_time_format_TextStyle | null, var1: java_util_Locale | null): Promise<string | null>;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.time.format.TextStyle'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayNameSync(var0: java_time_format_TextStyle | null, var1: java_util_Locale | null): string | null;
    // ================== Method name ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public name(): Promise<string | null>;
    // ================== Method name ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public nameSync(): string | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.lang.Enum'
     * @return original return type: 'int'
     */
    public compareTo(var0: java_lang_Enum | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Enum'
     * @return original return type: 'int'
     */
    public compareToSync(var0: java_lang_Enum | null): number;
    // ================== Method getDeclaringClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getDeclaringClass(): Promise<java_lang_Class | null>;
    // ================== Method getDeclaringClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getDeclaringClassSync(): java_lang_Class | null;
    // ================== Method ordinal ==================
    /**
     * @return original return type: 'int'
     */
    public ordinal(): Promise<number>;
    // ================== Method ordinal ==================
    /**
     * @return original return type: 'int'
     */
    public ordinalSync(): number;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.time.Month.
 *
 * This actually imports the java class for further use.
 * The class MonthClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Month extends importClass<typeof MonthClass>("java.time.Month") {
}
export default Month;