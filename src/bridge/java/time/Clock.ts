import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Instant as java_time_Instant } from "./Instant";
import { ZoneId as java_time_ZoneId } from "./ZoneId";
import { Duration as java_time_Duration } from "./Duration";
import { Long as java_lang_Long } from "./../lang/Long";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import Clock instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ClockClass extends JavaClass {
    // ================== Method instant ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public instant(): Promise<java_time_Instant | null>;
    // ================== Method instant ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public instantSync(): java_time_Instant | null;
    // ================== Method systemUTC ==================
    /**
     * @return original return type: 'java.time.Clock'
     */
    public static systemUTC(): Promise<Clock | null>;
    // ================== Method systemUTC ==================
    /**
     * @return original return type: 'java.time.Clock'
     */
    public static systemUTCSync(): Clock | null;
    // ================== Method systemDefaultZone ==================
    /**
     * @return original return type: 'java.time.Clock'
     */
    public static systemDefaultZone(): Promise<Clock | null>;
    // ================== Method systemDefaultZone ==================
    /**
     * @return original return type: 'java.time.Clock'
     */
    public static systemDefaultZoneSync(): Clock | null;
    // ================== Method tickSeconds ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public static tickSeconds(var0: java_time_ZoneId | null): Promise<Clock | null>;
    // ================== Method tickSeconds ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public static tickSecondsSync(var0: java_time_ZoneId | null): Clock | null;
    // ================== Method tickMinutes ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public static tickMinutes(var0: java_time_ZoneId | null): Promise<Clock | null>;
    // ================== Method tickMinutes ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public static tickMinutesSync(var0: java_time_ZoneId | null): Clock | null;
    // ================== Method tick ==================
    /**
     * @param var0 original type: 'java.time.Clock'
     * @param var1 original type: 'java.time.Duration'
     * @return original return type: 'java.time.Clock'
     */
    public static tick(var0: ClockClass | null, var1: java_time_Duration | null): Promise<Clock | null>;
    // ================== Method tick ==================
    /**
     * @param var0 original type: 'java.time.Clock'
     * @param var1 original type: 'java.time.Duration'
     * @return original return type: 'java.time.Clock'
     */
    public static tickSync(var0: ClockClass | null, var1: java_time_Duration | null): Clock | null;
    // ================== Method fixed ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @param var1 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public static fixed(var0: java_time_Instant | null, var1: java_time_ZoneId | null): Promise<Clock | null>;
    // ================== Method fixed ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @param var1 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public static fixedSync(var0: java_time_Instant | null, var1: java_time_ZoneId | null): Clock | null;
    // ================== Method getZone ==================
    /**
     * @return original return type: 'java.time.ZoneId'
     */
    public getZone(): Promise<java_time_ZoneId | null>;
    // ================== Method getZone ==================
    /**
     * @return original return type: 'java.time.ZoneId'
     */
    public getZoneSync(): java_time_ZoneId | null;
    // ================== Method withZone ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public withZone(var0: java_time_ZoneId | null): Promise<Clock | null>;
    // ================== Method withZone ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public withZoneSync(var0: java_time_ZoneId | null): Clock | null;
    // ================== Method millis ==================
    /**
     * @return original return type: 'long'
     */
    public millis(): Promise<number>;
    // ================== Method millis ==================
    /**
     * @return original return type: 'long'
     */
    public millisSync(): number;
    // ================== Method offset ==================
    /**
     * @param var0 original type: 'java.time.Clock'
     * @param var1 original type: 'java.time.Duration'
     * @return original return type: 'java.time.Clock'
     */
    public static offset(var0: ClockClass | null, var1: java_time_Duration | null): Promise<Clock | null>;
    // ================== Method offset ==================
    /**
     * @param var0 original type: 'java.time.Clock'
     * @param var1 original type: 'java.time.Duration'
     * @return original return type: 'java.time.Clock'
     */
    public static offsetSync(var0: ClockClass | null, var1: java_time_Duration | null): Clock | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method system ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public static system(var0: java_time_ZoneId | null): Promise<Clock | null>;
    // ================== Method system ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.Clock'
     */
    public static systemSync(var0: java_time_ZoneId | null): Clock | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.time.Clock.
 *
 * This actually imports the java class for further use.
 * The class ClockClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Clock extends importClass<typeof ClockClass>("java.time.Clock") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default Clock;