import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { IsoChronology as java_time_chrono_IsoChronology } from "./chrono/IsoChronology";
import { Chronology as java_time_chrono_Chronology } from "./chrono/Chronology";
import { Long as java_lang_Long } from "./../lang/Long";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Era as java_time_chrono_Era } from "./chrono/Era";
import { LocalDateTime as java_time_LocalDateTime } from "./LocalDateTime";
import { LocalTime as java_time_LocalTime } from "./LocalTime";
import { ChronoLocalDateTime as java_time_chrono_ChronoLocalDateTime } from "./chrono/ChronoLocalDateTime";
import { OffsetDateTime as java_time_OffsetDateTime } from "./OffsetDateTime";
import { OffsetTime as java_time_OffsetTime } from "./OffsetTime";
import { ZonedDateTime as java_time_ZonedDateTime } from "./ZonedDateTime";
import { ZoneId as java_time_ZoneId } from "./ZoneId";
import { Clock as java_time_Clock } from "./Clock";
import { TemporalField as java_time_temporal_TemporalField } from "./temporal/TemporalField";
import { ChronoLocalDate as java_time_chrono_ChronoLocalDate } from "./chrono/ChronoLocalDate";
import { TemporalAdjuster as java_time_temporal_TemporalAdjuster } from "./temporal/TemporalAdjuster";
import { Temporal as java_time_temporal_Temporal } from "./temporal/Temporal";
import { TemporalAmount as java_time_temporal_TemporalAmount } from "./temporal/TemporalAmount";
import { TemporalUnit as java_time_temporal_TemporalUnit } from "./temporal/TemporalUnit";
import { ChronoPeriod as java_time_chrono_ChronoPeriod } from "./chrono/ChronoPeriod";
import { Period as java_time_Period } from "./Period";
import { Month as java_time_Month } from "./Month";
import { DayOfWeek as java_time_DayOfWeek } from "./DayOfWeek";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./temporal/TemporalAccessor";
import { DateTimeFormatter as java_time_format_DateTimeFormatter } from "./format/DateTimeFormatter";
import { TemporalQuery as java_time_temporal_TemporalQuery } from "./temporal/TemporalQuery";
import { CharSequence as java_lang_CharSequence } from "./../lang/CharSequence";
import { ValueRange as java_time_temporal_ValueRange } from "./temporal/ValueRange";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import LocalDate instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class LocalDateClass extends JavaClass {
    // ================== Field MIN ==================
    /**
     * Original type: 'java.time.LocalDate'
     */
    public static readonly MIN: LocalDateClass | null;
    // ================== Field MAX ==================
    /**
     * Original type: 'java.time.LocalDate'
     */
    public static readonly MAX: LocalDateClass | null;
    // ================== Method toEpochDay ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochDay(): Promise<number>;
    // ================== Method toEpochDay ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochDaySync(): number;
    // ================== Method getChronology ==================
    /**
     * @return original return type: 'java.time.chrono.IsoChronology'
     */
    public getChronology(): Promise<java_time_chrono_IsoChronology | null>;
    // ================== Method getChronology ==================
    /**
     * @return original return type: 'java.time.chrono.IsoChronology'
     */
    public getChronologySync(): java_time_chrono_IsoChronology | null;
    /**
     * @return original return type: 'java.time.chrono.Chronology'
     */
    public getChronology(): Promise<java_time_chrono_Chronology | null>;
    /**
     * @return original return type: 'java.time.chrono.Chronology'
     */
    public getChronologySync(): java_time_chrono_Chronology | null;
    // ================== Method ofEpochDay ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public static ofEpochDay(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method ofEpochDay ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public static ofEpochDaySync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method isLeapYear ==================
    /**
     * @return original return type: 'boolean'
     */
    public isLeapYear(): Promise<boolean>;
    // ================== Method isLeapYear ==================
    /**
     * @return original return type: 'boolean'
     */
    public isLeapYearSync(): boolean;
    // ================== Method ofYearDay ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public static ofYearDay(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<LocalDate | null>;
    // ================== Method ofYearDay ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public static ofYearDaySync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): LocalDate | null;
    // ================== Method getEra ==================
    /**
     * @return original return type: 'java.time.chrono.Era'
     */
    public getEra(): Promise<java_time_chrono_Era | null>;
    // ================== Method getEra ==================
    /**
     * @return original return type: 'java.time.chrono.Era'
     */
    public getEraSync(): java_time_chrono_Era | null;
    // ================== Method lengthOfMonth ==================
    /**
     * @return original return type: 'int'
     */
    public lengthOfMonth(): Promise<number>;
    // ================== Method lengthOfMonth ==================
    /**
     * @return original return type: 'int'
     */
    public lengthOfMonthSync(): number;
    // ================== Method lengthOfYear ==================
    /**
     * @return original return type: 'int'
     */
    public lengthOfYear(): Promise<number>;
    // ================== Method lengthOfYear ==================
    /**
     * @return original return type: 'int'
     */
    public lengthOfYearSync(): number;
    // ================== Method atTime ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atTime(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Integer | number): Promise<java_time_LocalDateTime | null>;
    // ================== Method atTime ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atTimeSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Integer | number): java_time_LocalDateTime | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atTime(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<java_time_LocalDateTime | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atTimeSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): java_time_LocalDateTime | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atTime(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<java_time_LocalDateTime | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atTimeSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): java_time_LocalDateTime | null;
    /**
     * @param var0 original type: 'java.time.LocalTime'
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atTime(var0: java_time_LocalTime | null): Promise<java_time_LocalDateTime | null>;
    /**
     * @param var0 original type: 'java.time.LocalTime'
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atTimeSync(var0: java_time_LocalTime | null): java_time_LocalDateTime | null;
    /**
     * @param var0 original type: 'java.time.LocalTime'
     * @return original return type: 'java.time.chrono.ChronoLocalDateTime'
     */
    public atTime(var0: java_time_LocalTime | null): Promise<java_time_chrono_ChronoLocalDateTime | null>;
    /**
     * @param var0 original type: 'java.time.LocalTime'
     * @return original return type: 'java.time.chrono.ChronoLocalDateTime'
     */
    public atTimeSync(var0: java_time_LocalTime | null): java_time_chrono_ChronoLocalDateTime | null;
    /**
     * @param var0 original type: 'java.time.OffsetTime'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public atTime(var0: java_time_OffsetTime | null): Promise<java_time_OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.OffsetTime'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public atTimeSync(var0: java_time_OffsetTime | null): java_time_OffsetDateTime | null;
    // ================== Method atStartOfDay ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public atStartOfDay(var0: java_time_ZoneId | null): Promise<java_time_ZonedDateTime | null>;
    // ================== Method atStartOfDay ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public atStartOfDaySync(var0: java_time_ZoneId | null): java_time_ZonedDateTime | null;
    /**
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atStartOfDay(): Promise<java_time_LocalDateTime | null>;
    /**
     * @return original return type: 'java.time.LocalDateTime'
     */
    public atStartOfDaySync(): java_time_LocalDateTime | null;
    // ================== Method getYear ==================
    /**
     * @return original return type: 'int'
     */
    public getYear(): Promise<number>;
    // ================== Method getYear ==================
    /**
     * @return original return type: 'int'
     */
    public getYearSync(): number;
    // ================== Method getMonthValue ==================
    /**
     * @return original return type: 'int'
     */
    public getMonthValue(): Promise<number>;
    // ================== Method getMonthValue ==================
    /**
     * @return original return type: 'int'
     */
    public getMonthValueSync(): number;
    // ================== Method getDayOfMonth ==================
    /**
     * @return original return type: 'int'
     */
    public getDayOfMonth(): Promise<number>;
    // ================== Method getDayOfMonth ==================
    /**
     * @return original return type: 'int'
     */
    public getDayOfMonthSync(): number;
    // ================== Method now ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.LocalDate'
     */
    public static now(var0: java_time_ZoneId | null): Promise<LocalDate | null>;
    // ================== Method now ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.LocalDate'
     */
    public static nowSync(var0: java_time_ZoneId | null): LocalDate | null;
    /**
     * @param var0 original type: 'java.time.Clock'
     * @return original return type: 'java.time.LocalDate'
     */
    public static now(var0: java_time_Clock | null): Promise<LocalDate | null>;
    /**
     * @param var0 original type: 'java.time.Clock'
     * @return original return type: 'java.time.LocalDate'
     */
    public static nowSync(var0: java_time_Clock | null): LocalDate | null;
    /**
     * @return original return type: 'java.time.LocalDate'
     */
    public static now(): Promise<LocalDate | null>;
    /**
     * @return original return type: 'java.time.LocalDate'
     */
    public static nowSync(): LocalDate | null;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): LocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<java_time_chrono_ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): java_time_chrono_ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<java_time_chrono_ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): java_time_chrono_ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.LocalDate'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<LocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.LocalDate'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): LocalDate | null;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.LocalDate'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<LocalDate | null>;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): LocalDate | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.LocalDate'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<LocalDate | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): LocalDate | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_chrono_ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_chrono_ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_chrono_ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): java_time_chrono_ChronoLocalDate | null;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.LocalDate'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<LocalDate | null>;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): LocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_chrono_ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_chrono_ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_chrono_ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): java_time_chrono_ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.LocalDate'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<LocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): LocalDate | null;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustInto(var0: java_time_temporal_Temporal | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustIntoSync(var0: java_time_temporal_Temporal | null): java_time_temporal_Temporal | null;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'java.time.chrono.ChronoPeriod'
     */
    public until(var0: java_time_chrono_ChronoLocalDate | null): Promise<java_time_chrono_ChronoPeriod | null>;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'java.time.chrono.ChronoPeriod'
     */
    public untilSync(var0: java_time_chrono_ChronoLocalDate | null): java_time_chrono_ChronoPeriod | null;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public until(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): Promise<number>;
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public untilSync(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): number;
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'java.time.Period'
     */
    public until(var0: java_time_chrono_ChronoLocalDate | null): Promise<java_time_Period | null>;
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'java.time.Period'
     */
    public untilSync(var0: java_time_chrono_ChronoLocalDate | null): java_time_Period | null;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isAfter(var0: java_time_chrono_ChronoLocalDate | null): Promise<boolean>;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isAfterSync(var0: java_time_chrono_ChronoLocalDate | null): boolean;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isBefore(var0: java_time_chrono_ChronoLocalDate | null): Promise<boolean>;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isBeforeSync(var0: java_time_chrono_ChronoLocalDate | null): boolean;
    // ================== Method getMonth ==================
    /**
     * @return original return type: 'java.time.Month'
     */
    public getMonth(): Promise<java_time_Month | null>;
    // ================== Method getMonth ==================
    /**
     * @return original return type: 'java.time.Month'
     */
    public getMonthSync(): java_time_Month | null;
    // ================== Method getDayOfYear ==================
    /**
     * @return original return type: 'int'
     */
    public getDayOfYear(): Promise<number>;
    // ================== Method getDayOfYear ==================
    /**
     * @return original return type: 'int'
     */
    public getDayOfYearSync(): number;
    // ================== Method getDayOfWeek ==================
    /**
     * @return original return type: 'java.time.DayOfWeek'
     */
    public getDayOfWeek(): Promise<java_time_DayOfWeek | null>;
    // ================== Method getDayOfWeek ==================
    /**
     * @return original return type: 'java.time.DayOfWeek'
     */
    public getDayOfWeekSync(): java_time_DayOfWeek | null;
    // ================== Method withYear ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public withYear(var0: java_lang_Integer | number): Promise<LocalDate | null>;
    // ================== Method withYear ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public withYearSync(var0: java_lang_Integer | number): LocalDate | null;
    // ================== Method withMonth ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public withMonth(var0: java_lang_Integer | number): Promise<LocalDate | null>;
    // ================== Method withMonth ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public withMonthSync(var0: java_lang_Integer | number): LocalDate | null;
    // ================== Method withDayOfMonth ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public withDayOfMonth(var0: java_lang_Integer | number): Promise<LocalDate | null>;
    // ================== Method withDayOfMonth ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public withDayOfMonthSync(var0: java_lang_Integer | number): LocalDate | null;
    // ================== Method withDayOfYear ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public withDayOfYear(var0: java_lang_Integer | number): Promise<LocalDate | null>;
    // ================== Method withDayOfYear ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public withDayOfYearSync(var0: java_lang_Integer | number): LocalDate | null;
    // ================== Method plusYears ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusYears(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method plusYears ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusYearsSync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method plusMonths ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusMonths(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method plusMonths ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusMonthsSync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method plusWeeks ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusWeeks(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method plusWeeks ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusWeeksSync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method plusDays ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusDays(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method plusDays ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public plusDaysSync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method minusYears ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusYears(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method minusYears ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusYearsSync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method minusMonths ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusMonths(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method minusMonths ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusMonthsSync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method minusWeeks ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusWeeks(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method minusWeeks ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusWeeksSync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method minusDays ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusDays(var0: java_lang_Long | bigint | number): Promise<LocalDate | null>;
    // ================== Method minusDays ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.LocalDate'
     */
    public minusDaysSync(var0: java_lang_Long | bigint | number): LocalDate | null;
    // ================== Method isEqual ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isEqual(var0: java_time_chrono_ChronoLocalDate | null): Promise<boolean>;
    // ================== Method isEqual ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isEqualSync(var0: java_time_chrono_ChronoLocalDate | null): boolean;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.LocalDate'
     */
    public static from(var0: java_time_temporal_TemporalAccessor | null): Promise<LocalDate | null>;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.LocalDate'
     */
    public static fromSync(var0: java_time_temporal_TemporalAccessor | null): LocalDate | null;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public get(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public getSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'int'
     */
    public compareTo(var0: java_time_chrono_ChronoLocalDate | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'int'
     */
    public compareToSync(var0: java_time_chrono_ChronoLocalDate | null): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLong(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLongSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method format ==================
    /**
     * @param var0 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.lang.String'
     */
    public format(var0: java_time_format_DateTimeFormatter | null): Promise<string | null>;
    // ================== Method format ==================
    /**
     * @param var0 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.lang.String'
     */
    public formatSync(var0: java_time_format_DateTimeFormatter | null): string | null;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public query(var0: java_time_temporal_TemporalQuery | null): Promise<BasicOrJavaType | null>;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public querySync(var0: java_time_temporal_TemporalQuery | null): BasicOrJavaType | null;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public static of(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<LocalDate | null>;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public static ofSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number): LocalDate | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.time.Month'
     * @param var2 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public static of(var0: java_lang_Integer | number, var1: java_time_Month | null, var2: java_lang_Integer | number): Promise<LocalDate | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'java.time.Month'
     * @param var2 original type: 'int'
     * @return original return type: 'java.time.LocalDate'
     */
    public static ofSync(var0: java_lang_Integer | number, var1: java_time_Month | null, var2: java_lang_Integer | number): LocalDate | null;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalField | null): Promise<boolean>;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalField | null): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalUnit | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalUnit | null): boolean;
    // ================== Method parse ==================
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @param var1 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.time.LocalDate'
     */
    public static parse(var0: java_lang_CharSequence | null, var1: java_time_format_DateTimeFormatter | null): Promise<LocalDate | null>;
    // ================== Method parse ==================
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @param var1 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.time.LocalDate'
     */
    public static parseSync(var0: java_lang_CharSequence | null, var1: java_time_format_DateTimeFormatter | null): LocalDate | null;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.time.LocalDate'
     */
    public static parse(var0: java_lang_CharSequence | null): Promise<LocalDate | null>;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.time.LocalDate'
     */
    public static parseSync(var0: java_lang_CharSequence | null): LocalDate | null;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(var0: java_time_temporal_TemporalField | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(var0: java_time_temporal_TemporalField | null): java_time_temporal_ValueRange | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.time.LocalDate.
 *
 * This actually imports the java class for further use.
 * The class LocalDateClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class LocalDate extends importClass<typeof LocalDateClass>("java.time.LocalDate") {
}
export default LocalDate;