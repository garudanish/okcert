import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { ZoneId as java_time_ZoneId } from "./../ZoneId";
import { Chronology as java_time_chrono_Chronology } from "./Chronology";
import { Instant as java_time_Instant } from "./../Instant";
import { TemporalAdjuster as java_time_temporal_TemporalAdjuster } from "./../temporal/TemporalAdjuster";
import { Temporal as java_time_temporal_Temporal } from "./../temporal/Temporal";
import { TemporalField as java_time_temporal_TemporalField } from "./../temporal/TemporalField";
import { Long as java_lang_Long } from "./../../lang/Long";
import { TemporalUnit as java_time_temporal_TemporalUnit } from "./../temporal/TemporalUnit";
import { TemporalAmount as java_time_temporal_TemporalAmount } from "./../temporal/TemporalAmount";
import { Comparator as java_util_Comparator } from "./../../util/Comparator";
import { ChronoLocalDateTime as java_time_chrono_ChronoLocalDateTime } from "./ChronoLocalDateTime";
import { ChronoLocalDate as java_time_chrono_ChronoLocalDate } from "./ChronoLocalDate";
import { LocalTime as java_time_LocalTime } from "./../LocalTime";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./../temporal/TemporalAccessor";
import { DateTimeFormatter as java_time_format_DateTimeFormatter } from "./../format/DateTimeFormatter";
import { TemporalQuery as java_time_temporal_TemporalQuery } from "./../temporal/TemporalQuery";
import { ZoneOffset as java_time_ZoneOffset } from "./../ZoneOffset";
import { ValueRange as java_time_temporal_ValueRange } from "./../temporal/ValueRange";

/**
 * This class just defines types, you should import ChronoZonedDateTime instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ChronoZonedDateTimeClass extends JavaClass {
    // ================== Method withEarlierOffsetAtOverlap ==================
    /**
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withEarlierOffsetAtOverlap(): Promise<ChronoZonedDateTime | null>;
    // ================== Method withEarlierOffsetAtOverlap ==================
    /**
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withEarlierOffsetAtOverlapSync(): ChronoZonedDateTime | null;
    // ================== Method withLaterOffsetAtOverlap ==================
    /**
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withLaterOffsetAtOverlap(): Promise<ChronoZonedDateTime | null>;
    // ================== Method withLaterOffsetAtOverlap ==================
    /**
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withLaterOffsetAtOverlapSync(): ChronoZonedDateTime | null;
    // ================== Method withZoneSameLocal ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withZoneSameLocal(var0: java_time_ZoneId | null): Promise<ChronoZonedDateTime | null>;
    // ================== Method withZoneSameLocal ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withZoneSameLocalSync(var0: java_time_ZoneId | null): ChronoZonedDateTime | null;
    // ================== Method withZoneSameInstant ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withZoneSameInstant(var0: java_time_ZoneId | null): Promise<ChronoZonedDateTime | null>;
    // ================== Method withZoneSameInstant ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withZoneSameInstantSync(var0: java_time_ZoneId | null): ChronoZonedDateTime | null;
    // ================== Method getChronology ==================
    /**
     * @return original return type: 'java.time.chrono.Chronology'
     */
    public getChronology(): Promise<java_time_chrono_Chronology | null>;
    // ================== Method getChronology ==================
    /**
     * @return original return type: 'java.time.chrono.Chronology'
     */
    public getChronologySync(): java_time_chrono_Chronology | null;
    // ================== Method toInstant ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public toInstant(): Promise<java_time_Instant | null>;
    // ================== Method toInstant ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public toInstantSync(): java_time_Instant | null;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<ChronoZonedDateTime | null>;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): ChronoZonedDateTime | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<ChronoZonedDateTime | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): ChronoZonedDateTime | null;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<ChronoZonedDateTime | null>;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): ChronoZonedDateTime | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<ChronoZonedDateTime | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): ChronoZonedDateTime | null;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<ChronoZonedDateTime | null>;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): ChronoZonedDateTime | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<ChronoZonedDateTime | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): ChronoZonedDateTime | null;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    public isAfter(var0: ChronoZonedDateTimeClass | null): Promise<boolean>;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    public isAfterSync(var0: ChronoZonedDateTimeClass | null): boolean;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    public isBefore(var0: ChronoZonedDateTimeClass | null): Promise<boolean>;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    public isBeforeSync(var0: ChronoZonedDateTimeClass | null): boolean;
    // ================== Method getZone ==================
    /**
     * @return original return type: 'java.time.ZoneId'
     */
    public getZone(): Promise<java_time_ZoneId | null>;
    // ================== Method getZone ==================
    /**
     * @return original return type: 'java.time.ZoneId'
     */
    public getZoneSync(): java_time_ZoneId | null;
    // ================== Method timeLineOrder ==================
    /**
     * @return original return type: 'java.util.Comparator'
     */
    public static timeLineOrder(): Promise<java_util_Comparator | null>;
    // ================== Method timeLineOrder ==================
    /**
     * @return original return type: 'java.util.Comparator'
     */
    public static timeLineOrderSync(): java_util_Comparator | null;
    // ================== Method toLocalDateTime ==================
    /**
     * @return original return type: 'java.time.chrono.ChronoLocalDateTime'
     */
    public toLocalDateTime(): Promise<java_time_chrono_ChronoLocalDateTime | null>;
    // ================== Method toLocalDateTime ==================
    /**
     * @return original return type: 'java.time.chrono.ChronoLocalDateTime'
     */
    public toLocalDateTimeSync(): java_time_chrono_ChronoLocalDateTime | null;
    // ================== Method toLocalDate ==================
    /**
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public toLocalDate(): Promise<java_time_chrono_ChronoLocalDate | null>;
    // ================== Method toLocalDate ==================
    /**
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public toLocalDateSync(): java_time_chrono_ChronoLocalDate | null;
    // ================== Method toLocalTime ==================
    /**
     * @return original return type: 'java.time.LocalTime'
     */
    public toLocalTime(): Promise<java_time_LocalTime | null>;
    // ================== Method toLocalTime ==================
    /**
     * @return original return type: 'java.time.LocalTime'
     */
    public toLocalTimeSync(): java_time_LocalTime | null;
    // ================== Method toEpochSecond ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochSecond(): Promise<number>;
    // ================== Method toEpochSecond ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochSecondSync(): number;
    // ================== Method isEqual ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    public isEqual(var0: ChronoZonedDateTimeClass | null): Promise<boolean>;
    // ================== Method isEqual ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'boolean'
     */
    public isEqualSync(var0: ChronoZonedDateTimeClass | null): boolean;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public static from(var0: java_time_temporal_TemporalAccessor | null): Promise<ChronoZonedDateTime | null>;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.chrono.ChronoZonedDateTime'
     */
    public static fromSync(var0: java_time_temporal_TemporalAccessor | null): ChronoZonedDateTime | null;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public get(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public getSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'int'
     */
    public compareTo(var0: ChronoZonedDateTimeClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.time.chrono.ChronoZonedDateTime'
     * @return original return type: 'int'
     */
    public compareToSync(var0: ChronoZonedDateTimeClass | null): number;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLong(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLongSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method format ==================
    /**
     * @param var0 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.lang.String'
     */
    public format(var0: java_time_format_DateTimeFormatter | null): Promise<string | null>;
    // ================== Method format ==================
    /**
     * @param var0 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.lang.String'
     */
    public formatSync(var0: java_time_format_DateTimeFormatter | null): string | null;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public query(var0: java_time_temporal_TemporalQuery | null): Promise<BasicOrJavaType | null>;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public querySync(var0: java_time_temporal_TemporalQuery | null): BasicOrJavaType | null;
    // ================== Method getOffset ==================
    /**
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getOffset(): Promise<java_time_ZoneOffset | null>;
    // ================== Method getOffset ==================
    /**
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getOffsetSync(): java_time_ZoneOffset | null;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalUnit | null): Promise<boolean>;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalUnit | null): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalField | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalField | null): boolean;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(var0: java_time_temporal_TemporalField | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(var0: java_time_temporal_TemporalField | null): java_time_temporal_ValueRange | null;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public until(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): Promise<number>;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public untilSync(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): number;
}

/**
 * Class java.time.chrono.ChronoZonedDateTime.
 *
 * This actually imports the java class for further use.
 * The class ChronoZonedDateTimeClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class ChronoZonedDateTime extends importClass<typeof ChronoZonedDateTimeClass>("java.time.chrono.ChronoZonedDateTime") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default ChronoZonedDateTime;