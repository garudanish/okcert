import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Chronology as java_time_chrono_Chronology } from "./Chronology";
import { Era as java_time_chrono_Era } from "./Era";
import { ChronoLocalDateTime as java_time_chrono_ChronoLocalDateTime } from "./ChronoLocalDateTime";
import { LocalTime as java_time_LocalTime } from "./../LocalTime";
import { TemporalAdjuster as java_time_temporal_TemporalAdjuster } from "./../temporal/TemporalAdjuster";
import { TemporalField as java_time_temporal_TemporalField } from "./../temporal/TemporalField";
import { Long as java_lang_Long } from "./../../lang/Long";
import { Temporal as java_time_temporal_Temporal } from "./../temporal/Temporal";
import { TemporalUnit as java_time_temporal_TemporalUnit } from "./../temporal/TemporalUnit";
import { TemporalAmount as java_time_temporal_TemporalAmount } from "./../temporal/TemporalAmount";
import { ChronoPeriod as java_time_chrono_ChronoPeriod } from "./ChronoPeriod";
import { Comparator as java_util_Comparator } from "./../../util/Comparator";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./../temporal/TemporalAccessor";
import { DateTimeFormatter as java_time_format_DateTimeFormatter } from "./../format/DateTimeFormatter";
import { TemporalQuery as java_time_temporal_TemporalQuery } from "./../temporal/TemporalQuery";
import { ValueRange as java_time_temporal_ValueRange } from "./../temporal/ValueRange";

/**
 * This class just defines types, you should import ChronoLocalDate instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ChronoLocalDateClass extends JavaClass {
    // ================== Method toEpochDay ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochDay(): Promise<number>;
    // ================== Method toEpochDay ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochDaySync(): number;
    // ================== Method getChronology ==================
    /**
     * @return original return type: 'java.time.chrono.Chronology'
     */
    public getChronology(): Promise<java_time_chrono_Chronology | null>;
    // ================== Method getChronology ==================
    /**
     * @return original return type: 'java.time.chrono.Chronology'
     */
    public getChronologySync(): java_time_chrono_Chronology | null;
    // ================== Method isLeapYear ==================
    /**
     * @return original return type: 'boolean'
     */
    public isLeapYear(): Promise<boolean>;
    // ================== Method isLeapYear ==================
    /**
     * @return original return type: 'boolean'
     */
    public isLeapYearSync(): boolean;
    // ================== Method getEra ==================
    /**
     * @return original return type: 'java.time.chrono.Era'
     */
    public getEra(): Promise<java_time_chrono_Era | null>;
    // ================== Method getEra ==================
    /**
     * @return original return type: 'java.time.chrono.Era'
     */
    public getEraSync(): java_time_chrono_Era | null;
    // ================== Method lengthOfMonth ==================
    /**
     * @return original return type: 'int'
     */
    public lengthOfMonth(): Promise<number>;
    // ================== Method lengthOfMonth ==================
    /**
     * @return original return type: 'int'
     */
    public lengthOfMonthSync(): number;
    // ================== Method lengthOfYear ==================
    /**
     * @return original return type: 'int'
     */
    public lengthOfYear(): Promise<number>;
    // ================== Method lengthOfYear ==================
    /**
     * @return original return type: 'int'
     */
    public lengthOfYearSync(): number;
    // ================== Method atTime ==================
    /**
     * @param var0 original type: 'java.time.LocalTime'
     * @return original return type: 'java.time.chrono.ChronoLocalDateTime'
     */
    public atTime(var0: java_time_LocalTime | null): Promise<java_time_chrono_ChronoLocalDateTime | null>;
    // ================== Method atTime ==================
    /**
     * @param var0 original type: 'java.time.LocalTime'
     * @return original return type: 'java.time.chrono.ChronoLocalDateTime'
     */
    public atTimeSync(var0: java_time_LocalTime | null): java_time_chrono_ChronoLocalDateTime | null;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<ChronoLocalDate | null>;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): java_time_temporal_Temporal | null;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): ChronoLocalDate | null;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): ChronoLocalDate | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<ChronoLocalDate | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): ChronoLocalDate | null;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustInto(var0: java_time_temporal_Temporal | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustIntoSync(var0: java_time_temporal_Temporal | null): java_time_temporal_Temporal | null;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public until(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): Promise<number>;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public untilSync(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): number;
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'java.time.chrono.ChronoPeriod'
     */
    public until(var0: ChronoLocalDateClass | null): Promise<java_time_chrono_ChronoPeriod | null>;
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'java.time.chrono.ChronoPeriod'
     */
    public untilSync(var0: ChronoLocalDateClass | null): java_time_chrono_ChronoPeriod | null;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isAfter(var0: ChronoLocalDateClass | null): Promise<boolean>;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isAfterSync(var0: ChronoLocalDateClass | null): boolean;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isBefore(var0: ChronoLocalDateClass | null): Promise<boolean>;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isBeforeSync(var0: ChronoLocalDateClass | null): boolean;
    // ================== Method timeLineOrder ==================
    /**
     * @return original return type: 'java.util.Comparator'
     */
    public static timeLineOrder(): Promise<java_util_Comparator | null>;
    // ================== Method timeLineOrder ==================
    /**
     * @return original return type: 'java.util.Comparator'
     */
    public static timeLineOrderSync(): java_util_Comparator | null;
    // ================== Method isEqual ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isEqual(var0: ChronoLocalDateClass | null): Promise<boolean>;
    // ================== Method isEqual ==================
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'boolean'
     */
    public isEqualSync(var0: ChronoLocalDateClass | null): boolean;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public static from(var0: java_time_temporal_TemporalAccessor | null): Promise<ChronoLocalDate | null>;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.chrono.ChronoLocalDate'
     */
    public static fromSync(var0: java_time_temporal_TemporalAccessor | null): ChronoLocalDate | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'int'
     */
    public compareTo(var0: ChronoLocalDateClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.time.chrono.ChronoLocalDate'
     * @return original return type: 'int'
     */
    public compareToSync(var0: ChronoLocalDateClass | null): number;
    // ================== Method format ==================
    /**
     * @param var0 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.lang.String'
     */
    public format(var0: java_time_format_DateTimeFormatter | null): Promise<string | null>;
    // ================== Method format ==================
    /**
     * @param var0 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.lang.String'
     */
    public formatSync(var0: java_time_format_DateTimeFormatter | null): string | null;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public query(var0: java_time_temporal_TemporalQuery | null): Promise<BasicOrJavaType | null>;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public querySync(var0: java_time_temporal_TemporalQuery | null): BasicOrJavaType | null;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalUnit | null): Promise<boolean>;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalUnit | null): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalField | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalField | null): boolean;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public get(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public getSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLong(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLongSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(var0: java_time_temporal_TemporalField | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(var0: java_time_temporal_TemporalField | null): java_time_temporal_ValueRange | null;
}

/**
 * Class java.time.chrono.ChronoLocalDate.
 *
 * This actually imports the java class for further use.
 * The class ChronoLocalDateClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class ChronoLocalDate extends importClass<typeof ChronoLocalDateClass>("java.time.chrono.ChronoLocalDate") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default ChronoLocalDate;