import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Temporal as java_time_temporal_Temporal } from "./../temporal/Temporal";
import { TemporalField as java_time_temporal_TemporalField } from "./../temporal/TemporalField";
import { TemporalQuery as java_time_temporal_TemporalQuery } from "./../temporal/TemporalQuery";
import { ValueRange as java_time_temporal_ValueRange } from "./../temporal/ValueRange";
import { TextStyle as java_time_format_TextStyle } from "./../format/TextStyle";
import { Locale as java_util_Locale } from "./../../util/Locale";

/**
 * This class just defines types, you should import Era instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class EraClass extends JavaClass {
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustInto(var0: java_time_temporal_Temporal | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustIntoSync(var0: java_time_temporal_Temporal | null): java_time_temporal_Temporal | null;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public get(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public getSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLong(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLongSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method getValue ==================
    /**
     * @return original return type: 'int'
     */
    public getValue(): Promise<number>;
    // ================== Method getValue ==================
    /**
     * @return original return type: 'int'
     */
    public getValueSync(): number;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public query(var0: java_time_temporal_TemporalQuery | null): Promise<BasicOrJavaType | null>;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public querySync(var0: java_time_temporal_TemporalQuery | null): BasicOrJavaType | null;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalField | null): Promise<boolean>;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalField | null): boolean;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(var0: java_time_temporal_TemporalField | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(var0: java_time_temporal_TemporalField | null): java_time_temporal_ValueRange | null;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.time.format.TextStyle'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayName(var0: java_time_format_TextStyle | null, var1: java_util_Locale | null): Promise<string | null>;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.time.format.TextStyle'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayNameSync(var0: java_time_format_TextStyle | null, var1: java_util_Locale | null): string | null;
}

/**
 * Class java.time.chrono.Era.
 *
 * This actually imports the java class for further use.
 * The class EraClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Era extends importClass<typeof EraClass>("java.time.chrono.Era") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default Era;