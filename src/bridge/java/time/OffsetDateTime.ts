import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Instant as java_time_Instant } from "./Instant";
import { ZoneId as java_time_ZoneId } from "./ZoneId";
import { Clock as java_time_Clock } from "./Clock";
import { Temporal as java_time_temporal_Temporal } from "./temporal/Temporal";
import { TemporalField as java_time_temporal_TemporalField } from "./temporal/TemporalField";
import { Long as java_lang_Long } from "./../lang/Long";
import { TemporalAdjuster as java_time_temporal_TemporalAdjuster } from "./temporal/TemporalAdjuster";
import { TemporalUnit as java_time_temporal_TemporalUnit } from "./temporal/TemporalUnit";
import { TemporalAmount as java_time_temporal_TemporalAmount } from "./temporal/TemporalAmount";
import { Comparator as java_util_Comparator } from "./../util/Comparator";
import { ZoneOffset as java_time_ZoneOffset } from "./ZoneOffset";
import { LocalDateTime as java_time_LocalDateTime } from "./LocalDateTime";
import { LocalDate as java_time_LocalDate } from "./LocalDate";
import { Month as java_time_Month } from "./Month";
import { DayOfWeek as java_time_DayOfWeek } from "./DayOfWeek";
import { LocalTime as java_time_LocalTime } from "./LocalTime";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { ZonedDateTime as java_time_ZonedDateTime } from "./ZonedDateTime";
import { OffsetTime as java_time_OffsetTime } from "./OffsetTime";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./temporal/TemporalAccessor";
import { DateTimeFormatter as java_time_format_DateTimeFormatter } from "./format/DateTimeFormatter";
import { TemporalQuery as java_time_temporal_TemporalQuery } from "./temporal/TemporalQuery";
import { CharSequence as java_lang_CharSequence } from "./../lang/CharSequence";
import { ValueRange as java_time_temporal_ValueRange } from "./temporal/ValueRange";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import OffsetDateTime instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class OffsetDateTimeClass extends JavaClass {
    // ================== Field MIN ==================
    /**
     * Original type: 'java.time.OffsetDateTime'
     */
    public static readonly MIN: OffsetDateTimeClass | null;
    // ================== Field MAX ==================
    /**
     * Original type: 'java.time.OffsetDateTime'
     */
    public static readonly MAX: OffsetDateTimeClass | null;
    // ================== Method toInstant ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public toInstant(): Promise<java_time_Instant | null>;
    // ================== Method toInstant ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public toInstantSync(): java_time_Instant | null;
    // ================== Method getNano ==================
    /**
     * @return original return type: 'int'
     */
    public getNano(): Promise<number>;
    // ================== Method getNano ==================
    /**
     * @return original return type: 'int'
     */
    public getNanoSync(): number;
    // ================== Method getYear ==================
    /**
     * @return original return type: 'int'
     */
    public getYear(): Promise<number>;
    // ================== Method getYear ==================
    /**
     * @return original return type: 'int'
     */
    public getYearSync(): number;
    // ================== Method getMonthValue ==================
    /**
     * @return original return type: 'int'
     */
    public getMonthValue(): Promise<number>;
    // ================== Method getMonthValue ==================
    /**
     * @return original return type: 'int'
     */
    public getMonthValueSync(): number;
    // ================== Method getDayOfMonth ==================
    /**
     * @return original return type: 'int'
     */
    public getDayOfMonth(): Promise<number>;
    // ================== Method getDayOfMonth ==================
    /**
     * @return original return type: 'int'
     */
    public getDayOfMonthSync(): number;
    // ================== Method getHour ==================
    /**
     * @return original return type: 'int'
     */
    public getHour(): Promise<number>;
    // ================== Method getHour ==================
    /**
     * @return original return type: 'int'
     */
    public getHourSync(): number;
    // ================== Method getMinute ==================
    /**
     * @return original return type: 'int'
     */
    public getMinute(): Promise<number>;
    // ================== Method getMinute ==================
    /**
     * @return original return type: 'int'
     */
    public getMinuteSync(): number;
    // ================== Method getSecond ==================
    /**
     * @return original return type: 'int'
     */
    public getSecond(): Promise<number>;
    // ================== Method getSecond ==================
    /**
     * @return original return type: 'int'
     */
    public getSecondSync(): number;
    // ================== Method now ==================
    /**
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static now(): Promise<OffsetDateTime | null>;
    // ================== Method now ==================
    /**
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static nowSync(): OffsetDateTime | null;
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static now(var0: java_time_ZoneId | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static nowSync(var0: java_time_ZoneId | null): OffsetDateTime | null;
    /**
     * @param var0 original type: 'java.time.Clock'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static now(var0: java_time_Clock | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.Clock'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static nowSync(var0: java_time_Clock | null): OffsetDateTime | null;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<java_time_temporal_Temporal | null>;
    // ================== Method with ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public with(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withSync(var0: java_time_temporal_TemporalField | null, var1: java_lang_Long | bigint | number): OffsetDateTime | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public with(var0: java_time_temporal_TemporalAdjuster | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAdjuster'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withSync(var0: java_time_temporal_TemporalAdjuster | null): OffsetDateTime | null;
    // ================== Method truncatedTo ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public truncatedTo(var0: java_time_temporal_TemporalUnit | null): Promise<OffsetDateTime | null>;
    // ================== Method truncatedTo ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public truncatedToSync(var0: java_time_temporal_TemporalUnit | null): OffsetDateTime | null;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<OffsetDateTime | null>;
    // ================== Method plus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): OffsetDateTime | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): OffsetDateTime | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public plusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    // ================== Method plusSeconds ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusSeconds(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method plusSeconds ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusSecondsSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method plusNanos ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusNanos(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method plusNanos ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusNanosSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method minus ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<java_time_temporal_Temporal | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): java_time_temporal_Temporal | null;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minus(var0: java_time_temporal_TemporalAmount | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAmount'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusSync(var0: java_time_temporal_TemporalAmount | null): OffsetDateTime | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minus(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalUnit | null): OffsetDateTime | null;
    // ================== Method minusSeconds ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusSeconds(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method minusSeconds ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusSecondsSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method minusNanos ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusNanos(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method minusNanos ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusNanosSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustInto(var0: java_time_temporal_Temporal | null): Promise<java_time_temporal_Temporal | null>;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustIntoSync(var0: java_time_temporal_Temporal | null): java_time_temporal_Temporal | null;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public until(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): Promise<number>;
    // ================== Method until ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'long'
     */
    public untilSync(var0: java_time_temporal_Temporal | null, var1: java_time_temporal_TemporalUnit | null): number;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.OffsetDateTime'
     * @return original return type: 'boolean'
     */
    public isAfter(var0: OffsetDateTimeClass | null): Promise<boolean>;
    // ================== Method isAfter ==================
    /**
     * @param var0 original type: 'java.time.OffsetDateTime'
     * @return original return type: 'boolean'
     */
    public isAfterSync(var0: OffsetDateTimeClass | null): boolean;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.OffsetDateTime'
     * @return original return type: 'boolean'
     */
    public isBefore(var0: OffsetDateTimeClass | null): Promise<boolean>;
    // ================== Method isBefore ==================
    /**
     * @param var0 original type: 'java.time.OffsetDateTime'
     * @return original return type: 'boolean'
     */
    public isBeforeSync(var0: OffsetDateTimeClass | null): boolean;
    // ================== Method ofInstant ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @param var1 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static ofInstant(var0: java_time_Instant | null, var1: java_time_ZoneId | null): Promise<OffsetDateTime | null>;
    // ================== Method ofInstant ==================
    /**
     * @param var0 original type: 'java.time.Instant'
     * @param var1 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static ofInstantSync(var0: java_time_Instant | null, var1: java_time_ZoneId | null): OffsetDateTime | null;
    // ================== Method timeLineOrder ==================
    /**
     * @return original return type: 'java.util.Comparator'
     */
    public static timeLineOrder(): Promise<java_util_Comparator | null>;
    // ================== Method timeLineOrder ==================
    /**
     * @return original return type: 'java.util.Comparator'
     */
    public static timeLineOrderSync(): java_util_Comparator | null;
    // ================== Method withOffsetSameLocal ==================
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withOffsetSameLocal(var0: java_time_ZoneOffset | null): Promise<OffsetDateTime | null>;
    // ================== Method withOffsetSameLocal ==================
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withOffsetSameLocalSync(var0: java_time_ZoneOffset | null): OffsetDateTime | null;
    // ================== Method withOffsetSameInstant ==================
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withOffsetSameInstant(var0: java_time_ZoneOffset | null): Promise<OffsetDateTime | null>;
    // ================== Method withOffsetSameInstant ==================
    /**
     * @param var0 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withOffsetSameInstantSync(var0: java_time_ZoneOffset | null): OffsetDateTime | null;
    // ================== Method toLocalDateTime ==================
    /**
     * @return original return type: 'java.time.LocalDateTime'
     */
    public toLocalDateTime(): Promise<java_time_LocalDateTime | null>;
    // ================== Method toLocalDateTime ==================
    /**
     * @return original return type: 'java.time.LocalDateTime'
     */
    public toLocalDateTimeSync(): java_time_LocalDateTime | null;
    // ================== Method toLocalDate ==================
    /**
     * @return original return type: 'java.time.LocalDate'
     */
    public toLocalDate(): Promise<java_time_LocalDate | null>;
    // ================== Method toLocalDate ==================
    /**
     * @return original return type: 'java.time.LocalDate'
     */
    public toLocalDateSync(): java_time_LocalDate | null;
    // ================== Method getMonth ==================
    /**
     * @return original return type: 'java.time.Month'
     */
    public getMonth(): Promise<java_time_Month | null>;
    // ================== Method getMonth ==================
    /**
     * @return original return type: 'java.time.Month'
     */
    public getMonthSync(): java_time_Month | null;
    // ================== Method getDayOfYear ==================
    /**
     * @return original return type: 'int'
     */
    public getDayOfYear(): Promise<number>;
    // ================== Method getDayOfYear ==================
    /**
     * @return original return type: 'int'
     */
    public getDayOfYearSync(): number;
    // ================== Method getDayOfWeek ==================
    /**
     * @return original return type: 'java.time.DayOfWeek'
     */
    public getDayOfWeek(): Promise<java_time_DayOfWeek | null>;
    // ================== Method getDayOfWeek ==================
    /**
     * @return original return type: 'java.time.DayOfWeek'
     */
    public getDayOfWeekSync(): java_time_DayOfWeek | null;
    // ================== Method toLocalTime ==================
    /**
     * @return original return type: 'java.time.LocalTime'
     */
    public toLocalTime(): Promise<java_time_LocalTime | null>;
    // ================== Method toLocalTime ==================
    /**
     * @return original return type: 'java.time.LocalTime'
     */
    public toLocalTimeSync(): java_time_LocalTime | null;
    // ================== Method withYear ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withYear(var0: java_lang_Integer | number): Promise<OffsetDateTime | null>;
    // ================== Method withYear ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withYearSync(var0: java_lang_Integer | number): OffsetDateTime | null;
    // ================== Method withMonth ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withMonth(var0: java_lang_Integer | number): Promise<OffsetDateTime | null>;
    // ================== Method withMonth ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withMonthSync(var0: java_lang_Integer | number): OffsetDateTime | null;
    // ================== Method withDayOfMonth ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withDayOfMonth(var0: java_lang_Integer | number): Promise<OffsetDateTime | null>;
    // ================== Method withDayOfMonth ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withDayOfMonthSync(var0: java_lang_Integer | number): OffsetDateTime | null;
    // ================== Method withDayOfYear ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withDayOfYear(var0: java_lang_Integer | number): Promise<OffsetDateTime | null>;
    // ================== Method withDayOfYear ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withDayOfYearSync(var0: java_lang_Integer | number): OffsetDateTime | null;
    // ================== Method withHour ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withHour(var0: java_lang_Integer | number): Promise<OffsetDateTime | null>;
    // ================== Method withHour ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withHourSync(var0: java_lang_Integer | number): OffsetDateTime | null;
    // ================== Method withMinute ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withMinute(var0: java_lang_Integer | number): Promise<OffsetDateTime | null>;
    // ================== Method withMinute ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withMinuteSync(var0: java_lang_Integer | number): OffsetDateTime | null;
    // ================== Method withSecond ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withSecond(var0: java_lang_Integer | number): Promise<OffsetDateTime | null>;
    // ================== Method withSecond ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withSecondSync(var0: java_lang_Integer | number): OffsetDateTime | null;
    // ================== Method withNano ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withNano(var0: java_lang_Integer | number): Promise<OffsetDateTime | null>;
    // ================== Method withNano ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public withNanoSync(var0: java_lang_Integer | number): OffsetDateTime | null;
    // ================== Method plusYears ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusYears(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method plusYears ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusYearsSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method plusMonths ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusMonths(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method plusMonths ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusMonthsSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method plusWeeks ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusWeeks(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method plusWeeks ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusWeeksSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method plusDays ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusDays(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method plusDays ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusDaysSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method plusHours ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusHours(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method plusHours ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusHoursSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method plusMinutes ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusMinutes(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method plusMinutes ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public plusMinutesSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method minusYears ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusYears(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method minusYears ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusYearsSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method minusMonths ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusMonths(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method minusMonths ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusMonthsSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method minusWeeks ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusWeeks(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method minusWeeks ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusWeeksSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method minusDays ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusDays(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method minusDays ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusDaysSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method minusHours ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusHours(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method minusHours ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusHoursSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method minusMinutes ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusMinutes(var0: java_lang_Long | bigint | number): Promise<OffsetDateTime | null>;
    // ================== Method minusMinutes ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public minusMinutesSync(var0: java_lang_Long | bigint | number): OffsetDateTime | null;
    // ================== Method atZoneSameInstant ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public atZoneSameInstant(var0: java_time_ZoneId | null): Promise<java_time_ZonedDateTime | null>;
    // ================== Method atZoneSameInstant ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public atZoneSameInstantSync(var0: java_time_ZoneId | null): java_time_ZonedDateTime | null;
    // ================== Method atZoneSimilarLocal ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public atZoneSimilarLocal(var0: java_time_ZoneId | null): Promise<java_time_ZonedDateTime | null>;
    // ================== Method atZoneSimilarLocal ==================
    /**
     * @param var0 original type: 'java.time.ZoneId'
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public atZoneSimilarLocalSync(var0: java_time_ZoneId | null): java_time_ZonedDateTime | null;
    // ================== Method toOffsetTime ==================
    /**
     * @return original return type: 'java.time.OffsetTime'
     */
    public toOffsetTime(): Promise<java_time_OffsetTime | null>;
    // ================== Method toOffsetTime ==================
    /**
     * @return original return type: 'java.time.OffsetTime'
     */
    public toOffsetTimeSync(): java_time_OffsetTime | null;
    // ================== Method toZonedDateTime ==================
    /**
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public toZonedDateTime(): Promise<java_time_ZonedDateTime | null>;
    // ================== Method toZonedDateTime ==================
    /**
     * @return original return type: 'java.time.ZonedDateTime'
     */
    public toZonedDateTimeSync(): java_time_ZonedDateTime | null;
    // ================== Method toEpochSecond ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochSecond(): Promise<number>;
    // ================== Method toEpochSecond ==================
    /**
     * @return original return type: 'long'
     */
    public toEpochSecondSync(): number;
    // ================== Method isEqual ==================
    /**
     * @param var0 original type: 'java.time.OffsetDateTime'
     * @return original return type: 'boolean'
     */
    public isEqual(var0: OffsetDateTimeClass | null): Promise<boolean>;
    // ================== Method isEqual ==================
    /**
     * @param var0 original type: 'java.time.OffsetDateTime'
     * @return original return type: 'boolean'
     */
    public isEqualSync(var0: OffsetDateTimeClass | null): boolean;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static from(var0: java_time_temporal_TemporalAccessor | null): Promise<OffsetDateTime | null>;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static fromSync(var0: java_time_temporal_TemporalAccessor | null): OffsetDateTime | null;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public get(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public getSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.time.OffsetDateTime'
     * @return original return type: 'int'
     */
    public compareTo(var0: OffsetDateTimeClass | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.time.OffsetDateTime'
     * @return original return type: 'int'
     */
    public compareToSync(var0: OffsetDateTimeClass | null): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLong(var0: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public getLongSync(var0: java_time_temporal_TemporalField | null): number;
    // ================== Method format ==================
    /**
     * @param var0 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.lang.String'
     */
    public format(var0: java_time_format_DateTimeFormatter | null): Promise<string | null>;
    // ================== Method format ==================
    /**
     * @param var0 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.lang.String'
     */
    public formatSync(var0: java_time_format_DateTimeFormatter | null): string | null;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public query(var0: java_time_temporal_TemporalQuery | null): Promise<BasicOrJavaType | null>;
    // ================== Method query ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalQuery'
     * @return original return type: 'java.lang.Object'
     */
    public querySync(var0: java_time_temporal_TemporalQuery | null): BasicOrJavaType | null;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static of(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_time_ZoneOffset | null): Promise<OffsetDateTime | null>;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @param var3 original type: 'int'
     * @param var4 original type: 'int'
     * @param var5 original type: 'int'
     * @param var6 original type: 'int'
     * @param var7 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static ofSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number, var2: java_lang_Integer | number, var3: java_lang_Integer | number, var4: java_lang_Integer | number, var5: java_lang_Integer | number, var6: java_lang_Integer | number, var7: java_time_ZoneOffset | null): OffsetDateTime | null;
    /**
     * @param var0 original type: 'java.time.LocalDate'
     * @param var1 original type: 'java.time.LocalTime'
     * @param var2 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static of(var0: java_time_LocalDate | null, var1: java_time_LocalTime | null, var2: java_time_ZoneOffset | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.LocalDate'
     * @param var1 original type: 'java.time.LocalTime'
     * @param var2 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static ofSync(var0: java_time_LocalDate | null, var1: java_time_LocalTime | null, var2: java_time_ZoneOffset | null): OffsetDateTime | null;
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @param var1 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static of(var0: java_time_LocalDateTime | null, var1: java_time_ZoneOffset | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.time.LocalDateTime'
     * @param var1 original type: 'java.time.ZoneOffset'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static ofSync(var0: java_time_LocalDateTime | null, var1: java_time_ZoneOffset | null): OffsetDateTime | null;
    // ================== Method getOffset ==================
    /**
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getOffset(): Promise<java_time_ZoneOffset | null>;
    // ================== Method getOffset ==================
    /**
     * @return original return type: 'java.time.ZoneOffset'
     */
    public getOffsetSync(): java_time_ZoneOffset | null;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalField | null): Promise<boolean>;
    // ================== Method isSupported ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalField | null): boolean;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupported(var0: java_time_temporal_TemporalUnit | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.time.temporal.TemporalUnit'
     * @return original return type: 'boolean'
     */
    public isSupportedSync(var0: java_time_temporal_TemporalUnit | null): boolean;
    // ================== Method parse ==================
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @param var1 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static parse(var0: java_lang_CharSequence | null, var1: java_time_format_DateTimeFormatter | null): Promise<OffsetDateTime | null>;
    // ================== Method parse ==================
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @param var1 original type: 'java.time.format.DateTimeFormatter'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static parseSync(var0: java_lang_CharSequence | null, var1: java_time_format_DateTimeFormatter | null): OffsetDateTime | null;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static parse(var0: java_lang_CharSequence | null): Promise<OffsetDateTime | null>;
    /**
     * @param var0 original type: 'java.lang.CharSequence'
     * @return original return type: 'java.time.OffsetDateTime'
     */
    public static parseSync(var0: java_lang_CharSequence | null): OffsetDateTime | null;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(var0: java_time_temporal_TemporalField | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(var0: java_time_temporal_TemporalField | null): java_time_temporal_ValueRange | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.time.OffsetDateTime.
 *
 * This actually imports the java class for further use.
 * The class OffsetDateTimeClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class OffsetDateTime extends importClass<typeof OffsetDateTimeClass>("java.time.OffsetDateTime") {
}
export default OffsetDateTime;