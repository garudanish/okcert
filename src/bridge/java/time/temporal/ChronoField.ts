import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Temporal as java_time_temporal_Temporal } from "./Temporal";
import { Long as java_lang_Long } from "./../../lang/Long";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./TemporalAccessor";
import { ValueRange as java_time_temporal_ValueRange } from "./ValueRange";
import { TemporalUnit as java_time_temporal_TemporalUnit } from "./TemporalUnit";
import { Enum as java_lang_Enum } from "./../../lang/Enum";
import { Class as java_lang_Class } from "./../../lang/Class";
import { Locale as java_util_Locale } from "./../../util/Locale";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { Map as java_util_Map } from "./../../util/Map";
import { ResolverStyle as java_time_format_ResolverStyle } from "./../format/ResolverStyle";

/**
 * This class just defines types, you should import ChronoField instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ChronoFieldClass extends JavaClass {
    // ================== Field NANO_OF_SECOND ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly NANO_OF_SECOND: ChronoFieldClass | null;
    // ================== Field NANO_OF_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly NANO_OF_DAY: ChronoFieldClass | null;
    // ================== Field MICRO_OF_SECOND ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly MICRO_OF_SECOND: ChronoFieldClass | null;
    // ================== Field MICRO_OF_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly MICRO_OF_DAY: ChronoFieldClass | null;
    // ================== Field MILLI_OF_SECOND ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly MILLI_OF_SECOND: ChronoFieldClass | null;
    // ================== Field MILLI_OF_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly MILLI_OF_DAY: ChronoFieldClass | null;
    // ================== Field SECOND_OF_MINUTE ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly SECOND_OF_MINUTE: ChronoFieldClass | null;
    // ================== Field SECOND_OF_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly SECOND_OF_DAY: ChronoFieldClass | null;
    // ================== Field MINUTE_OF_HOUR ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly MINUTE_OF_HOUR: ChronoFieldClass | null;
    // ================== Field MINUTE_OF_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly MINUTE_OF_DAY: ChronoFieldClass | null;
    // ================== Field HOUR_OF_AMPM ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly HOUR_OF_AMPM: ChronoFieldClass | null;
    // ================== Field CLOCK_HOUR_OF_AMPM ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly CLOCK_HOUR_OF_AMPM: ChronoFieldClass | null;
    // ================== Field HOUR_OF_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly HOUR_OF_DAY: ChronoFieldClass | null;
    // ================== Field CLOCK_HOUR_OF_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly CLOCK_HOUR_OF_DAY: ChronoFieldClass | null;
    // ================== Field AMPM_OF_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly AMPM_OF_DAY: ChronoFieldClass | null;
    // ================== Field DAY_OF_WEEK ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly DAY_OF_WEEK: ChronoFieldClass | null;
    // ================== Field ALIGNED_DAY_OF_WEEK_IN_MONTH ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly ALIGNED_DAY_OF_WEEK_IN_MONTH: ChronoFieldClass | null;
    // ================== Field ALIGNED_DAY_OF_WEEK_IN_YEAR ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly ALIGNED_DAY_OF_WEEK_IN_YEAR: ChronoFieldClass | null;
    // ================== Field DAY_OF_MONTH ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly DAY_OF_MONTH: ChronoFieldClass | null;
    // ================== Field DAY_OF_YEAR ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly DAY_OF_YEAR: ChronoFieldClass | null;
    // ================== Field EPOCH_DAY ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly EPOCH_DAY: ChronoFieldClass | null;
    // ================== Field ALIGNED_WEEK_OF_MONTH ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly ALIGNED_WEEK_OF_MONTH: ChronoFieldClass | null;
    // ================== Field ALIGNED_WEEK_OF_YEAR ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly ALIGNED_WEEK_OF_YEAR: ChronoFieldClass | null;
    // ================== Field MONTH_OF_YEAR ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly MONTH_OF_YEAR: ChronoFieldClass | null;
    // ================== Field PROLEPTIC_MONTH ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly PROLEPTIC_MONTH: ChronoFieldClass | null;
    // ================== Field YEAR_OF_ERA ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly YEAR_OF_ERA: ChronoFieldClass | null;
    // ================== Field YEAR ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly YEAR: ChronoFieldClass | null;
    // ================== Field ERA ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly ERA: ChronoFieldClass | null;
    // ================== Field INSTANT_SECONDS ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly INSTANT_SECONDS: ChronoFieldClass | null;
    // ================== Field OFFSET_SECONDS ==================
    /**
     * Original type: 'java.time.temporal.ChronoField'
     */
    public static readonly OFFSET_SECONDS: ChronoFieldClass | null;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustInto(var0: java_time_temporal_Temporal | null, var1: java_lang_Long | bigint | number): Promise<java_time_temporal_Temporal | null>;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustIntoSync(var0: java_time_temporal_Temporal | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
    // ================== Method isSupportedBy ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'boolean'
     */
    public isSupportedBy(var0: java_time_temporal_TemporalAccessor | null): Promise<boolean>;
    // ================== Method isSupportedBy ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'boolean'
     */
    public isSupportedBySync(var0: java_time_temporal_TemporalAccessor | null): boolean;
    // ================== Method isTimeBased ==================
    /**
     * @return original return type: 'boolean'
     */
    public isTimeBased(): Promise<boolean>;
    // ================== Method isTimeBased ==================
    /**
     * @return original return type: 'boolean'
     */
    public isTimeBasedSync(): boolean;
    // ================== Method checkValidIntValue ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'int'
     */
    public checkValidIntValue(var0: java_lang_Long | bigint | number): Promise<number>;
    // ================== Method checkValidIntValue ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'int'
     */
    public checkValidIntValueSync(var0: java_lang_Long | bigint | number): number;
    // ================== Method getFrom ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'long'
     */
    public getFrom(var0: java_time_temporal_TemporalAccessor | null): Promise<number>;
    // ================== Method getFrom ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'long'
     */
    public getFromSync(var0: java_time_temporal_TemporalAccessor | null): number;
    // ================== Method checkValidValue ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'long'
     */
    public checkValidValue(var0: java_lang_Long | bigint | number): Promise<number>;
    // ================== Method checkValidValue ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'long'
     */
    public checkValidValueSync(var0: java_lang_Long | bigint | number): number;
    // ================== Method rangeRefinedBy ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeRefinedBy(var0: java_time_temporal_TemporalAccessor | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method rangeRefinedBy ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeRefinedBySync(var0: java_time_temporal_TemporalAccessor | null): java_time_temporal_ValueRange | null;
    // ================== Method getBaseUnit ==================
    /**
     * @return original return type: 'java.time.temporal.TemporalUnit'
     */
    public getBaseUnit(): Promise<java_time_temporal_TemporalUnit | null>;
    // ================== Method getBaseUnit ==================
    /**
     * @return original return type: 'java.time.temporal.TemporalUnit'
     */
    public getBaseUnitSync(): java_time_temporal_TemporalUnit | null;
    // ================== Method getRangeUnit ==================
    /**
     * @return original return type: 'java.time.temporal.TemporalUnit'
     */
    public getRangeUnit(): Promise<java_time_temporal_TemporalUnit | null>;
    // ================== Method getRangeUnit ==================
    /**
     * @return original return type: 'java.time.temporal.TemporalUnit'
     */
    public getRangeUnitSync(): java_time_temporal_TemporalUnit | null;
    // ================== Method isDateBased ==================
    /**
     * @return original return type: 'boolean'
     */
    public isDateBased(): Promise<boolean>;
    // ================== Method isDateBased ==================
    /**
     * @return original return type: 'boolean'
     */
    public isDateBasedSync(): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method values ==================
    /**
     * @return original return type: 'java.time.temporal.ChronoField[]'
     */
    public static values(): Promise<(ChronoField | null)[] | null>;
    // ================== Method values ==================
    /**
     * @return original return type: 'java.time.temporal.ChronoField[]'
     */
    public static valuesSync(): (ChronoField | null)[] | null;
    // ================== Method valueOf ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.time.temporal.ChronoField'
     */
    public static valueOf(var0: string | null): Promise<ChronoField | null>;
    // ================== Method valueOf ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.time.temporal.ChronoField'
     */
    public static valueOfSync(var0: string | null): ChronoField | null;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Enum'
     */
    public static valueOf(var0: java_lang_Class | null, var1: string | null): Promise<java_lang_Enum | null>;
    /**
     * @param var0 original type: 'java.lang.Class'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Enum'
     */
    public static valueOfSync(var0: java_lang_Class | null, var1: string | null): java_lang_Enum | null;
    // ================== Method range ==================
    /**
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(): java_time_temporal_ValueRange | null;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayName(var0: java_util_Locale | null): Promise<string | null>;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayNameSync(var0: java_util_Locale | null): string | null;
    // ================== Method name ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public name(): Promise<string | null>;
    // ================== Method name ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public nameSync(): string | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.lang.Enum'
     * @return original return type: 'int'
     */
    public compareTo(var0: java_lang_Enum | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Enum'
     * @return original return type: 'int'
     */
    public compareToSync(var0: java_lang_Enum | null): number;
    // ================== Method getDeclaringClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getDeclaringClass(): Promise<java_lang_Class | null>;
    // ================== Method getDeclaringClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getDeclaringClassSync(): java_lang_Class | null;
    // ================== Method ordinal ==================
    /**
     * @return original return type: 'int'
     */
    public ordinal(): Promise<number>;
    // ================== Method ordinal ==================
    /**
     * @return original return type: 'int'
     */
    public ordinalSync(): number;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
    // ================== Method resolve ==================
    /**
     * @param var0 original type: 'java.util.Map'
     * @param var1 original type: 'java.time.temporal.TemporalAccessor'
     * @param var2 original type: 'java.time.format.ResolverStyle'
     * @return original return type: 'java.time.temporal.TemporalAccessor'
     */
    public resolve(var0: java_util_Map | null, var1: java_time_temporal_TemporalAccessor | null, var2: java_time_format_ResolverStyle | null): Promise<java_time_temporal_TemporalAccessor | null>;
    // ================== Method resolve ==================
    /**
     * @param var0 original type: 'java.util.Map'
     * @param var1 original type: 'java.time.temporal.TemporalAccessor'
     * @param var2 original type: 'java.time.format.ResolverStyle'
     * @return original return type: 'java.time.temporal.TemporalAccessor'
     */
    public resolveSync(var0: java_util_Map | null, var1: java_time_temporal_TemporalAccessor | null, var2: java_time_format_ResolverStyle | null): java_time_temporal_TemporalAccessor | null;
}

/**
 * Class java.time.temporal.ChronoField.
 *
 * This actually imports the java class for further use.
 * The class ChronoFieldClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class ChronoField extends importClass<typeof ChronoFieldClass>("java.time.temporal.ChronoField") {
}
export default ChronoField;