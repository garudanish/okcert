import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Long as java_lang_Long } from "./../../lang/Long";
import { TemporalField as java_time_temporal_TemporalField } from "./TemporalField";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { Class as java_lang_Class } from "./../../lang/Class";

/**
 * This class just defines types, you should import ValueRange instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ValueRangeClass extends JavaClass {
    // ================== Method isFixed ==================
    /**
     * @return original return type: 'boolean'
     */
    public isFixed(): Promise<boolean>;
    // ================== Method isFixed ==================
    /**
     * @return original return type: 'boolean'
     */
    public isFixedSync(): boolean;
    // ================== Method getMinimum ==================
    /**
     * @return original return type: 'long'
     */
    public getMinimum(): Promise<number>;
    // ================== Method getMinimum ==================
    /**
     * @return original return type: 'long'
     */
    public getMinimumSync(): number;
    // ================== Method getLargestMinimum ==================
    /**
     * @return original return type: 'long'
     */
    public getLargestMinimum(): Promise<number>;
    // ================== Method getLargestMinimum ==================
    /**
     * @return original return type: 'long'
     */
    public getLargestMinimumSync(): number;
    // ================== Method getSmallestMaximum ==================
    /**
     * @return original return type: 'long'
     */
    public getSmallestMaximum(): Promise<number>;
    // ================== Method getSmallestMaximum ==================
    /**
     * @return original return type: 'long'
     */
    public getSmallestMaximumSync(): number;
    // ================== Method getMaximum ==================
    /**
     * @return original return type: 'long'
     */
    public getMaximum(): Promise<number>;
    // ================== Method getMaximum ==================
    /**
     * @return original return type: 'long'
     */
    public getMaximumSync(): number;
    // ================== Method isValidIntValue ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'boolean'
     */
    public isValidIntValue(var0: java_lang_Long | bigint | number): Promise<boolean>;
    // ================== Method isValidIntValue ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'boolean'
     */
    public isValidIntValueSync(var0: java_lang_Long | bigint | number): boolean;
    // ================== Method checkValidIntValue ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public checkValidIntValue(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method checkValidIntValue ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'int'
     */
    public checkValidIntValueSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalField | null): number;
    // ================== Method checkValidValue ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public checkValidValue(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalField | null): Promise<number>;
    // ================== Method checkValidValue ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.time.temporal.TemporalField'
     * @return original return type: 'long'
     */
    public checkValidValueSync(var0: java_lang_Long | bigint | number, var1: java_time_temporal_TemporalField | null): number;
    // ================== Method isIntValue ==================
    /**
     * @return original return type: 'boolean'
     */
    public isIntValue(): Promise<boolean>;
    // ================== Method isIntValue ==================
    /**
     * @return original return type: 'boolean'
     */
    public isIntValueSync(): boolean;
    // ================== Method isValidValue ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'boolean'
     */
    public isValidValue(var0: java_lang_Long | bigint | number): Promise<boolean>;
    // ================== Method isValidValue ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'boolean'
     */
    public isValidValueSync(var0: java_lang_Long | bigint | number): boolean;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public static of(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number): Promise<ValueRange | null>;
    // ================== Method of ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public static ofSync(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number): ValueRange | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public static of(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): Promise<ValueRange | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public static ofSync(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): ValueRange | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @param var3 original type: 'long'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public static of(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number, var3: java_lang_Long | bigint | number): Promise<ValueRange | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @param var3 original type: 'long'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public static ofSync(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number, var3: java_lang_Long | bigint | number): ValueRange | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.time.temporal.ValueRange.
 *
 * This actually imports the java class for further use.
 * The class ValueRangeClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class ValueRange extends importClass<typeof ValueRangeClass>("java.time.temporal.ValueRange") {
}
export default ValueRange;