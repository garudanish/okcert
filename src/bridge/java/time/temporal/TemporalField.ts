import { importClass, JavaClass } from "java-bridge";
import { Temporal as java_time_temporal_Temporal } from "./Temporal";
import { Long as java_lang_Long } from "./../../lang/Long";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./TemporalAccessor";
import { ValueRange as java_time_temporal_ValueRange } from "./ValueRange";
import { TemporalUnit as java_time_temporal_TemporalUnit } from "./TemporalUnit";
import { Map as java_util_Map } from "./../../util/Map";
import { ResolverStyle as java_time_format_ResolverStyle } from "./../format/ResolverStyle";
import { Locale as java_util_Locale } from "./../../util/Locale";

/**
 * This class just defines types, you should import TemporalField instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class TemporalFieldClass extends JavaClass {
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustInto(var0: java_time_temporal_Temporal | null, var1: java_lang_Long | bigint | number): Promise<java_time_temporal_Temporal | null>;
    // ================== Method adjustInto ==================
    /**
     * @param var0 original type: 'java.time.temporal.Temporal'
     * @param var1 original type: 'long'
     * @return original return type: 'java.time.temporal.Temporal'
     */
    public adjustIntoSync(var0: java_time_temporal_Temporal | null, var1: java_lang_Long | bigint | number): java_time_temporal_Temporal | null;
    // ================== Method isSupportedBy ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'boolean'
     */
    public isSupportedBy(var0: java_time_temporal_TemporalAccessor | null): Promise<boolean>;
    // ================== Method isSupportedBy ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'boolean'
     */
    public isSupportedBySync(var0: java_time_temporal_TemporalAccessor | null): boolean;
    // ================== Method isTimeBased ==================
    /**
     * @return original return type: 'boolean'
     */
    public isTimeBased(): Promise<boolean>;
    // ================== Method isTimeBased ==================
    /**
     * @return original return type: 'boolean'
     */
    public isTimeBasedSync(): boolean;
    // ================== Method getFrom ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'long'
     */
    public getFrom(var0: java_time_temporal_TemporalAccessor | null): Promise<number>;
    // ================== Method getFrom ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'long'
     */
    public getFromSync(var0: java_time_temporal_TemporalAccessor | null): number;
    // ================== Method rangeRefinedBy ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeRefinedBy(var0: java_time_temporal_TemporalAccessor | null): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method rangeRefinedBy ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeRefinedBySync(var0: java_time_temporal_TemporalAccessor | null): java_time_temporal_ValueRange | null;
    // ================== Method getBaseUnit ==================
    /**
     * @return original return type: 'java.time.temporal.TemporalUnit'
     */
    public getBaseUnit(): Promise<java_time_temporal_TemporalUnit | null>;
    // ================== Method getBaseUnit ==================
    /**
     * @return original return type: 'java.time.temporal.TemporalUnit'
     */
    public getBaseUnitSync(): java_time_temporal_TemporalUnit | null;
    // ================== Method getRangeUnit ==================
    /**
     * @return original return type: 'java.time.temporal.TemporalUnit'
     */
    public getRangeUnit(): Promise<java_time_temporal_TemporalUnit | null>;
    // ================== Method getRangeUnit ==================
    /**
     * @return original return type: 'java.time.temporal.TemporalUnit'
     */
    public getRangeUnitSync(): java_time_temporal_TemporalUnit | null;
    // ================== Method isDateBased ==================
    /**
     * @return original return type: 'boolean'
     */
    public isDateBased(): Promise<boolean>;
    // ================== Method isDateBased ==================
    /**
     * @return original return type: 'boolean'
     */
    public isDateBasedSync(): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method resolve ==================
    /**
     * @param var0 original type: 'java.util.Map'
     * @param var1 original type: 'java.time.temporal.TemporalAccessor'
     * @param var2 original type: 'java.time.format.ResolverStyle'
     * @return original return type: 'java.time.temporal.TemporalAccessor'
     */
    public resolve(var0: java_util_Map | null, var1: java_time_temporal_TemporalAccessor | null, var2: java_time_format_ResolverStyle | null): Promise<java_time_temporal_TemporalAccessor | null>;
    // ================== Method resolve ==================
    /**
     * @param var0 original type: 'java.util.Map'
     * @param var1 original type: 'java.time.temporal.TemporalAccessor'
     * @param var2 original type: 'java.time.format.ResolverStyle'
     * @return original return type: 'java.time.temporal.TemporalAccessor'
     */
    public resolveSync(var0: java_util_Map | null, var1: java_time_temporal_TemporalAccessor | null, var2: java_time_format_ResolverStyle | null): java_time_temporal_TemporalAccessor | null;
    // ================== Method range ==================
    /**
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public range(): Promise<java_time_temporal_ValueRange | null>;
    // ================== Method range ==================
    /**
     * @return original return type: 'java.time.temporal.ValueRange'
     */
    public rangeSync(): java_time_temporal_ValueRange | null;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayName(var0: java_util_Locale | null): Promise<string | null>;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayNameSync(var0: java_util_Locale | null): string | null;
}

/**
 * Class java.time.temporal.TemporalField.
 *
 * This actually imports the java class for further use.
 * The class TemporalFieldClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class TemporalField extends importClass<typeof TemporalFieldClass>("java.time.temporal.TemporalField") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default TemporalField;