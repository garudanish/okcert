import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { TemporalAccessor as java_time_temporal_TemporalAccessor } from "./TemporalAccessor";

/**
 * This class just defines types, you should import TemporalQuery instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class TemporalQueryClass extends JavaClass {
    // ================== Method queryFrom ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.lang.Object'
     */
    public queryFrom(var0: java_time_temporal_TemporalAccessor | null): Promise<BasicOrJavaType | null>;
    // ================== Method queryFrom ==================
    /**
     * @param var0 original type: 'java.time.temporal.TemporalAccessor'
     * @return original return type: 'java.lang.Object'
     */
    public queryFromSync(var0: java_time_temporal_TemporalAccessor | null): BasicOrJavaType | null;
}

/**
 * Class java.time.temporal.TemporalQuery.
 *
 * This actually imports the java class for further use.
 * The class TemporalQueryClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class TemporalQuery extends importClass<typeof TemporalQueryClass>("java.time.temporal.TemporalQuery") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default TemporalQuery;