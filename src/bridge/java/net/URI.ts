import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { URL as java_net_URL } from "./URL";
import { Long as java_lang_Long } from "./../lang/Long";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import URI instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class URIClass extends JavaClass {
    // ================== Method parseServerAuthority ==================
    /**
     * @return original return type: 'java.net.URI'
     */
    public parseServerAuthority(): Promise<URI | null>;
    // ================== Method parseServerAuthority ==================
    /**
     * @return original return type: 'java.net.URI'
     */
    public parseServerAuthoritySync(): URI | null;
    // ================== Method getRawSchemeSpecificPart ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawSchemeSpecificPart(): Promise<string | null>;
    // ================== Method getRawSchemeSpecificPart ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawSchemeSpecificPartSync(): string | null;
    // ================== Method getSchemeSpecificPart ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getSchemeSpecificPart(): Promise<string | null>;
    // ================== Method getSchemeSpecificPart ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getSchemeSpecificPartSync(): string | null;
    // ================== Method getRawAuthority ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawAuthority(): Promise<string | null>;
    // ================== Method getRawAuthority ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawAuthoritySync(): string | null;
    // ================== Method getRawUserInfo ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawUserInfo(): Promise<string | null>;
    // ================== Method getRawUserInfo ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawUserInfoSync(): string | null;
    // ================== Method getRawPath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawPath(): Promise<string | null>;
    // ================== Method getRawPath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawPathSync(): string | null;
    // ================== Method getRawQuery ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawQuery(): Promise<string | null>;
    // ================== Method getRawQuery ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawQuerySync(): string | null;
    // ================== Method getRawFragment ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawFragment(): Promise<string | null>;
    // ================== Method getRawFragment ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getRawFragmentSync(): string | null;
    // ================== Method toASCIIString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toASCIIString(): Promise<string | null>;
    // ================== Method toASCIIString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toASCIIStringSync(): string | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.net.URI'
     * @return original return type: 'int'
     */
    public compareTo(var0: URIClass | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.net.URI'
     * @return original return type: 'int'
     */
    public compareToSync(var0: URIClass | null): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    // ================== Method isAbsolute ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAbsolute(): Promise<boolean>;
    // ================== Method isAbsolute ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAbsoluteSync(): boolean;
    // ================== Method resolve ==================
    /**
     * @param var0 original type: 'java.net.URI'
     * @return original return type: 'java.net.URI'
     */
    public resolve(var0: URIClass | null): Promise<URI | null>;
    // ================== Method resolve ==================
    /**
     * @param var0 original type: 'java.net.URI'
     * @return original return type: 'java.net.URI'
     */
    public resolveSync(var0: URIClass | null): URI | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public resolve(var0: string | null): Promise<URI | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public resolveSync(var0: string | null): URI | null;
    // ================== Method create ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public static create(var0: string | null): Promise<URI | null>;
    // ================== Method create ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public static createSync(var0: string | null): URI | null;
    // ================== Method normalize ==================
    /**
     * @return original return type: 'java.net.URI'
     */
    public normalize(): Promise<URI | null>;
    // ================== Method normalize ==================
    /**
     * @return original return type: 'java.net.URI'
     */
    public normalizeSync(): URI | null;
    // ================== Method getPath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getPath(): Promise<string | null>;
    // ================== Method getPath ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getPathSync(): string | null;
    // ================== Method toURL ==================
    /**
     * @return original return type: 'java.net.URL'
     */
    public toURL(): Promise<java_net_URL | null>;
    // ================== Method toURL ==================
    /**
     * @return original return type: 'java.net.URL'
     */
    public toURLSync(): java_net_URL | null;
    // ================== Method isOpaque ==================
    /**
     * @return original return type: 'boolean'
     */
    public isOpaque(): Promise<boolean>;
    // ================== Method isOpaque ==================
    /**
     * @return original return type: 'boolean'
     */
    public isOpaqueSync(): boolean;
    // ================== Method getScheme ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getScheme(): Promise<string | null>;
    // ================== Method getScheme ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getSchemeSync(): string | null;
    // ================== Method getAuthority ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getAuthority(): Promise<string | null>;
    // ================== Method getAuthority ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getAuthoritySync(): string | null;
    // ================== Method getFragment ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getFragment(): Promise<string | null>;
    // ================== Method getFragment ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getFragmentSync(): string | null;
    // ================== Method getQuery ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getQuery(): Promise<string | null>;
    // ================== Method getQuery ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getQuerySync(): string | null;
    // ================== Method getHost ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getHost(): Promise<string | null>;
    // ================== Method getHost ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getHostSync(): string | null;
    // ================== Method getUserInfo ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getUserInfo(): Promise<string | null>;
    // ================== Method getUserInfo ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getUserInfoSync(): string | null;
    // ================== Method getPort ==================
    /**
     * @return original return type: 'int'
     */
    public getPort(): Promise<number>;
    // ================== Method getPort ==================
    /**
     * @return original return type: 'int'
     */
    public getPortSync(): number;
    // ================== Method relativize ==================
    /**
     * @param var0 original type: 'java.net.URI'
     * @return original return type: 'java.net.URI'
     */
    public relativize(var0: URIClass | null): Promise<URI | null>;
    // ================== Method relativize ==================
    /**
     * @param var0 original type: 'java.net.URI'
     * @return original return type: 'java.net.URI'
     */
    public relativizeSync(var0: URIClass | null): URI | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
    // ================== Method newInstance ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public static newInstance(var0: string | null): Promise<URI>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.String'
     * @param var5 original type: 'java.lang.String'
     * @param var6 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public static newInstance(var0: string | null, var1: string | null, var2: string | null, var3: java_lang_Integer | number, var4: string | null, var5: string | null, var6: string | null): Promise<URI>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public static newInstance(var0: string | null, var1: string | null, var2: string | null, var3: string | null, var4: string | null): Promise<URI>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public static newInstance(var0: string | null, var1: string | null, var2: string | null): Promise<URI>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @return original return type: 'java.net.URI'
     */
    public static newInstance(var0: string | null, var1: string | null, var2: string | null, var3: string | null): Promise<URI>;
    // ================== Constructors ==================
    /**
     * @param var0 original type: 'java.lang.String'
     */
    public constructor(var0: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'int'
     * @param var4 original type: 'java.lang.String'
     * @param var5 original type: 'java.lang.String'
     * @param var6 original type: 'java.lang.String'
     */
    public constructor(var0: string | null, var1: string | null, var2: string | null, var3: java_lang_Integer | number, var4: string | null, var5: string | null, var6: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     * @param var4 original type: 'java.lang.String'
     */
    public constructor(var0: string | null, var1: string | null, var2: string | null, var3: string | null, var4: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     */
    public constructor(var0: string | null, var1: string | null, var2: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @param var3 original type: 'java.lang.String'
     */
    public constructor(var0: string | null, var1: string | null, var2: string | null, var3: string | null);
}

/**
 * Class java.net.URI.
 *
 * This actually imports the java class for further use.
 * The class URIClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class URI extends importClass<typeof URIClass>("java.net.URI") {
}
export default URI;