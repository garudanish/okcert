import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { NetworkInterface as java_net_NetworkInterface } from "./NetworkInterface";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Long as java_lang_Long } from "./../lang/Long";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import InetAddress instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class InetAddressClass extends JavaClass {
    // ================== Method isLoopbackAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isLoopbackAddress(): Promise<boolean>;
    // ================== Method isLoopbackAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isLoopbackAddressSync(): boolean;
    // ================== Method isLinkLocalAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isLinkLocalAddress(): Promise<boolean>;
    // ================== Method isLinkLocalAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isLinkLocalAddressSync(): boolean;
    // ================== Method isMulticastAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMulticastAddress(): Promise<boolean>;
    // ================== Method isMulticastAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMulticastAddressSync(): boolean;
    // ================== Method isAnyLocalAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAnyLocalAddress(): Promise<boolean>;
    // ================== Method isAnyLocalAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAnyLocalAddressSync(): boolean;
    // ================== Method isSiteLocalAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isSiteLocalAddress(): Promise<boolean>;
    // ================== Method isSiteLocalAddress ==================
    /**
     * @return original return type: 'boolean'
     */
    public isSiteLocalAddressSync(): boolean;
    // ================== Method isMCGlobal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCGlobal(): Promise<boolean>;
    // ================== Method isMCGlobal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCGlobalSync(): boolean;
    // ================== Method isMCNodeLocal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCNodeLocal(): Promise<boolean>;
    // ================== Method isMCNodeLocal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCNodeLocalSync(): boolean;
    // ================== Method isMCLinkLocal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCLinkLocal(): Promise<boolean>;
    // ================== Method isMCLinkLocal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCLinkLocalSync(): boolean;
    // ================== Method isMCSiteLocal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCSiteLocal(): Promise<boolean>;
    // ================== Method isMCSiteLocal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCSiteLocalSync(): boolean;
    // ================== Method isMCOrgLocal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCOrgLocal(): Promise<boolean>;
    // ================== Method isMCOrgLocal ==================
    /**
     * @return original return type: 'boolean'
     */
    public isMCOrgLocalSync(): boolean;
    // ================== Method isReachable ==================
    /**
     * @param var0 original type: 'java.net.NetworkInterface'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'boolean'
     */
    public isReachable(var0: java_net_NetworkInterface | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<boolean>;
    // ================== Method isReachable ==================
    /**
     * @param var0 original type: 'java.net.NetworkInterface'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'boolean'
     */
    public isReachableSync(var0: java_net_NetworkInterface | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): boolean;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    public isReachable(var0: java_lang_Integer | number): Promise<boolean>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'boolean'
     */
    public isReachableSync(var0: java_lang_Integer | number): boolean;
    // ================== Method getCanonicalHostName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getCanonicalHostName(): Promise<string | null>;
    // ================== Method getCanonicalHostName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getCanonicalHostNameSync(): string | null;
    // ================== Method getAllByName ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.InetAddress[]'
     */
    public static getAllByName(var0: string | null): Promise<(InetAddress | null)[] | null>;
    // ================== Method getAllByName ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.InetAddress[]'
     */
    public static getAllByNameSync(var0: string | null): (InetAddress | null)[] | null;
    // ================== Method getLoopbackAddress ==================
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    public static getLoopbackAddress(): Promise<InetAddress | null>;
    // ================== Method getLoopbackAddress ==================
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    public static getLoopbackAddressSync(): InetAddress | null;
    // ================== Method getLocalHost ==================
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    public static getLocalHost(): Promise<InetAddress | null>;
    // ================== Method getLocalHost ==================
    /**
     * @return original return type: 'java.net.InetAddress'
     */
    public static getLocalHostSync(): InetAddress | null;
    // ================== Method getByAddress ==================
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.net.InetAddress'
     */
    public static getByAddress(var0: Buffer | null): Promise<InetAddress | null>;
    // ================== Method getByAddress ==================
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.net.InetAddress'
     */
    public static getByAddressSync(var0: Buffer | null): InetAddress | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'byte[]'
     * @return original return type: 'java.net.InetAddress'
     */
    public static getByAddress(var0: string | null, var1: Buffer | null): Promise<InetAddress | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'byte[]'
     * @return original return type: 'java.net.InetAddress'
     */
    public static getByAddressSync(var0: string | null, var1: Buffer | null): InetAddress | null;
    // ================== Method getByName ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.InetAddress'
     */
    public static getByName(var0: string | null): Promise<InetAddress | null>;
    // ================== Method getByName ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.InetAddress'
     */
    public static getByNameSync(var0: string | null): InetAddress | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method getAddress ==================
    /**
     * @return original return type: 'byte[]'
     */
    public getAddress(): Promise<Buffer | null>;
    // ================== Method getAddress ==================
    /**
     * @return original return type: 'byte[]'
     */
    public getAddressSync(): Buffer | null;
    // ================== Method getHostAddress ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getHostAddress(): Promise<string | null>;
    // ================== Method getHostAddress ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getHostAddressSync(): string | null;
    // ================== Method getHostName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getHostName(): Promise<string | null>;
    // ================== Method getHostName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getHostNameSync(): string | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.net.InetAddress.
 *
 * This actually imports the java class for further use.
 * The class InetAddressClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class InetAddress extends importClass<typeof InetAddressClass>("java.net.InetAddress") {
}
export default InetAddress;