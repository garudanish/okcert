import { importClass, JavaClass } from "java-bridge";
import { URLStreamHandler as java_net_URLStreamHandler } from "./URLStreamHandler";

/**
 * This class just defines types, you should import URLStreamHandlerFactory instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class URLStreamHandlerFactoryClass extends JavaClass {
    // ================== Method createURLStreamHandler ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URLStreamHandler'
     */
    public createURLStreamHandler(var0: string | null): Promise<java_net_URLStreamHandler | null>;
    // ================== Method createURLStreamHandler ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.net.URLStreamHandler'
     */
    public createURLStreamHandlerSync(var0: string | null): java_net_URLStreamHandler | null;
}

/**
 * Class java.net.URLStreamHandlerFactory.
 *
 * This actually imports the java class for further use.
 * The class URLStreamHandlerFactoryClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class URLStreamHandlerFactory extends importClass<typeof URLStreamHandlerFactoryClass>("java.net.URLStreamHandlerFactory") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default URLStreamHandlerFactory;