import { importClass, JavaClass } from "java-bridge";
import { Long as java_lang_Long } from "./../../lang/Long";
import { ByteBuffer as java_nio_ByteBuffer } from "./../ByteBuffer";

/**
 * This class just defines types, you should import SeekableByteChannel instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class SeekableByteChannelClass extends JavaClass {
    // ================== Method size ==================
    /**
     * @return original return type: 'long'
     */
    public size(): Promise<number>;
    // ================== Method size ==================
    /**
     * @return original return type: 'long'
     */
    public sizeSync(): number;
    // ================== Method position ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.SeekableByteChannel'
     */
    public position(var0: java_lang_Long | bigint | number): Promise<SeekableByteChannel | null>;
    // ================== Method position ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.SeekableByteChannel'
     */
    public positionSync(var0: java_lang_Long | bigint | number): SeekableByteChannel | null;
    /**
     * @return original return type: 'long'
     */
    public position(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    public positionSync(): number;
    // ================== Method write ==================
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public write(var0: java_nio_ByteBuffer | null): Promise<number>;
    // ================== Method write ==================
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public writeSync(var0: java_nio_ByteBuffer | null): number;
    // ================== Method read ==================
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public read(var0: java_nio_ByteBuffer | null): Promise<number>;
    // ================== Method read ==================
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public readSync(var0: java_nio_ByteBuffer | null): number;
    // ================== Method truncate ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.SeekableByteChannel'
     */
    public truncate(var0: java_lang_Long | bigint | number): Promise<SeekableByteChannel | null>;
    // ================== Method truncate ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.SeekableByteChannel'
     */
    public truncateSync(var0: java_lang_Long | bigint | number): SeekableByteChannel | null;
    // ================== Method close ==================
    /**
     * @return original return type: 'void'
     */
    public close(): Promise<void>;
    // ================== Method close ==================
    /**
     * @return original return type: 'void'
     */
    public closeSync(): void;
    // ================== Method isOpen ==================
    /**
     * @return original return type: 'boolean'
     */
    public isOpen(): Promise<boolean>;
    // ================== Method isOpen ==================
    /**
     * @return original return type: 'boolean'
     */
    public isOpenSync(): boolean;
}

/**
 * Class java.nio.channels.SeekableByteChannel.
 *
 * This actually imports the java class for further use.
 * The class SeekableByteChannelClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class SeekableByteChannel extends importClass<typeof SeekableByteChannelClass>("java.nio.channels.SeekableByteChannel") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default SeekableByteChannel;