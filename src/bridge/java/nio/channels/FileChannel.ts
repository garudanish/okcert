import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Long as java_lang_Long } from "./../../lang/Long";
import { WritableByteChannel as java_nio_channels_WritableByteChannel } from "./WritableByteChannel";
import { ReadableByteChannel as java_nio_channels_ReadableByteChannel } from "./ReadableByteChannel";
import { FileLock as java_nio_channels_FileLock } from "./FileLock";
import { Boolean as java_lang_Boolean } from "./../../lang/Boolean";
import { SeekableByteChannel as java_nio_channels_SeekableByteChannel } from "./SeekableByteChannel";
import { ByteBuffer as java_nio_ByteBuffer } from "./../ByteBuffer";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { Path as java_nio_file_Path } from "./../file/Path";
import { OpenOption as java_nio_file_OpenOption } from "./../file/OpenOption";
import { Set as java_util_Set } from "./../../util/Set";
import { FileAttribute as java_nio_file_attribute_FileAttribute } from "./../file/attribute/FileAttribute";
import { MappedByteBuffer as java_nio_MappedByteBuffer } from "./../MappedByteBuffer";
import { FileChannel$MapMode as java_nio_channels_FileChannel$MapMode } from "./FileChannel$MapMode";
import { Class as java_lang_Class } from "./../../lang/Class";

/**
 * This class just defines types, you should import FileChannel instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FileChannelClass extends JavaClass {
    // ================== Method transferTo ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'java.nio.channels.WritableByteChannel'
     * @return original return type: 'long'
     */
    public transferTo(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_nio_channels_WritableByteChannel | null): Promise<number>;
    // ================== Method transferTo ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'java.nio.channels.WritableByteChannel'
     * @return original return type: 'long'
     */
    public transferToSync(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_nio_channels_WritableByteChannel | null): number;
    // ================== Method transferFrom ==================
    /**
     * @param var0 original type: 'java.nio.channels.ReadableByteChannel'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'long'
     */
    public transferFrom(var0: java_nio_channels_ReadableByteChannel | null, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): Promise<number>;
    // ================== Method transferFrom ==================
    /**
     * @param var0 original type: 'java.nio.channels.ReadableByteChannel'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'long'
     */
    public transferFromSync(var0: java_nio_channels_ReadableByteChannel | null, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): number;
    // ================== Method tryLock ==================
    /**
     * @return original return type: 'java.nio.channels.FileLock'
     */
    public tryLock(): Promise<java_nio_channels_FileLock | null>;
    // ================== Method tryLock ==================
    /**
     * @return original return type: 'java.nio.channels.FileLock'
     */
    public tryLockSync(): java_nio_channels_FileLock | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.nio.channels.FileLock'
     */
    public tryLock(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_lang_Boolean | boolean): Promise<java_nio_channels_FileLock | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.nio.channels.FileLock'
     */
    public tryLockSync(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_lang_Boolean | boolean): java_nio_channels_FileLock | null;
    // ================== Method force ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    public force(var0: java_lang_Boolean | boolean): Promise<void>;
    // ================== Method force ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    public forceSync(var0: java_lang_Boolean | boolean): void;
    // ================== Method lock ==================
    /**
     * @return original return type: 'java.nio.channels.FileLock'
     */
    public lock(): Promise<java_nio_channels_FileLock | null>;
    // ================== Method lock ==================
    /**
     * @return original return type: 'java.nio.channels.FileLock'
     */
    public lockSync(): java_nio_channels_FileLock | null;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.nio.channels.FileLock'
     */
    public lock(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_lang_Boolean | boolean): Promise<java_nio_channels_FileLock | null>;
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'long'
     * @param var2 original type: 'boolean'
     * @return original return type: 'java.nio.channels.FileLock'
     */
    public lockSync(var0: java_lang_Long | bigint | number, var1: java_lang_Long | bigint | number, var2: java_lang_Boolean | boolean): java_nio_channels_FileLock | null;
    // ================== Method size ==================
    /**
     * @return original return type: 'long'
     */
    public size(): Promise<number>;
    // ================== Method size ==================
    /**
     * @return original return type: 'long'
     */
    public sizeSync(): number;
    // ================== Method position ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.FileChannel'
     */
    public position(var0: java_lang_Long | bigint | number): Promise<FileChannel | null>;
    // ================== Method position ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.FileChannel'
     */
    public positionSync(var0: java_lang_Long | bigint | number): FileChannel | null;
    /**
     * @return original return type: 'long'
     */
    public position(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    public positionSync(): number;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.SeekableByteChannel'
     */
    public position(var0: java_lang_Long | bigint | number): Promise<java_nio_channels_SeekableByteChannel | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.SeekableByteChannel'
     */
    public positionSync(var0: java_lang_Long | bigint | number): java_nio_channels_SeekableByteChannel | null;
    // ================== Method write ==================
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public write(var0: java_nio_ByteBuffer | null): Promise<number>;
    // ================== Method write ==================
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public writeSync(var0: java_nio_ByteBuffer | null): number;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @param var1 original type: 'long'
     * @return original return type: 'int'
     */
    public write(var0: java_nio_ByteBuffer | null, var1: java_lang_Long | bigint | number): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @param var1 original type: 'long'
     * @return original return type: 'int'
     */
    public writeSync(var0: java_nio_ByteBuffer | null, var1: java_lang_Long | bigint | number): number;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'long'
     */
    public write(var0: (java_nio_ByteBuffer | null)[] | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'long'
     */
    public writeSync(var0: (java_nio_ByteBuffer | null)[] | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer[]'
     * @return original return type: 'long'
     */
    public write(var0: (java_nio_ByteBuffer | null)[] | null): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer[]'
     * @return original return type: 'long'
     */
    public writeSync(var0: (java_nio_ByteBuffer | null)[] | null): number;
    // ================== Method read ==================
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @param var1 original type: 'long'
     * @return original return type: 'int'
     */
    public read(var0: java_nio_ByteBuffer | null, var1: java_lang_Long | bigint | number): Promise<number>;
    // ================== Method read ==================
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @param var1 original type: 'long'
     * @return original return type: 'int'
     */
    public readSync(var0: java_nio_ByteBuffer | null, var1: java_lang_Long | bigint | number): number;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public read(var0: java_nio_ByteBuffer | null): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public readSync(var0: java_nio_ByteBuffer | null): number;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'long'
     */
    public read(var0: (java_nio_ByteBuffer | null)[] | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'long'
     */
    public readSync(var0: (java_nio_ByteBuffer | null)[] | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer[]'
     * @return original return type: 'long'
     */
    public read(var0: (java_nio_ByteBuffer | null)[] | null): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer[]'
     * @return original return type: 'long'
     */
    public readSync(var0: (java_nio_ByteBuffer | null)[] | null): number;
    // ================== Method truncate ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.FileChannel'
     */
    public truncate(var0: java_lang_Long | bigint | number): Promise<FileChannel | null>;
    // ================== Method truncate ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.FileChannel'
     */
    public truncateSync(var0: java_lang_Long | bigint | number): FileChannel | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.SeekableByteChannel'
     */
    public truncate(var0: java_lang_Long | bigint | number): Promise<java_nio_channels_SeekableByteChannel | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.channels.SeekableByteChannel'
     */
    public truncateSync(var0: java_lang_Long | bigint | number): java_nio_channels_SeekableByteChannel | null;
    // ================== Method open ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.nio.file.OpenOption[]'
     * @return original return type: 'java.nio.channels.FileChannel'
     */
    public static open(var0: java_nio_file_Path | null, var1: (java_nio_file_OpenOption | null)[] | null): Promise<FileChannel | null>;
    // ================== Method open ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.nio.file.OpenOption[]'
     * @return original return type: 'java.nio.channels.FileChannel'
     */
    public static openSync(var0: java_nio_file_Path | null, var1: (java_nio_file_OpenOption | null)[] | null): FileChannel | null;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.util.Set'
     * @param var2 original type: 'java.nio.file.attribute.FileAttribute[]'
     * @return original return type: 'java.nio.channels.FileChannel'
     */
    public static open(var0: java_nio_file_Path | null, var1: java_util_Set | null, var2: (java_nio_file_attribute_FileAttribute | null)[] | null): Promise<FileChannel | null>;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @param var1 original type: 'java.util.Set'
     * @param var2 original type: 'java.nio.file.attribute.FileAttribute[]'
     * @return original return type: 'java.nio.channels.FileChannel'
     */
    public static openSync(var0: java_nio_file_Path | null, var1: java_util_Set | null, var2: (java_nio_file_attribute_FileAttribute | null)[] | null): FileChannel | null;
    // ================== Method map ==================
    /**
     * @param var0 original type: 'java.nio.channels.FileChannel$MapMode'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'java.nio.MappedByteBuffer'
     */
    public map(var0: java_nio_channels_FileChannel$MapMode | null, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): Promise<java_nio_MappedByteBuffer | null>;
    // ================== Method map ==================
    /**
     * @param var0 original type: 'java.nio.channels.FileChannel$MapMode'
     * @param var1 original type: 'long'
     * @param var2 original type: 'long'
     * @return original return type: 'java.nio.MappedByteBuffer'
     */
    public mapSync(var0: java_nio_channels_FileChannel$MapMode | null, var1: java_lang_Long | bigint | number, var2: java_lang_Long | bigint | number): java_nio_MappedByteBuffer | null;
    // ================== Method close ==================
    /**
     * @return original return type: 'void'
     */
    public close(): Promise<void>;
    // ================== Method close ==================
    /**
     * @return original return type: 'void'
     */
    public closeSync(): void;
    // ================== Method isOpen ==================
    /**
     * @return original return type: 'boolean'
     */
    public isOpen(): Promise<boolean>;
    // ================== Method isOpen ==================
    /**
     * @return original return type: 'boolean'
     */
    public isOpenSync(): boolean;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.nio.channels.FileChannel.
 *
 * This actually imports the java class for further use.
 * The class FileChannelClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class FileChannel extends importClass<typeof FileChannelClass>("java.nio.channels.FileChannel") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default FileChannel;