import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { WatchKey as java_nio_file_WatchKey } from "./WatchKey";
import { WatchService as java_nio_file_WatchService } from "./WatchService";
import { WatchEvent$Kind as java_nio_file_WatchEvent$Kind } from "./WatchEvent$Kind";
import { WatchEvent$Modifier as java_nio_file_WatchEvent$Modifier } from "./WatchEvent$Modifier";
import { Integer as java_lang_Integer } from "./../../lang/Integer";
import { Iterator as java_util_Iterator } from "./../../util/Iterator";
import { FileSystem as java_nio_file_FileSystem } from "./FileSystem";
import { File as java_io_File } from "./../../io/File";
import { URI as java_net_URI } from "./../../net/URI";
import { LinkOption as java_nio_file_LinkOption } from "./LinkOption";
import { Spliterator as java_util_Spliterator } from "./../../util/Spliterator";
import { Consumer as java_util_function_Consumer } from "./../../util/function/Consumer";

/**
 * This class just defines types, you should import Path instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class PathClass extends JavaClass {
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method register ==================
    /**
     * @param var0 original type: 'java.nio.file.WatchService'
     * @param var1 original type: 'java.nio.file.WatchEvent$Kind[]'
     * @param var2 original type: 'java.nio.file.WatchEvent$Modifier[]'
     * @return original return type: 'java.nio.file.WatchKey'
     */
    public register(var0: java_nio_file_WatchService | null, var1: (java_nio_file_WatchEvent$Kind | null)[] | null, var2: (java_nio_file_WatchEvent$Modifier | null)[] | null): Promise<java_nio_file_WatchKey | null>;
    // ================== Method register ==================
    /**
     * @param var0 original type: 'java.nio.file.WatchService'
     * @param var1 original type: 'java.nio.file.WatchEvent$Kind[]'
     * @param var2 original type: 'java.nio.file.WatchEvent$Modifier[]'
     * @return original return type: 'java.nio.file.WatchKey'
     */
    public registerSync(var0: java_nio_file_WatchService | null, var1: (java_nio_file_WatchEvent$Kind | null)[] | null, var2: (java_nio_file_WatchEvent$Modifier | null)[] | null): java_nio_file_WatchKey | null;
    /**
     * @param var0 original type: 'java.nio.file.WatchService'
     * @param var1 original type: 'java.nio.file.WatchEvent$Kind[]'
     * @return original return type: 'java.nio.file.WatchKey'
     */
    public register(var0: java_nio_file_WatchService | null, var1: (java_nio_file_WatchEvent$Kind | null)[] | null): Promise<java_nio_file_WatchKey | null>;
    /**
     * @param var0 original type: 'java.nio.file.WatchService'
     * @param var1 original type: 'java.nio.file.WatchEvent$Kind[]'
     * @return original return type: 'java.nio.file.WatchKey'
     */
    public registerSync(var0: java_nio_file_WatchService | null, var1: (java_nio_file_WatchEvent$Kind | null)[] | null): java_nio_file_WatchKey | null;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'int'
     */
    public compareTo(var0: PathClass | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'int'
     */
    public compareToSync(var0: PathClass | null): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    // ================== Method getName ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.file.Path'
     */
    public getName(var0: java_lang_Integer | number): Promise<Path | null>;
    // ================== Method getName ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.file.Path'
     */
    public getNameSync(var0: java_lang_Integer | number): Path | null;
    // ================== Method startsWith ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public startsWith(var0: string | null): Promise<boolean>;
    // ================== Method startsWith ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public startsWithSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'boolean'
     */
    public startsWith(var0: PathClass | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'boolean'
     */
    public startsWithSync(var0: PathClass | null): boolean;
    // ================== Method endsWith ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public endsWith(var0: string | null): Promise<boolean>;
    // ================== Method endsWith ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public endsWithSync(var0: string | null): boolean;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'boolean'
     */
    public endsWith(var0: PathClass | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'boolean'
     */
    public endsWithSync(var0: PathClass | null): boolean;
    // ================== Method iterator ==================
    /**
     * @return original return type: 'java.util.Iterator'
     */
    public iterator(): Promise<java_util_Iterator | null>;
    // ================== Method iterator ==================
    /**
     * @return original return type: 'java.util.Iterator'
     */
    public iteratorSync(): java_util_Iterator | null;
    // ================== Method getParent ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public getParent(): Promise<Path | null>;
    // ================== Method getParent ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public getParentSync(): Path | null;
    // ================== Method isAbsolute ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAbsolute(): Promise<boolean>;
    // ================== Method isAbsolute ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAbsoluteSync(): boolean;
    // ================== Method resolve ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'java.nio.file.Path'
     */
    public resolve(var0: PathClass | null): Promise<Path | null>;
    // ================== Method resolve ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'java.nio.file.Path'
     */
    public resolveSync(var0: PathClass | null): Path | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.nio.file.Path'
     */
    public resolve(var0: string | null): Promise<Path | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.nio.file.Path'
     */
    public resolveSync(var0: string | null): Path | null;
    // ================== Method getRoot ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public getRoot(): Promise<Path | null>;
    // ================== Method getRoot ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public getRootSync(): Path | null;
    // ================== Method normalize ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public normalize(): Promise<Path | null>;
    // ================== Method normalize ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public normalizeSync(): Path | null;
    // ================== Method getFileSystem ==================
    /**
     * @return original return type: 'java.nio.file.FileSystem'
     */
    public getFileSystem(): Promise<java_nio_file_FileSystem | null>;
    // ================== Method getFileSystem ==================
    /**
     * @return original return type: 'java.nio.file.FileSystem'
     */
    public getFileSystemSync(): java_nio_file_FileSystem | null;
    // ================== Method toFile ==================
    /**
     * @return original return type: 'java.io.File'
     */
    public toFile(): Promise<java_io_File | null>;
    // ================== Method toFile ==================
    /**
     * @return original return type: 'java.io.File'
     */
    public toFileSync(): java_io_File | null;
    // ================== Method getFileName ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public getFileName(): Promise<Path | null>;
    // ================== Method getFileName ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public getFileNameSync(): Path | null;
    // ================== Method getNameCount ==================
    /**
     * @return original return type: 'int'
     */
    public getNameCount(): Promise<number>;
    // ================== Method getNameCount ==================
    /**
     * @return original return type: 'int'
     */
    public getNameCountSync(): number;
    // ================== Method subpath ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.nio.file.Path'
     */
    public subpath(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<Path | null>;
    // ================== Method subpath ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.nio.file.Path'
     */
    public subpathSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Path | null;
    // ================== Method resolveSibling ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'java.nio.file.Path'
     */
    public resolveSibling(var0: PathClass | null): Promise<Path | null>;
    // ================== Method resolveSibling ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'java.nio.file.Path'
     */
    public resolveSiblingSync(var0: PathClass | null): Path | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.nio.file.Path'
     */
    public resolveSibling(var0: string | null): Promise<Path | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.nio.file.Path'
     */
    public resolveSiblingSync(var0: string | null): Path | null;
    // ================== Method relativize ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'java.nio.file.Path'
     */
    public relativize(var0: PathClass | null): Promise<Path | null>;
    // ================== Method relativize ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'java.nio.file.Path'
     */
    public relativizeSync(var0: PathClass | null): Path | null;
    // ================== Method toUri ==================
    /**
     * @return original return type: 'java.net.URI'
     */
    public toUri(): Promise<java_net_URI | null>;
    // ================== Method toUri ==================
    /**
     * @return original return type: 'java.net.URI'
     */
    public toUriSync(): java_net_URI | null;
    // ================== Method toAbsolutePath ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public toAbsolutePath(): Promise<Path | null>;
    // ================== Method toAbsolutePath ==================
    /**
     * @return original return type: 'java.nio.file.Path'
     */
    public toAbsolutePathSync(): Path | null;
    // ================== Method toRealPath ==================
    /**
     * @param var0 original type: 'java.nio.file.LinkOption[]'
     * @return original return type: 'java.nio.file.Path'
     */
    public toRealPath(var0: (java_nio_file_LinkOption | null)[] | null): Promise<Path | null>;
    // ================== Method toRealPath ==================
    /**
     * @param var0 original type: 'java.nio.file.LinkOption[]'
     * @return original return type: 'java.nio.file.Path'
     */
    public toRealPathSync(var0: (java_nio_file_LinkOption | null)[] | null): Path | null;
    // ================== Method spliterator ==================
    /**
     * @return original return type: 'java.util.Spliterator'
     */
    public spliterator(): Promise<java_util_Spliterator | null>;
    // ================== Method spliterator ==================
    /**
     * @return original return type: 'java.util.Spliterator'
     */
    public spliteratorSync(): java_util_Spliterator | null;
    // ================== Method forEach ==================
    /**
     * @param var0 original type: 'java.util.function.Consumer'
     * @return original return type: 'void'
     */
    public forEach(var0: java_util_function_Consumer | null): Promise<void>;
    // ================== Method forEach ==================
    /**
     * @param var0 original type: 'java.util.function.Consumer'
     * @return original return type: 'void'
     */
    public forEachSync(var0: java_util_function_Consumer | null): void;
}

/**
 * Class java.nio.file.Path.
 *
 * This actually imports the java class for further use.
 * The class PathClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Path extends importClass<typeof PathClass>("java.nio.file.Path") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default Path;