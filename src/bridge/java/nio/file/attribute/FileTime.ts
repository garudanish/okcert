import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Long as java_lang_Long } from "./../../../lang/Long";
import { Instant as java_time_Instant } from "./../../../time/Instant";
import { TimeUnit as java_util_concurrent_TimeUnit } from "./../../../util/concurrent/TimeUnit";
import { Integer as java_lang_Integer } from "./../../../lang/Integer";
import { Class as java_lang_Class } from "./../../../lang/Class";

/**
 * This class just defines types, you should import FileTime instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FileTimeClass extends JavaClass {
    // ================== Method fromMillis ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.file.attribute.FileTime'
     */
    public static fromMillis(var0: java_lang_Long | bigint | number): Promise<FileTime | null>;
    // ================== Method fromMillis ==================
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.file.attribute.FileTime'
     */
    public static fromMillisSync(var0: java_lang_Long | bigint | number): FileTime | null;
    // ================== Method toInstant ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public toInstant(): Promise<java_time_Instant | null>;
    // ================== Method toInstant ==================
    /**
     * @return original return type: 'java.time.Instant'
     */
    public toInstantSync(): java_time_Instant | null;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.util.concurrent.TimeUnit'
     * @return original return type: 'java.nio.file.attribute.FileTime'
     */
    public static from(var0: java_lang_Long | bigint | number, var1: java_util_concurrent_TimeUnit | null): Promise<FileTime | null>;
    // ================== Method from ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'java.util.concurrent.TimeUnit'
     * @return original return type: 'java.nio.file.attribute.FileTime'
     */
    public static fromSync(var0: java_lang_Long | bigint | number, var1: java_util_concurrent_TimeUnit | null): FileTime | null;
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.nio.file.attribute.FileTime'
     */
    public static from(var0: java_time_Instant | null): Promise<FileTime | null>;
    /**
     * @param var0 original type: 'java.time.Instant'
     * @return original return type: 'java.nio.file.attribute.FileTime'
     */
    public static fromSync(var0: java_time_Instant | null): FileTime | null;
    // ================== Method toMillis ==================
    /**
     * @return original return type: 'long'
     */
    public toMillis(): Promise<number>;
    // ================== Method toMillis ==================
    /**
     * @return original return type: 'long'
     */
    public toMillisSync(): number;
    // ================== Method to ==================
    /**
     * @param var0 original type: 'java.util.concurrent.TimeUnit'
     * @return original return type: 'long'
     */
    public to(var0: java_util_concurrent_TimeUnit | null): Promise<number>;
    // ================== Method to ==================
    /**
     * @param var0 original type: 'java.util.concurrent.TimeUnit'
     * @return original return type: 'long'
     */
    public toSync(var0: java_util_concurrent_TimeUnit | null): number;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.nio.file.attribute.FileTime'
     * @return original return type: 'int'
     */
    public compareTo(var0: FileTimeClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.file.attribute.FileTime'
     * @return original return type: 'int'
     */
    public compareToSync(var0: FileTimeClass | null): number;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.nio.file.attribute.FileTime.
 *
 * This actually imports the java class for further use.
 * The class FileTimeClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class FileTime extends importClass<typeof FileTimeClass>("java.nio.file.attribute.FileTime") {
}
export default FileTime;