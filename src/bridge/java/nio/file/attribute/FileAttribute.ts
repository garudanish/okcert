import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";

/**
 * This class just defines types, you should import FileAttribute instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FileAttributeClass extends JavaClass {
    // ================== Method name ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public name(): Promise<string | null>;
    // ================== Method name ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public nameSync(): string | null;
    // ================== Method value ==================
    /**
     * @return original return type: 'java.lang.Object'
     */
    public value(): Promise<BasicOrJavaType | null>;
    // ================== Method value ==================
    /**
     * @return original return type: 'java.lang.Object'
     */
    public valueSync(): BasicOrJavaType | null;
}

/**
 * Class java.nio.file.attribute.FileAttribute.
 *
 * This actually imports the java class for further use.
 * The class FileAttributeClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class FileAttribute extends importClass<typeof FileAttributeClass>("java.nio.file.attribute.FileAttribute") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default FileAttribute;