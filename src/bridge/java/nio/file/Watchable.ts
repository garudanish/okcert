import { importClass, JavaClass } from "java-bridge";
import { WatchKey as java_nio_file_WatchKey } from "./WatchKey";
import { WatchService as java_nio_file_WatchService } from "./WatchService";
import { WatchEvent$Kind as java_nio_file_WatchEvent$Kind } from "./WatchEvent$Kind";
import { WatchEvent$Modifier as java_nio_file_WatchEvent$Modifier } from "./WatchEvent$Modifier";

/**
 * This class just defines types, you should import Watchable instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class WatchableClass extends JavaClass {
    // ================== Method register ==================
    /**
     * @param var0 original type: 'java.nio.file.WatchService'
     * @param var1 original type: 'java.nio.file.WatchEvent$Kind[]'
     * @param var2 original type: 'java.nio.file.WatchEvent$Modifier[]'
     * @return original return type: 'java.nio.file.WatchKey'
     */
    public register(var0: java_nio_file_WatchService | null, var1: (java_nio_file_WatchEvent$Kind | null)[] | null, var2: (java_nio_file_WatchEvent$Modifier | null)[] | null): Promise<java_nio_file_WatchKey | null>;
    // ================== Method register ==================
    /**
     * @param var0 original type: 'java.nio.file.WatchService'
     * @param var1 original type: 'java.nio.file.WatchEvent$Kind[]'
     * @param var2 original type: 'java.nio.file.WatchEvent$Modifier[]'
     * @return original return type: 'java.nio.file.WatchKey'
     */
    public registerSync(var0: java_nio_file_WatchService | null, var1: (java_nio_file_WatchEvent$Kind | null)[] | null, var2: (java_nio_file_WatchEvent$Modifier | null)[] | null): java_nio_file_WatchKey | null;
    /**
     * @param var0 original type: 'java.nio.file.WatchService'
     * @param var1 original type: 'java.nio.file.WatchEvent$Kind[]'
     * @return original return type: 'java.nio.file.WatchKey'
     */
    public register(var0: java_nio_file_WatchService | null, var1: (java_nio_file_WatchEvent$Kind | null)[] | null): Promise<java_nio_file_WatchKey | null>;
    /**
     * @param var0 original type: 'java.nio.file.WatchService'
     * @param var1 original type: 'java.nio.file.WatchEvent$Kind[]'
     * @return original return type: 'java.nio.file.WatchKey'
     */
    public registerSync(var0: java_nio_file_WatchService | null, var1: (java_nio_file_WatchEvent$Kind | null)[] | null): java_nio_file_WatchKey | null;
}

/**
 * Class java.nio.file.Watchable.
 *
 * This actually imports the java class for further use.
 * The class WatchableClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Watchable extends importClass<typeof WatchableClass>("java.nio.file.Watchable") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default Watchable;