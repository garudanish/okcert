import { importClass, JavaClass } from "java-bridge";
import { Path as java_nio_file_Path } from "./Path";

/**
 * This class just defines types, you should import PathMatcher instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class PathMatcherClass extends JavaClass {
    // ================== Method matches ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'boolean'
     */
    public matches(var0: java_nio_file_Path | null): Promise<boolean>;
    // ================== Method matches ==================
    /**
     * @param var0 original type: 'java.nio.file.Path'
     * @return original return type: 'boolean'
     */
    public matchesSync(var0: java_nio_file_Path | null): boolean;
}

/**
 * Class java.nio.file.PathMatcher.
 *
 * This actually imports the java class for further use.
 * The class PathMatcherClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class PathMatcher extends importClass<typeof PathMatcherClass>("java.nio.file.PathMatcher") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default PathMatcher;