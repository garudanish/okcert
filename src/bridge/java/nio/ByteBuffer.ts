import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Byte as java_lang_Byte } from "./../lang/Byte";
import { Short as java_lang_Short } from "./../lang/Short";
import { Long as java_lang_Long } from "./../lang/Long";
import { Float as java_lang_Float } from "./../lang/Float";
import { Double as java_lang_Double } from "./../lang/Double";
import { ByteOrder as java_nio_ByteOrder } from "./ByteOrder";
import { CharBuffer as java_nio_CharBuffer } from "./CharBuffer";
import { ShortBuffer as java_nio_ShortBuffer } from "./ShortBuffer";
import { IntBuffer as java_nio_IntBuffer } from "./IntBuffer";
import { LongBuffer as java_nio_LongBuffer } from "./LongBuffer";
import { FloatBuffer as java_nio_FloatBuffer } from "./FloatBuffer";
import { DoubleBuffer as java_nio_DoubleBuffer } from "./DoubleBuffer";
import { Buffer as java_nio_Buffer } from "./Buffer";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import ByteBuffer instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ByteBufferClass extends JavaClass {
    // ================== Method get ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'byte'
     */
    public get(var0: java_lang_Integer | number): Promise<number>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'byte'
     */
    public getSync(var0: java_lang_Integer | number): number;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public get(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public getSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): ByteBuffer | null;
    /**
     * @return original return type: 'byte'
     */
    public get(): Promise<number>;
    /**
     * @return original return type: 'byte'
     */
    public getSync(): number;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public get(var0: Buffer | null): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public getSync(var0: Buffer | null): ByteBuffer | null;
    // ================== Method put ==================
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public put(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<ByteBuffer | null>;
    // ================== Method put ==================
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): ByteBuffer | null;
    /**
     * @param var0 original type: 'byte'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public put(var0: java_lang_Byte | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'byte'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putSync(var0: java_lang_Byte | number): ByteBuffer | null;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public put(var0: ByteBufferClass | null): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putSync(var0: ByteBufferClass | null): ByteBuffer | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'byte'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public put(var0: java_lang_Integer | number, var1: java_lang_Byte | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'byte'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putSync(var0: java_lang_Integer | number, var1: java_lang_Byte | number): ByteBuffer | null;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public put(var0: Buffer | null): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putSync(var0: Buffer | null): ByteBuffer | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public compareTo(var0: ByteBufferClass | null): Promise<number>;
    /**
     * @param var0 original type: 'java.nio.ByteBuffer'
     * @return original return type: 'int'
     */
    public compareToSync(var0: ByteBufferClass | null): number;
    // ================== Method getShort ==================
    /**
     * @return original return type: 'short'
     */
    public getShort(): Promise<number>;
    // ================== Method getShort ==================
    /**
     * @return original return type: 'short'
     */
    public getShortSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'short'
     */
    public getShort(var0: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'short'
     */
    public getShortSync(var0: java_lang_Integer | number): number;
    // ================== Method putShort ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'short'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putShort(var0: java_lang_Integer | number, var1: java_lang_Short | number): Promise<ByteBuffer | null>;
    // ================== Method putShort ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'short'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putShortSync(var0: java_lang_Integer | number, var1: java_lang_Short | number): ByteBuffer | null;
    /**
     * @param var0 original type: 'short'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putShort(var0: java_lang_Short | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'short'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putShortSync(var0: java_lang_Short | number): ByteBuffer | null;
    // ================== Method getChar ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'char'
     */
    public getChar(var0: java_lang_Integer | number): Promise<string | null>;
    // ================== Method getChar ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'char'
     */
    public getCharSync(var0: java_lang_Integer | number): string | null;
    /**
     * @return original return type: 'char'
     */
    public getChar(): Promise<string | null>;
    /**
     * @return original return type: 'char'
     */
    public getCharSync(): string | null;
    // ================== Method putChar ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'char'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putChar(var0: java_lang_Integer | number, var1: string | null): Promise<ByteBuffer | null>;
    // ================== Method putChar ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'char'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putCharSync(var0: java_lang_Integer | number, var1: string | null): ByteBuffer | null;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putChar(var0: string | null): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putCharSync(var0: string | null): ByteBuffer | null;
    // ================== Method getInt ==================
    /**
     * @return original return type: 'int'
     */
    public getInt(): Promise<number>;
    // ================== Method getInt ==================
    /**
     * @return original return type: 'int'
     */
    public getIntSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'int'
     */
    public getInt(var0: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'int'
     */
    public getIntSync(var0: java_lang_Integer | number): number;
    // ================== Method putInt ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putInt(var0: java_lang_Integer | number): Promise<ByteBuffer | null>;
    // ================== Method putInt ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putIntSync(var0: java_lang_Integer | number): ByteBuffer | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putInt(var0: java_lang_Integer | number, var1: java_lang_Integer | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putIntSync(var0: java_lang_Integer | number, var1: java_lang_Integer | number): ByteBuffer | null;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'long'
     */
    public getLong(var0: java_lang_Integer | number): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'long'
     */
    public getLongSync(var0: java_lang_Integer | number): number;
    /**
     * @return original return type: 'long'
     */
    public getLong(): Promise<number>;
    /**
     * @return original return type: 'long'
     */
    public getLongSync(): number;
    // ================== Method putLong ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'long'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putLong(var0: java_lang_Integer | number, var1: java_lang_Long | bigint | number): Promise<ByteBuffer | null>;
    // ================== Method putLong ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'long'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putLongSync(var0: java_lang_Integer | number, var1: java_lang_Long | bigint | number): ByteBuffer | null;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putLong(var0: java_lang_Long | bigint | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putLongSync(var0: java_lang_Long | bigint | number): ByteBuffer | null;
    // ================== Method getFloat ==================
    /**
     * @return original return type: 'float'
     */
    public getFloat(): Promise<number>;
    // ================== Method getFloat ==================
    /**
     * @return original return type: 'float'
     */
    public getFloatSync(): number;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'float'
     */
    public getFloat(var0: java_lang_Integer | number): Promise<number>;
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'float'
     */
    public getFloatSync(var0: java_lang_Integer | number): number;
    // ================== Method putFloat ==================
    /**
     * @param var0 original type: 'float'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putFloat(var0: java_lang_Float | number): Promise<ByteBuffer | null>;
    // ================== Method putFloat ==================
    /**
     * @param var0 original type: 'float'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putFloatSync(var0: java_lang_Float | number): ByteBuffer | null;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'float'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putFloat(var0: java_lang_Integer | number, var1: java_lang_Float | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'float'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putFloatSync(var0: java_lang_Integer | number, var1: java_lang_Float | number): ByteBuffer | null;
    // ================== Method getDouble ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'double'
     */
    public getDouble(var0: java_lang_Integer | number): Promise<number>;
    // ================== Method getDouble ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'double'
     */
    public getDoubleSync(var0: java_lang_Integer | number): number;
    /**
     * @return original return type: 'double'
     */
    public getDouble(): Promise<number>;
    /**
     * @return original return type: 'double'
     */
    public getDoubleSync(): number;
    // ================== Method putDouble ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'double'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putDouble(var0: java_lang_Integer | number, var1: java_lang_Double | number): Promise<ByteBuffer | null>;
    // ================== Method putDouble ==================
    /**
     * @param var0 original type: 'int'
     * @param var1 original type: 'double'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putDoubleSync(var0: java_lang_Integer | number, var1: java_lang_Double | number): ByteBuffer | null;
    /**
     * @param var0 original type: 'double'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putDouble(var0: java_lang_Double | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'double'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public putDoubleSync(var0: java_lang_Double | number): ByteBuffer | null;
    // ================== Method isDirect ==================
    /**
     * @return original return type: 'boolean'
     */
    public isDirect(): Promise<boolean>;
    // ================== Method isDirect ==================
    /**
     * @return original return type: 'boolean'
     */
    public isDirectSync(): boolean;
    // ================== Method hasArray ==================
    /**
     * @return original return type: 'boolean'
     */
    public hasArray(): Promise<boolean>;
    // ================== Method hasArray ==================
    /**
     * @return original return type: 'boolean'
     */
    public hasArraySync(): boolean;
    // ================== Method array ==================
    /**
     * @return original return type: 'java.lang.Object'
     */
    public array(): Promise<BasicOrJavaType | null>;
    // ================== Method array ==================
    /**
     * @return original return type: 'java.lang.Object'
     */
    public arraySync(): BasicOrJavaType | null;
    /**
     * @return original return type: 'byte[]'
     */
    public array(): Promise<Buffer | null>;
    /**
     * @return original return type: 'byte[]'
     */
    public arraySync(): Buffer | null;
    // ================== Method arrayOffset ==================
    /**
     * @return original return type: 'int'
     */
    public arrayOffset(): Promise<number>;
    // ================== Method arrayOffset ==================
    /**
     * @return original return type: 'int'
     */
    public arrayOffsetSync(): number;
    // ================== Method wrap ==================
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public static wrap(var0: Buffer | null): Promise<ByteBuffer | null>;
    // ================== Method wrap ==================
    /**
     * @param var0 original type: 'byte[]'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public static wrapSync(var0: Buffer | null): ByteBuffer | null;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public static wrap(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): Promise<ByteBuffer | null>;
    /**
     * @param var0 original type: 'byte[]'
     * @param var1 original type: 'int'
     * @param var2 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public static wrapSync(var0: Buffer | null, var1: java_lang_Integer | number, var2: java_lang_Integer | number): ByteBuffer | null;
    // ================== Method allocate ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public static allocate(var0: java_lang_Integer | number): Promise<ByteBuffer | null>;
    // ================== Method allocate ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public static allocateSync(var0: java_lang_Integer | number): ByteBuffer | null;
    // ================== Method duplicate ==================
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public duplicate(): Promise<ByteBuffer | null>;
    // ================== Method duplicate ==================
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public duplicateSync(): ByteBuffer | null;
    // ================== Method allocateDirect ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public static allocateDirect(var0: java_lang_Integer | number): Promise<ByteBuffer | null>;
    // ================== Method allocateDirect ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public static allocateDirectSync(var0: java_lang_Integer | number): ByteBuffer | null;
    // ================== Method slice ==================
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public slice(): Promise<ByteBuffer | null>;
    // ================== Method slice ==================
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public sliceSync(): ByteBuffer | null;
    // ================== Method asReadOnlyBuffer ==================
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public asReadOnlyBuffer(): Promise<ByteBuffer | null>;
    // ================== Method asReadOnlyBuffer ==================
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public asReadOnlyBufferSync(): ByteBuffer | null;
    // ================== Method compact ==================
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public compact(): Promise<ByteBuffer | null>;
    // ================== Method compact ==================
    /**
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public compactSync(): ByteBuffer | null;
    // ================== Method order ==================
    /**
     * @param var0 original type: 'java.nio.ByteOrder'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public order(var0: java_nio_ByteOrder | null): Promise<ByteBuffer | null>;
    // ================== Method order ==================
    /**
     * @param var0 original type: 'java.nio.ByteOrder'
     * @return original return type: 'java.nio.ByteBuffer'
     */
    public orderSync(var0: java_nio_ByteOrder | null): ByteBuffer | null;
    /**
     * @return original return type: 'java.nio.ByteOrder'
     */
    public order(): Promise<java_nio_ByteOrder | null>;
    /**
     * @return original return type: 'java.nio.ByteOrder'
     */
    public orderSync(): java_nio_ByteOrder | null;
    // ================== Method asCharBuffer ==================
    /**
     * @return original return type: 'java.nio.CharBuffer'
     */
    public asCharBuffer(): Promise<java_nio_CharBuffer | null>;
    // ================== Method asCharBuffer ==================
    /**
     * @return original return type: 'java.nio.CharBuffer'
     */
    public asCharBufferSync(): java_nio_CharBuffer | null;
    // ================== Method asShortBuffer ==================
    /**
     * @return original return type: 'java.nio.ShortBuffer'
     */
    public asShortBuffer(): Promise<java_nio_ShortBuffer | null>;
    // ================== Method asShortBuffer ==================
    /**
     * @return original return type: 'java.nio.ShortBuffer'
     */
    public asShortBufferSync(): java_nio_ShortBuffer | null;
    // ================== Method asIntBuffer ==================
    /**
     * @return original return type: 'java.nio.IntBuffer'
     */
    public asIntBuffer(): Promise<java_nio_IntBuffer | null>;
    // ================== Method asIntBuffer ==================
    /**
     * @return original return type: 'java.nio.IntBuffer'
     */
    public asIntBufferSync(): java_nio_IntBuffer | null;
    // ================== Method asLongBuffer ==================
    /**
     * @return original return type: 'java.nio.LongBuffer'
     */
    public asLongBuffer(): Promise<java_nio_LongBuffer | null>;
    // ================== Method asLongBuffer ==================
    /**
     * @return original return type: 'java.nio.LongBuffer'
     */
    public asLongBufferSync(): java_nio_LongBuffer | null;
    // ================== Method asFloatBuffer ==================
    /**
     * @return original return type: 'java.nio.FloatBuffer'
     */
    public asFloatBuffer(): Promise<java_nio_FloatBuffer | null>;
    // ================== Method asFloatBuffer ==================
    /**
     * @return original return type: 'java.nio.FloatBuffer'
     */
    public asFloatBufferSync(): java_nio_FloatBuffer | null;
    // ================== Method asDoubleBuffer ==================
    /**
     * @return original return type: 'java.nio.DoubleBuffer'
     */
    public asDoubleBuffer(): Promise<java_nio_DoubleBuffer | null>;
    // ================== Method asDoubleBuffer ==================
    /**
     * @return original return type: 'java.nio.DoubleBuffer'
     */
    public asDoubleBufferSync(): java_nio_DoubleBuffer | null;
    // ================== Method limit ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.Buffer'
     */
    public limit(var0: java_lang_Integer | number): Promise<java_nio_Buffer | null>;
    // ================== Method limit ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.Buffer'
     */
    public limitSync(var0: java_lang_Integer | number): java_nio_Buffer | null;
    /**
     * @return original return type: 'int'
     */
    public limit(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    public limitSync(): number;
    // ================== Method clear ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public clear(): Promise<java_nio_Buffer | null>;
    // ================== Method clear ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public clearSync(): java_nio_Buffer | null;
    // ================== Method remaining ==================
    /**
     * @return original return type: 'int'
     */
    public remaining(): Promise<number>;
    // ================== Method remaining ==================
    /**
     * @return original return type: 'int'
     */
    public remainingSync(): number;
    // ================== Method position ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.Buffer'
     */
    public position(var0: java_lang_Integer | number): Promise<java_nio_Buffer | null>;
    // ================== Method position ==================
    /**
     * @param var0 original type: 'int'
     * @return original return type: 'java.nio.Buffer'
     */
    public positionSync(var0: java_lang_Integer | number): java_nio_Buffer | null;
    /**
     * @return original return type: 'int'
     */
    public position(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    public positionSync(): number;
    // ================== Method capacity ==================
    /**
     * @return original return type: 'int'
     */
    public capacity(): Promise<number>;
    // ================== Method capacity ==================
    /**
     * @return original return type: 'int'
     */
    public capacitySync(): number;
    // ================== Method mark ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public mark(): Promise<java_nio_Buffer | null>;
    // ================== Method mark ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public markSync(): java_nio_Buffer | null;
    // ================== Method reset ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public reset(): Promise<java_nio_Buffer | null>;
    // ================== Method reset ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public resetSync(): java_nio_Buffer | null;
    // ================== Method flip ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public flip(): Promise<java_nio_Buffer | null>;
    // ================== Method flip ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public flipSync(): java_nio_Buffer | null;
    // ================== Method rewind ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public rewind(): Promise<java_nio_Buffer | null>;
    // ================== Method rewind ==================
    /**
     * @return original return type: 'java.nio.Buffer'
     */
    public rewindSync(): java_nio_Buffer | null;
    // ================== Method hasRemaining ==================
    /**
     * @return original return type: 'boolean'
     */
    public hasRemaining(): Promise<boolean>;
    // ================== Method hasRemaining ==================
    /**
     * @return original return type: 'boolean'
     */
    public hasRemainingSync(): boolean;
    // ================== Method isReadOnly ==================
    /**
     * @return original return type: 'boolean'
     */
    public isReadOnly(): Promise<boolean>;
    // ================== Method isReadOnly ==================
    /**
     * @return original return type: 'boolean'
     */
    public isReadOnlySync(): boolean;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.nio.ByteBuffer.
 *
 * This actually imports the java class for further use.
 * The class ByteBufferClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class ByteBuffer extends importClass<typeof ByteBufferClass>("java.nio.ByteBuffer") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default ByteBuffer;