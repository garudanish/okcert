import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Annotation as java_lang_annotation_Annotation } from "./../annotation/Annotation";
import { Class as java_lang_Class } from "./../Class";
import { Boolean as java_lang_Boolean } from "./../Boolean";
import { Long as java_lang_Long } from "./../Long";
import { Integer as java_lang_Integer } from "./../Integer";

/**
 * This class just defines types, you should import AccessibleObject instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class AccessibleObjectClass extends JavaClass {
    // ================== Method getAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getAnnotation(var0: java_lang_Class | null): Promise<java_lang_annotation_Annotation | null>;
    // ================== Method getAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getAnnotationSync(var0: java_lang_Class | null): java_lang_annotation_Annotation | null;
    // ================== Method isAnnotationPresent ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'boolean'
     */
    public isAnnotationPresent(var0: java_lang_Class | null): Promise<boolean>;
    // ================== Method isAnnotationPresent ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'boolean'
     */
    public isAnnotationPresentSync(var0: java_lang_Class | null): boolean;
    // ================== Method getAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsByType(var0: java_lang_Class | null): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsByTypeSync(var0: java_lang_Class | null): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method getAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotations(): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsSync(): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method getDeclaredAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getDeclaredAnnotation(var0: java_lang_Class | null): Promise<java_lang_annotation_Annotation | null>;
    // ================== Method getDeclaredAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getDeclaredAnnotationSync(var0: java_lang_Class | null): java_lang_annotation_Annotation | null;
    // ================== Method getDeclaredAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsByType(var0: java_lang_Class | null): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getDeclaredAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsByTypeSync(var0: java_lang_Class | null): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method getDeclaredAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotations(): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getDeclaredAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsSync(): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method setAccessible ==================
    /**
     * @param var0 original type: 'java.lang.reflect.AccessibleObject[]'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    public static setAccessible(var0: (AccessibleObjectClass | null)[] | null, var1: java_lang_Boolean | boolean): Promise<void>;
    // ================== Method setAccessible ==================
    /**
     * @param var0 original type: 'java.lang.reflect.AccessibleObject[]'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    public static setAccessibleSync(var0: (AccessibleObjectClass | null)[] | null, var1: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    public setAccessible(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    public setAccessibleSync(var0: java_lang_Boolean | boolean): void;
    // ================== Method isAccessible ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAccessible(): Promise<boolean>;
    // ================== Method isAccessible ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAccessibleSync(): boolean;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.lang.reflect.AccessibleObject.
 *
 * This actually imports the java class for further use.
 * The class AccessibleObjectClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class AccessibleObject extends importClass<typeof AccessibleObjectClass>("java.lang.reflect.AccessibleObject") {
}
export default AccessibleObject;