import { importClass, JavaClass } from "java-bridge";
import { TypeVariable as java_lang_reflect_TypeVariable } from "./TypeVariable";
import { Annotation as java_lang_annotation_Annotation } from "./../annotation/Annotation";
import { Class as java_lang_Class } from "./../Class";

/**
 * This class just defines types, you should import GenericDeclaration instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class GenericDeclarationClass extends JavaClass {
    // ================== Method getTypeParameters ==================
    /**
     * @return original return type: 'java.lang.reflect.TypeVariable[]'
     */
    public getTypeParameters(): Promise<(java_lang_reflect_TypeVariable | null)[] | null>;
    // ================== Method getTypeParameters ==================
    /**
     * @return original return type: 'java.lang.reflect.TypeVariable[]'
     */
    public getTypeParametersSync(): (java_lang_reflect_TypeVariable | null)[] | null;
    // ================== Method getAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getAnnotation(var0: java_lang_Class | null): Promise<java_lang_annotation_Annotation | null>;
    // ================== Method getAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getAnnotationSync(var0: java_lang_Class | null): java_lang_annotation_Annotation | null;
    // ================== Method isAnnotationPresent ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'boolean'
     */
    public isAnnotationPresent(var0: java_lang_Class | null): Promise<boolean>;
    // ================== Method isAnnotationPresent ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'boolean'
     */
    public isAnnotationPresentSync(var0: java_lang_Class | null): boolean;
    // ================== Method getAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsByType(var0: java_lang_Class | null): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsByTypeSync(var0: java_lang_Class | null): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method getAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotations(): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsSync(): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method getDeclaredAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getDeclaredAnnotation(var0: java_lang_Class | null): Promise<java_lang_annotation_Annotation | null>;
    // ================== Method getDeclaredAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getDeclaredAnnotationSync(var0: java_lang_Class | null): java_lang_annotation_Annotation | null;
    // ================== Method getDeclaredAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsByType(var0: java_lang_Class | null): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getDeclaredAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsByTypeSync(var0: java_lang_Class | null): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method getDeclaredAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotations(): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getDeclaredAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsSync(): (java_lang_annotation_Annotation | null)[] | null;
}

/**
 * Class java.lang.reflect.GenericDeclaration.
 *
 * This actually imports the java class for further use.
 * The class GenericDeclarationClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class GenericDeclaration extends importClass<typeof GenericDeclarationClass>("java.lang.reflect.GenericDeclaration") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default GenericDeclaration;