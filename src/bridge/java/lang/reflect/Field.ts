import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Integer as java_lang_Integer } from "./../Integer";
import { Class as java_lang_Class } from "./../Class";
import { Annotation as java_lang_annotation_Annotation } from "./../annotation/Annotation";
import { Type as java_lang_reflect_Type } from "./Type";
import { Boolean as java_lang_Boolean } from "./../Boolean";
import { Byte as java_lang_Byte } from "./../Byte";
import { Short as java_lang_Short } from "./../Short";
import { Long as java_lang_Long } from "./../Long";
import { Float as java_lang_Float } from "./../Float";
import { Double as java_lang_Double } from "./../Double";
import { AnnotatedType as java_lang_reflect_AnnotatedType } from "./AnnotatedType";
import { AccessibleObject as java_lang_reflect_AccessibleObject } from "./AccessibleObject";

/**
 * This class just defines types, you should import Field instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class FieldClass extends JavaClass {
    // ================== Field PUBLIC ==================
    /**
     * Original type: 'int'
     */
    public static readonly PUBLIC: java_lang_Integer | number;
    // ================== Field DECLARED ==================
    /**
     * Original type: 'int'
     */
    public static readonly DECLARED: java_lang_Integer | number;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public get(var0: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public getSync(var0: BasicOrJavaType | null): BasicOrJavaType | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method getModifiers ==================
    /**
     * @return original return type: 'int'
     */
    public getModifiers(): Promise<number>;
    // ================== Method getModifiers ==================
    /**
     * @return original return type: 'int'
     */
    public getModifiersSync(): number;
    // ================== Method getBoolean ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public getBoolean(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method getBoolean ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public getBooleanSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method getByte ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'byte'
     */
    public getByte(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method getByte ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'byte'
     */
    public getByteSync(var0: BasicOrJavaType | null): number;
    // ================== Method getShort ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'short'
     */
    public getShort(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method getShort ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'short'
     */
    public getShortSync(var0: BasicOrJavaType | null): number;
    // ================== Method getChar ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'char'
     */
    public getChar(var0: BasicOrJavaType | null): Promise<string | null>;
    // ================== Method getChar ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'char'
     */
    public getCharSync(var0: BasicOrJavaType | null): string | null;
    // ================== Method getInt ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public getInt(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method getInt ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public getIntSync(var0: BasicOrJavaType | null): number;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'long'
     */
    public getLong(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method getLong ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'long'
     */
    public getLongSync(var0: BasicOrJavaType | null): number;
    // ================== Method getFloat ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'float'
     */
    public getFloat(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method getFloat ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'float'
     */
    public getFloatSync(var0: BasicOrJavaType | null): number;
    // ================== Method getDouble ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'double'
     */
    public getDouble(var0: BasicOrJavaType | null): Promise<number>;
    // ================== Method getDouble ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'double'
     */
    public getDoubleSync(var0: BasicOrJavaType | null): number;
    // ================== Method getName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getName(): Promise<string | null>;
    // ================== Method getName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getNameSync(): string | null;
    // ================== Method toGenericString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toGenericString(): Promise<string | null>;
    // ================== Method toGenericString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toGenericStringSync(): string | null;
    // ================== Method isSynthetic ==================
    /**
     * @return original return type: 'boolean'
     */
    public isSynthetic(): Promise<boolean>;
    // ================== Method isSynthetic ==================
    /**
     * @return original return type: 'boolean'
     */
    public isSyntheticSync(): boolean;
    // ================== Method getDeclaringClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getDeclaringClass(): Promise<java_lang_Class | null>;
    // ================== Method getDeclaringClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getDeclaringClassSync(): java_lang_Class | null;
    // ================== Method getAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getAnnotation(var0: java_lang_Class | null): Promise<java_lang_annotation_Annotation | null>;
    // ================== Method getAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getAnnotationSync(var0: java_lang_Class | null): java_lang_annotation_Annotation | null;
    // ================== Method getAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsByType(var0: java_lang_Class | null): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsByTypeSync(var0: java_lang_Class | null): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method getDeclaredAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotations(): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getDeclaredAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsSync(): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method isEnumConstant ==================
    /**
     * @return original return type: 'boolean'
     */
    public isEnumConstant(): Promise<boolean>;
    // ================== Method isEnumConstant ==================
    /**
     * @return original return type: 'boolean'
     */
    public isEnumConstantSync(): boolean;
    // ================== Method getType ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getType(): Promise<java_lang_Class | null>;
    // ================== Method getType ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getTypeSync(): java_lang_Class | null;
    // ================== Method getGenericType ==================
    /**
     * @return original return type: 'java.lang.reflect.Type'
     */
    public getGenericType(): Promise<java_lang_reflect_Type | null>;
    // ================== Method getGenericType ==================
    /**
     * @return original return type: 'java.lang.reflect.Type'
     */
    public getGenericTypeSync(): java_lang_reflect_Type | null;
    // ================== Method set ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    public set(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): Promise<void>;
    // ================== Method set ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'void'
     */
    public setSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): void;
    // ================== Method setBoolean ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    public setBoolean(var0: BasicOrJavaType | null, var1: java_lang_Boolean | boolean): Promise<void>;
    // ================== Method setBoolean ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    public setBooleanSync(var0: BasicOrJavaType | null, var1: java_lang_Boolean | boolean): void;
    // ================== Method setByte ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'byte'
     * @return original return type: 'void'
     */
    public setByte(var0: BasicOrJavaType | null, var1: java_lang_Byte | number): Promise<void>;
    // ================== Method setByte ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'byte'
     * @return original return type: 'void'
     */
    public setByteSync(var0: BasicOrJavaType | null, var1: java_lang_Byte | number): void;
    // ================== Method setChar ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'char'
     * @return original return type: 'void'
     */
    public setChar(var0: BasicOrJavaType | null, var1: string | null): Promise<void>;
    // ================== Method setChar ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'char'
     * @return original return type: 'void'
     */
    public setCharSync(var0: BasicOrJavaType | null, var1: string | null): void;
    // ================== Method setShort ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'short'
     * @return original return type: 'void'
     */
    public setShort(var0: BasicOrJavaType | null, var1: java_lang_Short | number): Promise<void>;
    // ================== Method setShort ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'short'
     * @return original return type: 'void'
     */
    public setShortSync(var0: BasicOrJavaType | null, var1: java_lang_Short | number): void;
    // ================== Method setInt ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public setInt(var0: BasicOrJavaType | null, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method setInt ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public setIntSync(var0: BasicOrJavaType | null, var1: java_lang_Integer | number): void;
    // ================== Method setLong ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'long'
     * @return original return type: 'void'
     */
    public setLong(var0: BasicOrJavaType | null, var1: java_lang_Long | bigint | number): Promise<void>;
    // ================== Method setLong ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'long'
     * @return original return type: 'void'
     */
    public setLongSync(var0: BasicOrJavaType | null, var1: java_lang_Long | bigint | number): void;
    // ================== Method setFloat ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'float'
     * @return original return type: 'void'
     */
    public setFloat(var0: BasicOrJavaType | null, var1: java_lang_Float | number): Promise<void>;
    // ================== Method setFloat ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'float'
     * @return original return type: 'void'
     */
    public setFloatSync(var0: BasicOrJavaType | null, var1: java_lang_Float | number): void;
    // ================== Method setDouble ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'double'
     * @return original return type: 'void'
     */
    public setDouble(var0: BasicOrJavaType | null, var1: java_lang_Double | number): Promise<void>;
    // ================== Method setDouble ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'double'
     * @return original return type: 'void'
     */
    public setDoubleSync(var0: BasicOrJavaType | null, var1: java_lang_Double | number): void;
    // ================== Method getAnnotatedType ==================
    /**
     * @return original return type: 'java.lang.reflect.AnnotatedType'
     */
    public getAnnotatedType(): Promise<java_lang_reflect_AnnotatedType | null>;
    // ================== Method getAnnotatedType ==================
    /**
     * @return original return type: 'java.lang.reflect.AnnotatedType'
     */
    public getAnnotatedTypeSync(): java_lang_reflect_AnnotatedType | null;
    // ================== Method isAnnotationPresent ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'boolean'
     */
    public isAnnotationPresent(var0: java_lang_Class | null): Promise<boolean>;
    // ================== Method isAnnotationPresent ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'boolean'
     */
    public isAnnotationPresentSync(var0: java_lang_Class | null): boolean;
    // ================== Method getAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotations(): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getAnnotations ==================
    /**
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getAnnotationsSync(): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method getDeclaredAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getDeclaredAnnotation(var0: java_lang_Class | null): Promise<java_lang_annotation_Annotation | null>;
    // ================== Method getDeclaredAnnotation ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation'
     */
    public getDeclaredAnnotationSync(var0: java_lang_Class | null): java_lang_annotation_Annotation | null;
    // ================== Method getDeclaredAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsByType(var0: java_lang_Class | null): Promise<(java_lang_annotation_Annotation | null)[] | null>;
    // ================== Method getDeclaredAnnotationsByType ==================
    /**
     * @param var0 original type: 'java.lang.Class'
     * @return original return type: 'java.lang.annotation.Annotation[]'
     */
    public getDeclaredAnnotationsByTypeSync(var0: java_lang_Class | null): (java_lang_annotation_Annotation | null)[] | null;
    // ================== Method setAccessible ==================
    /**
     * @param var0 original type: 'java.lang.reflect.AccessibleObject[]'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    public static setAccessible(var0: (java_lang_reflect_AccessibleObject | null)[] | null, var1: java_lang_Boolean | boolean): Promise<void>;
    // ================== Method setAccessible ==================
    /**
     * @param var0 original type: 'java.lang.reflect.AccessibleObject[]'
     * @param var1 original type: 'boolean'
     * @return original return type: 'void'
     */
    public static setAccessibleSync(var0: (java_lang_reflect_AccessibleObject | null)[] | null, var1: java_lang_Boolean | boolean): void;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    public setAccessible(var0: java_lang_Boolean | boolean): Promise<void>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'void'
     */
    public setAccessibleSync(var0: java_lang_Boolean | boolean): void;
    // ================== Method isAccessible ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAccessible(): Promise<boolean>;
    // ================== Method isAccessible ==================
    /**
     * @return original return type: 'boolean'
     */
    public isAccessibleSync(): boolean;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.lang.reflect.Field.
 *
 * This actually imports the java class for further use.
 * The class FieldClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Field extends importClass<typeof FieldClass>("java.lang.reflect.Field") {
}
export default Field;