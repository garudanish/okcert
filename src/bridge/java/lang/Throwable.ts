import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { PrintStream as java_io_PrintStream } from "./../io/PrintStream";
import { PrintWriter as java_io_PrintWriter } from "./../io/PrintWriter";
import { StackTraceElement as java_lang_StackTraceElement } from "./StackTraceElement";
import { Long as java_lang_Long } from "./Long";
import { Integer as java_lang_Integer } from "./Integer";
import { Class as java_lang_Class } from "./Class";

/**
 * This class just defines types, you should import Throwable instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ThrowableClass extends JavaClass {
    // ================== Method printStackTrace ==================
    /**
     * @param var0 original type: 'java.io.PrintStream'
     * @return original return type: 'void'
     */
    public printStackTrace(var0: java_io_PrintStream | null): Promise<void>;
    // ================== Method printStackTrace ==================
    /**
     * @param var0 original type: 'java.io.PrintStream'
     * @return original return type: 'void'
     */
    public printStackTraceSync(var0: java_io_PrintStream | null): void;
    /**
     * @return original return type: 'void'
     */
    public printStackTrace(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public printStackTraceSync(): void;
    /**
     * @param var0 original type: 'java.io.PrintWriter'
     * @return original return type: 'void'
     */
    public printStackTrace(var0: java_io_PrintWriter | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.PrintWriter'
     * @return original return type: 'void'
     */
    public printStackTraceSync(var0: java_io_PrintWriter | null): void;
    // ================== Method fillInStackTrace ==================
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    public fillInStackTrace(): Promise<Throwable | null>;
    // ================== Method fillInStackTrace ==================
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    public fillInStackTraceSync(): Throwable | null;
    // ================== Method getCause ==================
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    public getCause(): Promise<Throwable | null>;
    // ================== Method getCause ==================
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    public getCauseSync(): Throwable | null;
    // ================== Method initCause ==================
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'java.lang.Throwable'
     */
    public initCause(var0: ThrowableClass | null): Promise<Throwable | null>;
    // ================== Method initCause ==================
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'java.lang.Throwable'
     */
    public initCauseSync(var0: ThrowableClass | null): Throwable | null;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method getMessage ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getMessage(): Promise<string | null>;
    // ================== Method getMessage ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getMessageSync(): string | null;
    // ================== Method getLocalizedMessage ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getLocalizedMessage(): Promise<string | null>;
    // ================== Method getLocalizedMessage ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getLocalizedMessageSync(): string | null;
    // ================== Method getStackTrace ==================
    /**
     * @return original return type: 'java.lang.StackTraceElement[]'
     */
    public getStackTrace(): Promise<(java_lang_StackTraceElement | null)[] | null>;
    // ================== Method getStackTrace ==================
    /**
     * @return original return type: 'java.lang.StackTraceElement[]'
     */
    public getStackTraceSync(): (java_lang_StackTraceElement | null)[] | null;
    // ================== Method setStackTrace ==================
    /**
     * @param var0 original type: 'java.lang.StackTraceElement[]'
     * @return original return type: 'void'
     */
    public setStackTrace(var0: (java_lang_StackTraceElement | null)[] | null): Promise<void>;
    // ================== Method setStackTrace ==================
    /**
     * @param var0 original type: 'java.lang.StackTraceElement[]'
     * @return original return type: 'void'
     */
    public setStackTraceSync(var0: (java_lang_StackTraceElement | null)[] | null): void;
    // ================== Method addSuppressed ==================
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'void'
     */
    public addSuppressed(var0: ThrowableClass | null): Promise<void>;
    // ================== Method addSuppressed ==================
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'void'
     */
    public addSuppressedSync(var0: ThrowableClass | null): void;
    // ================== Method getSuppressed ==================
    /**
     * @return original return type: 'java.lang.Throwable[]'
     */
    public getSuppressed(): Promise<(Throwable | null)[] | null>;
    // ================== Method getSuppressed ==================
    /**
     * @return original return type: 'java.lang.Throwable[]'
     */
    public getSuppressedSync(): (Throwable | null)[] | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
    // ================== Method newInstance ==================
    /**
     * @param var0 original type: 'java.lang.Throwable'
     * @return original return type: 'java.lang.Throwable'
     */
    public static newInstance(var0: ThrowableClass | null): Promise<Throwable>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.Throwable'
     * @return original return type: 'java.lang.Throwable'
     */
    public static newInstance(var0: string | null, var1: ThrowableClass | null): Promise<Throwable>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Throwable'
     */
    public static newInstance(var0: string | null): Promise<Throwable>;
    /**
     * @return original return type: 'java.lang.Throwable'
     */
    public static newInstance(): Promise<Throwable>;
    // ================== Constructors ==================
    /**
     * @param var0 original type: 'java.lang.Throwable'
     */
    public constructor(var0: ThrowableClass | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.Throwable'
     */
    public constructor(var0: string | null, var1: ThrowableClass | null);
    /**
     * @param var0 original type: 'java.lang.String'
     */
    public constructor(var0: string | null);
    public constructor();
}

/**
 * Class java.lang.Throwable.
 *
 * This actually imports the java class for further use.
 * The class ThrowableClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Throwable extends importClass<typeof ThrowableClass>("java.lang.Throwable") {
}
export default Throwable;