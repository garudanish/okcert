import { importClass, JavaClass } from "java-bridge";
import { Thread as java_lang_Thread } from "./Thread";
import { Throwable as java_lang_Throwable } from "./Throwable";

/**
 * This class just defines types, you should import Thread$UncaughtExceptionHandler instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class Thread$UncaughtExceptionHandlerClass extends JavaClass {
    // ================== Method uncaughtException ==================
    /**
     * @param var0 original type: 'java.lang.Thread'
     * @param var1 original type: 'java.lang.Throwable'
     * @return original return type: 'void'
     */
    public uncaughtException(var0: java_lang_Thread | null, var1: java_lang_Throwable | null): Promise<void>;
    // ================== Method uncaughtException ==================
    /**
     * @param var0 original type: 'java.lang.Thread'
     * @param var1 original type: 'java.lang.Throwable'
     * @return original return type: 'void'
     */
    public uncaughtExceptionSync(var0: java_lang_Thread | null, var1: java_lang_Throwable | null): void;
}

/**
 * Class java.lang.Thread$UncaughtExceptionHandler.
 *
 * This actually imports the java class for further use.
 * The class Thread$UncaughtExceptionHandlerClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Thread$UncaughtExceptionHandler extends importClass<typeof Thread$UncaughtExceptionHandlerClass>("java.lang.Thread$UncaughtExceptionHandler") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default Thread$UncaughtExceptionHandler;