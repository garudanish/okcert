import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Class as java_lang_Class } from "./Class";
import { Long as java_lang_Long } from "./Long";
import { Integer as java_lang_Integer } from "./Integer";

/**
 * This class just defines types, you should import Boolean instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class BooleanClass extends JavaClass {
    // ================== Field TRUE ==================
    /**
     * Original type: 'java.lang.Boolean'
     */
    public static readonly TRUE: BooleanClass | boolean | null;
    // ================== Field FALSE ==================
    /**
     * Original type: 'java.lang.Boolean'
     */
    public static readonly FALSE: BooleanClass | boolean | null;
    // ================== Field TYPE ==================
    /**
     * Original type: 'java.lang.Class'
     */
    public static readonly TYPE: java_lang_Class | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'java.lang.String'
     */
    public static toString(var0: BooleanClass | boolean): Promise<string>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'java.lang.String'
     */
    public static toStringSync(var0: BooleanClass | boolean): string;
    // ================== Method hashCode ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'int'
     */
    public static hashCode(var0: BooleanClass | boolean): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'int'
     */
    public static hashCodeSync(var0: BooleanClass | boolean): number;
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Boolean'
     * @return original return type: 'int'
     */
    public compareTo(var0: BooleanClass | boolean | null): Promise<number>;
    // ================== Method compareTo ==================
    /**
     * @param var0 original type: 'java.lang.Boolean'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BooleanClass | boolean | null): number;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareTo(var0: BasicOrJavaType | null): Promise<number>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'int'
     */
    public compareToSync(var0: BasicOrJavaType | null): number;
    // ================== Method getBoolean ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public static getBoolean(var0: string | null): Promise<boolean>;
    // ================== Method getBoolean ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public static getBooleanSync(var0: string | null): boolean;
    // ================== Method booleanValue ==================
    /**
     * @return original return type: 'boolean'
     */
    public booleanValue(): Promise<boolean>;
    // ================== Method booleanValue ==================
    /**
     * @return original return type: 'boolean'
     */
    public booleanValueSync(): boolean;
    // ================== Method valueOf ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Boolean'
     */
    public static valueOf(var0: string | null): Promise<boolean | null>;
    // ================== Method valueOf ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Boolean'
     */
    public static valueOfSync(var0: string | null): boolean | null;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'java.lang.Boolean'
     */
    public static valueOf(var0: BooleanClass | boolean): Promise<boolean | null>;
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'java.lang.Boolean'
     */
    public static valueOfSync(var0: BooleanClass | boolean): boolean | null;
    // ================== Method compare ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'int'
     */
    public static compare(var0: BooleanClass | boolean, var1: BooleanClass | boolean): Promise<number>;
    // ================== Method compare ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'int'
     */
    public static compareSync(var0: BooleanClass | boolean, var1: BooleanClass | boolean): number;
    // ================== Method parseBoolean ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public static parseBoolean(var0: string | null): Promise<boolean>;
    // ================== Method parseBoolean ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'boolean'
     */
    public static parseBooleanSync(var0: string | null): boolean;
    // ================== Method logicalAnd ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public static logicalAnd(var0: BooleanClass | boolean, var1: BooleanClass | boolean): Promise<boolean>;
    // ================== Method logicalAnd ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public static logicalAndSync(var0: BooleanClass | boolean, var1: BooleanClass | boolean): boolean;
    // ================== Method logicalOr ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public static logicalOr(var0: BooleanClass | boolean, var1: BooleanClass | boolean): Promise<boolean>;
    // ================== Method logicalOr ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public static logicalOrSync(var0: BooleanClass | boolean, var1: BooleanClass | boolean): boolean;
    // ================== Method logicalXor ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public static logicalXor(var0: BooleanClass | boolean, var1: BooleanClass | boolean): Promise<boolean>;
    // ================== Method logicalXor ==================
    /**
     * @param var0 original type: 'boolean'
     * @param var1 original type: 'boolean'
     * @return original return type: 'boolean'
     */
    public static logicalXorSync(var0: BooleanClass | boolean, var1: BooleanClass | boolean): boolean;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
    // ================== Method newInstance ==================
    /**
     * @param var0 original type: 'boolean'
     * @return original return type: 'java.lang.Boolean'
     */
    public static newInstance(var0: BooleanClass | boolean): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Boolean'
     */
    public static newInstance(var0: string | null): Promise<boolean>;
    // ================== Constructors ==================
    /**
     * @param var0 original type: 'boolean'
     */
    public constructor(var0: BooleanClass | boolean);
    /**
     * @param var0 original type: 'java.lang.String'
     */
    public constructor(var0: string | null);
}

/**
 * Class java.lang.Boolean.
 *
 * This actually imports the java class for further use.
 * The class BooleanClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Boolean extends importClass<typeof BooleanClass>("java.lang.Boolean") {
}
export default Boolean;