import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Locale$Category as java_util_Locale$Category } from "./Locale$Category";
import { List as java_util_List } from "./List";
import { Collection as java_util_Collection } from "./Collection";
import { Locale$FilteringMode as java_util_Locale$FilteringMode } from "./Locale$FilteringMode";
import { Set as java_util_Set } from "./Set";
import { Long as java_lang_Long } from "./../lang/Long";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import Locale instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class LocaleClass extends JavaClass {
    // ================== Field ENGLISH ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly ENGLISH: LocaleClass | null;
    // ================== Field FRENCH ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly FRENCH: LocaleClass | null;
    // ================== Field GERMAN ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly GERMAN: LocaleClass | null;
    // ================== Field ITALIAN ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly ITALIAN: LocaleClass | null;
    // ================== Field JAPANESE ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly JAPANESE: LocaleClass | null;
    // ================== Field KOREAN ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly KOREAN: LocaleClass | null;
    // ================== Field CHINESE ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly CHINESE: LocaleClass | null;
    // ================== Field SIMPLIFIED_CHINESE ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly SIMPLIFIED_CHINESE: LocaleClass | null;
    // ================== Field TRADITIONAL_CHINESE ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly TRADITIONAL_CHINESE: LocaleClass | null;
    // ================== Field FRANCE ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly FRANCE: LocaleClass | null;
    // ================== Field GERMANY ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly GERMANY: LocaleClass | null;
    // ================== Field ITALY ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly ITALY: LocaleClass | null;
    // ================== Field JAPAN ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly JAPAN: LocaleClass | null;
    // ================== Field KOREA ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly KOREA: LocaleClass | null;
    // ================== Field CHINA ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly CHINA: LocaleClass | null;
    // ================== Field PRC ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly PRC: LocaleClass | null;
    // ================== Field TAIWAN ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly TAIWAN: LocaleClass | null;
    // ================== Field UK ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly UK: LocaleClass | null;
    // ================== Field US ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly US: LocaleClass | null;
    // ================== Field CANADA ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly CANADA: LocaleClass | null;
    // ================== Field CANADA_FRENCH ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly CANADA_FRENCH: LocaleClass | null;
    // ================== Field ROOT ==================
    /**
     * Original type: 'java.util.Locale'
     */
    public static readonly ROOT: LocaleClass | null;
    // ================== Field PRIVATE_USE_EXTENSION ==================
    /**
     * Original type: 'char'
     */
    public static readonly PRIVATE_USE_EXTENSION: string | null;
    // ================== Field UNICODE_LOCALE_EXTENSION ==================
    /**
     * Original type: 'char'
     */
    public static readonly UNICODE_LOCALE_EXTENSION: string | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method clone ==================
    /**
     * @return original return type: 'java.lang.Object'
     */
    public clone(): Promise<BasicOrJavaType | null>;
    // ================== Method clone ==================
    /**
     * @return original return type: 'java.lang.Object'
     */
    public cloneSync(): BasicOrJavaType | null;
    // ================== Method getLanguage ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getLanguage(): Promise<string | null>;
    // ================== Method getLanguage ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getLanguageSync(): string | null;
    // ================== Method getDefault ==================
    /**
     * @param var0 original type: 'java.util.Locale$Category'
     * @return original return type: 'java.util.Locale'
     */
    public static getDefault(var0: java_util_Locale$Category | null): Promise<Locale | null>;
    // ================== Method getDefault ==================
    /**
     * @param var0 original type: 'java.util.Locale$Category'
     * @return original return type: 'java.util.Locale'
     */
    public static getDefaultSync(var0: java_util_Locale$Category | null): Locale | null;
    /**
     * @return original return type: 'java.util.Locale'
     */
    public static getDefault(): Promise<Locale | null>;
    /**
     * @return original return type: 'java.util.Locale'
     */
    public static getDefaultSync(): Locale | null;
    // ================== Method lookup ==================
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'java.util.Locale'
     */
    public static lookup(var0: java_util_List | null, var1: java_util_Collection | null): Promise<Locale | null>;
    // ================== Method lookup ==================
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'java.util.Locale'
     */
    public static lookupSync(var0: java_util_List | null, var1: java_util_Collection | null): Locale | null;
    // ================== Method filter ==================
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'java.util.Locale$FilteringMode'
     * @return original return type: 'java.util.List'
     */
    public static filter(var0: java_util_List | null, var1: java_util_Collection | null, var2: java_util_Locale$FilteringMode | null): Promise<java_util_List | null>;
    // ================== Method filter ==================
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'java.util.Locale$FilteringMode'
     * @return original return type: 'java.util.List'
     */
    public static filterSync(var0: java_util_List | null, var1: java_util_Collection | null, var2: java_util_Locale$FilteringMode | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'java.util.List'
     */
    public static filter(var0: java_util_List | null, var1: java_util_Collection | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'java.util.List'
     */
    public static filterSync(var0: java_util_List | null, var1: java_util_Collection | null): java_util_List | null;
    // ================== Method setDefault ==================
    /**
     * @param var0 original type: 'java.util.Locale$Category'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'void'
     */
    public static setDefault(var0: java_util_Locale$Category | null, var1: LocaleClass | null): Promise<void>;
    // ================== Method setDefault ==================
    /**
     * @param var0 original type: 'java.util.Locale$Category'
     * @param var1 original type: 'java.util.Locale'
     * @return original return type: 'void'
     */
    public static setDefaultSync(var0: java_util_Locale$Category | null, var1: LocaleClass | null): void;
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'void'
     */
    public static setDefault(var0: LocaleClass | null): Promise<void>;
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'void'
     */
    public static setDefaultSync(var0: LocaleClass | null): void;
    // ================== Method getAvailableLocales ==================
    /**
     * @return original return type: 'java.util.Locale[]'
     */
    public static getAvailableLocales(): Promise<(Locale | null)[] | null>;
    // ================== Method getAvailableLocales ==================
    /**
     * @return original return type: 'java.util.Locale[]'
     */
    public static getAvailableLocalesSync(): (Locale | null)[] | null;
    // ================== Method getISOCountries ==================
    /**
     * @return original return type: 'java.lang.String[]'
     */
    public static getISOCountries(): Promise<(string | null)[] | null>;
    // ================== Method getISOCountries ==================
    /**
     * @return original return type: 'java.lang.String[]'
     */
    public static getISOCountriesSync(): (string | null)[] | null;
    // ================== Method getISOLanguages ==================
    /**
     * @return original return type: 'java.lang.String[]'
     */
    public static getISOLanguages(): Promise<(string | null)[] | null>;
    // ================== Method getISOLanguages ==================
    /**
     * @return original return type: 'java.lang.String[]'
     */
    public static getISOLanguagesSync(): (string | null)[] | null;
    // ================== Method getScript ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getScript(): Promise<string | null>;
    // ================== Method getScript ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getScriptSync(): string | null;
    // ================== Method getCountry ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getCountry(): Promise<string | null>;
    // ================== Method getCountry ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getCountrySync(): string | null;
    // ================== Method getVariant ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getVariant(): Promise<string | null>;
    // ================== Method getVariant ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getVariantSync(): string | null;
    // ================== Method hasExtensions ==================
    /**
     * @return original return type: 'boolean'
     */
    public hasExtensions(): Promise<boolean>;
    // ================== Method hasExtensions ==================
    /**
     * @return original return type: 'boolean'
     */
    public hasExtensionsSync(): boolean;
    // ================== Method stripExtensions ==================
    /**
     * @return original return type: 'java.util.Locale'
     */
    public stripExtensions(): Promise<Locale | null>;
    // ================== Method stripExtensions ==================
    /**
     * @return original return type: 'java.util.Locale'
     */
    public stripExtensionsSync(): Locale | null;
    // ================== Method getExtension ==================
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.String'
     */
    public getExtension(var0: string | null): Promise<string | null>;
    // ================== Method getExtension ==================
    /**
     * @param var0 original type: 'char'
     * @return original return type: 'java.lang.String'
     */
    public getExtensionSync(var0: string | null): string | null;
    // ================== Method getExtensionKeys ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public getExtensionKeys(): Promise<java_util_Set | null>;
    // ================== Method getExtensionKeys ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public getExtensionKeysSync(): java_util_Set | null;
    // ================== Method getUnicodeLocaleAttributes ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public getUnicodeLocaleAttributes(): Promise<java_util_Set | null>;
    // ================== Method getUnicodeLocaleAttributes ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public getUnicodeLocaleAttributesSync(): java_util_Set | null;
    // ================== Method getUnicodeLocaleType ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    public getUnicodeLocaleType(var0: string | null): Promise<string | null>;
    // ================== Method getUnicodeLocaleType ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    public getUnicodeLocaleTypeSync(var0: string | null): string | null;
    // ================== Method getUnicodeLocaleKeys ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public getUnicodeLocaleKeys(): Promise<java_util_Set | null>;
    // ================== Method getUnicodeLocaleKeys ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public getUnicodeLocaleKeysSync(): java_util_Set | null;
    // ================== Method toLanguageTag ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toLanguageTag(): Promise<string | null>;
    // ================== Method toLanguageTag ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toLanguageTagSync(): string | null;
    // ================== Method forLanguageTag ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Locale'
     */
    public static forLanguageTag(var0: string | null): Promise<Locale | null>;
    // ================== Method forLanguageTag ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Locale'
     */
    public static forLanguageTagSync(var0: string | null): Locale | null;
    // ================== Method getISO3Language ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getISO3Language(): Promise<string | null>;
    // ================== Method getISO3Language ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getISO3LanguageSync(): string | null;
    // ================== Method getISO3Country ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getISO3Country(): Promise<string | null>;
    // ================== Method getISO3Country ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getISO3CountrySync(): string | null;
    // ================== Method getDisplayLanguage ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayLanguage(): Promise<string | null>;
    // ================== Method getDisplayLanguage ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayLanguageSync(): string | null;
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayLanguage(var0: LocaleClass | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayLanguageSync(var0: LocaleClass | null): string | null;
    // ================== Method getDisplayScript ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayScript(var0: LocaleClass | null): Promise<string | null>;
    // ================== Method getDisplayScript ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayScriptSync(var0: LocaleClass | null): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayScript(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayScriptSync(): string | null;
    // ================== Method getDisplayCountry ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayCountry(var0: LocaleClass | null): Promise<string | null>;
    // ================== Method getDisplayCountry ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayCountrySync(var0: LocaleClass | null): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayCountry(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayCountrySync(): string | null;
    // ================== Method getDisplayVariant ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayVariant(var0: LocaleClass | null): Promise<string | null>;
    // ================== Method getDisplayVariant ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayVariantSync(var0: LocaleClass | null): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayVariant(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayVariantSync(): string | null;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayName(var0: LocaleClass | null): Promise<string | null>;
    // ================== Method getDisplayName ==================
    /**
     * @param var0 original type: 'java.util.Locale'
     * @return original return type: 'java.lang.String'
     */
    public getDisplayNameSync(var0: LocaleClass | null): string | null;
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayName(): Promise<string | null>;
    /**
     * @return original return type: 'java.lang.String'
     */
    public getDisplayNameSync(): string | null;
    // ================== Method filterTags ==================
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'java.util.Locale$FilteringMode'
     * @return original return type: 'java.util.List'
     */
    public static filterTags(var0: java_util_List | null, var1: java_util_Collection | null, var2: java_util_Locale$FilteringMode | null): Promise<java_util_List | null>;
    // ================== Method filterTags ==================
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @param var2 original type: 'java.util.Locale$FilteringMode'
     * @return original return type: 'java.util.List'
     */
    public static filterTagsSync(var0: java_util_List | null, var1: java_util_Collection | null, var2: java_util_Locale$FilteringMode | null): java_util_List | null;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'java.util.List'
     */
    public static filterTags(var0: java_util_List | null, var1: java_util_Collection | null): Promise<java_util_List | null>;
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'java.util.List'
     */
    public static filterTagsSync(var0: java_util_List | null, var1: java_util_Collection | null): java_util_List | null;
    // ================== Method lookupTag ==================
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'java.lang.String'
     */
    public static lookupTag(var0: java_util_List | null, var1: java_util_Collection | null): Promise<string | null>;
    // ================== Method lookupTag ==================
    /**
     * @param var0 original type: 'java.util.List'
     * @param var1 original type: 'java.util.Collection'
     * @return original return type: 'java.lang.String'
     */
    public static lookupTagSync(var0: java_util_List | null, var1: java_util_Collection | null): string | null;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
    // ================== Method newInstance ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.util.Locale'
     */
    public static newInstance(var0: string | null): Promise<Locale>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.util.Locale'
     */
    public static newInstance(var0: string | null, var1: string | null): Promise<Locale>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'java.util.Locale'
     */
    public static newInstance(var0: string | null, var1: string | null, var2: string | null): Promise<Locale>;
    // ================== Constructors ==================
    /**
     * @param var0 original type: 'java.lang.String'
     */
    public constructor(var0: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     */
    public constructor(var0: string | null, var1: string | null);
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     */
    public constructor(var0: string | null, var1: string | null, var2: string | null);
}

/**
 * Class java.util.Locale.
 *
 * This actually imports the java class for further use.
 * The class LocaleClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Locale extends importClass<typeof LocaleClass>("java.util.Locale") {
}
export default Locale;