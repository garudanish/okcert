import { importClass, JavaClass, BasicOrJavaType } from "java-bridge";
import { Provider$Service as java_security_Provider$Service } from "./Provider$Service";
import { Set as java_util_Set } from "./../util/Set";
import { Collection as java_util_Collection } from "./../util/Collection";
import { BiFunction as java_util_function_BiFunction } from "./../util/function/BiFunction";
import { Map as java_util_Map } from "./../util/Map";
import { InputStream as java_io_InputStream } from "./../io/InputStream";
import { Reader as java_io_Reader } from "./../io/Reader";
import { Enumeration as java_util_Enumeration } from "./../util/Enumeration";
import { BiConsumer as java_util_function_BiConsumer } from "./../util/function/BiConsumer";
import { Function as java_util_function_Function } from "./../util/function/Function";
import { PrintWriter as java_io_PrintWriter } from "./../io/PrintWriter";
import { PrintStream as java_io_PrintStream } from "./../io/PrintStream";
import { OutputStream as java_io_OutputStream } from "./../io/OutputStream";
import { Writer as java_io_Writer } from "./../io/Writer";
import { Long as java_lang_Long } from "./../lang/Long";
import { Integer as java_lang_Integer } from "./../lang/Integer";
import { Class as java_lang_Class } from "./../lang/Class";

/**
 * This class just defines types, you should import Provider instead of this.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export declare class ProviderClass extends JavaClass {
    // ================== Method getVersion ==================
    /**
     * @return original return type: 'double'
     */
    public getVersion(): Promise<number>;
    // ================== Method getVersion ==================
    /**
     * @return original return type: 'double'
     */
    public getVersionSync(): number;
    // ================== Method getInfo ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getInfo(): Promise<string | null>;
    // ================== Method getInfo ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getInfoSync(): string | null;
    // ================== Method getService ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.security.Provider$Service'
     */
    public getService(var0: string | null, var1: string | null): Promise<java_security_Provider$Service | null>;
    // ================== Method getService ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.security.Provider$Service'
     */
    public getServiceSync(var0: string | null, var1: string | null): java_security_Provider$Service | null;
    // ================== Method getServices ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public getServices(): Promise<java_util_Set | null>;
    // ================== Method getServices ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public getServicesSync(): java_util_Set | null;
    // ================== Method remove ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public remove(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method remove ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public removeSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): boolean;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public remove(var0: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public removeSync(var0: BasicOrJavaType | null): BasicOrJavaType | null;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public get(var0: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    // ================== Method get ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public getSync(var0: BasicOrJavaType | null): BasicOrJavaType | null;
    // ================== Method put ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public put(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    // ================== Method put ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public putSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): BasicOrJavaType | null;
    // ================== Method getProperty ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    public getProperty(var0: string | null): Promise<string | null>;
    // ================== Method getProperty ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    public getPropertySync(var0: string | null): string | null;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    public getProperty(var0: string | null, var1: string | null): Promise<string | null>;
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.String'
     */
    public getPropertySync(var0: string | null, var1: string | null): string | null;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toString(): Promise<string>;
    // ================== Method toString ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public toStringSync(): string;
    // ================== Method values ==================
    /**
     * @return original return type: 'java.util.Collection'
     */
    public values(): Promise<java_util_Collection | null>;
    // ================== Method values ==================
    /**
     * @return original return type: 'java.util.Collection'
     */
    public valuesSync(): java_util_Collection | null;
    // ================== Method clear ==================
    /**
     * @return original return type: 'void'
     */
    public clear(): Promise<void>;
    // ================== Method clear ==================
    /**
     * @return original return type: 'void'
     */
    public clearSync(): void;
    // ================== Method getName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getName(): Promise<string | null>;
    // ================== Method getName ==================
    /**
     * @return original return type: 'java.lang.String'
     */
    public getNameSync(): string | null;
    // ================== Method replace ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public replace(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    // ================== Method replace ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public replaceSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): BasicOrJavaType | null;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @param var2 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public replace(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null, var2: BasicOrJavaType | null): Promise<boolean>;
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @param var2 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public replaceSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null, var2: BasicOrJavaType | null): boolean;
    // ================== Method replaceAll ==================
    /**
     * @param var0 original type: 'java.util.function.BiFunction'
     * @return original return type: 'void'
     */
    public replaceAll(var0: java_util_function_BiFunction | null): Promise<void>;
    // ================== Method replaceAll ==================
    /**
     * @param var0 original type: 'java.util.function.BiFunction'
     * @return original return type: 'void'
     */
    public replaceAllSync(var0: java_util_function_BiFunction | null): void;
    // ================== Method entrySet ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public entrySet(): Promise<java_util_Set | null>;
    // ================== Method entrySet ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public entrySetSync(): java_util_Set | null;
    // ================== Method putAll ==================
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'void'
     */
    public putAll(var0: java_util_Map | null): Promise<void>;
    // ================== Method putAll ==================
    /**
     * @param var0 original type: 'java.util.Map'
     * @return original return type: 'void'
     */
    public putAllSync(var0: java_util_Map | null): void;
    // ================== Method putIfAbsent ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public putIfAbsent(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    // ================== Method putIfAbsent ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public putIfAbsentSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): BasicOrJavaType | null;
    // ================== Method load ==================
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'void'
     */
    public load(var0: java_io_InputStream | null): Promise<void>;
    // ================== Method load ==================
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'void'
     */
    public loadSync(var0: java_io_InputStream | null): void;
    /**
     * @param var0 original type: 'java.io.Reader'
     * @return original return type: 'void'
     */
    public load(var0: java_io_Reader | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.Reader'
     * @return original return type: 'void'
     */
    public loadSync(var0: java_io_Reader | null): void;
    // ================== Method elements ==================
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    public elements(): Promise<java_util_Enumeration | null>;
    // ================== Method elements ==================
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    public elementsSync(): java_util_Enumeration | null;
    // ================== Method forEach ==================
    /**
     * @param var0 original type: 'java.util.function.BiConsumer'
     * @return original return type: 'void'
     */
    public forEach(var0: java_util_function_BiConsumer | null): Promise<void>;
    // ================== Method forEach ==================
    /**
     * @param var0 original type: 'java.util.function.BiConsumer'
     * @return original return type: 'void'
     */
    public forEachSync(var0: java_util_function_BiConsumer | null): void;
    // ================== Method keys ==================
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    public keys(): Promise<java_util_Enumeration | null>;
    // ================== Method keys ==================
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    public keysSync(): java_util_Enumeration | null;
    // ================== Method keySet ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public keySet(): Promise<java_util_Set | null>;
    // ================== Method keySet ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public keySetSync(): java_util_Set | null;
    // ================== Method getOrDefault ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public getOrDefault(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): Promise<BasicOrJavaType | null>;
    // ================== Method getOrDefault ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @return original return type: 'java.lang.Object'
     */
    public getOrDefaultSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null): BasicOrJavaType | null;
    // ================== Method computeIfAbsent ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.function.Function'
     * @return original return type: 'java.lang.Object'
     */
    public computeIfAbsent(var0: BasicOrJavaType | null, var1: java_util_function_Function | null): Promise<BasicOrJavaType | null>;
    // ================== Method computeIfAbsent ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.function.Function'
     * @return original return type: 'java.lang.Object'
     */
    public computeIfAbsentSync(var0: BasicOrJavaType | null, var1: java_util_function_Function | null): BasicOrJavaType | null;
    // ================== Method computeIfPresent ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.function.BiFunction'
     * @return original return type: 'java.lang.Object'
     */
    public computeIfPresent(var0: BasicOrJavaType | null, var1: java_util_function_BiFunction | null): Promise<BasicOrJavaType | null>;
    // ================== Method computeIfPresent ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.function.BiFunction'
     * @return original return type: 'java.lang.Object'
     */
    public computeIfPresentSync(var0: BasicOrJavaType | null, var1: java_util_function_BiFunction | null): BasicOrJavaType | null;
    // ================== Method compute ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.function.BiFunction'
     * @return original return type: 'java.lang.Object'
     */
    public compute(var0: BasicOrJavaType | null, var1: java_util_function_BiFunction | null): Promise<BasicOrJavaType | null>;
    // ================== Method compute ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.util.function.BiFunction'
     * @return original return type: 'java.lang.Object'
     */
    public computeSync(var0: BasicOrJavaType | null, var1: java_util_function_BiFunction | null): BasicOrJavaType | null;
    // ================== Method merge ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @param var2 original type: 'java.util.function.BiFunction'
     * @return original return type: 'java.lang.Object'
     */
    public merge(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null, var2: java_util_function_BiFunction | null): Promise<BasicOrJavaType | null>;
    // ================== Method merge ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @param var1 original type: 'java.lang.Object'
     * @param var2 original type: 'java.util.function.BiFunction'
     * @return original return type: 'java.lang.Object'
     */
    public mergeSync(var0: BasicOrJavaType | null, var1: BasicOrJavaType | null, var2: java_util_function_BiFunction | null): BasicOrJavaType | null;
    // ================== Method setProperty ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    public setProperty(var0: string | null, var1: string | null): Promise<BasicOrJavaType | null>;
    // ================== Method setProperty ==================
    /**
     * @param var0 original type: 'java.lang.String'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'java.lang.Object'
     */
    public setPropertySync(var0: string | null, var1: string | null): BasicOrJavaType | null;
    // ================== Method list ==================
    /**
     * @param var0 original type: 'java.io.PrintWriter'
     * @return original return type: 'void'
     */
    public list(var0: java_io_PrintWriter | null): Promise<void>;
    // ================== Method list ==================
    /**
     * @param var0 original type: 'java.io.PrintWriter'
     * @return original return type: 'void'
     */
    public listSync(var0: java_io_PrintWriter | null): void;
    /**
     * @param var0 original type: 'java.io.PrintStream'
     * @return original return type: 'void'
     */
    public list(var0: java_io_PrintStream | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.PrintStream'
     * @return original return type: 'void'
     */
    public listSync(var0: java_io_PrintStream | null): void;
    // ================== Method save ==================
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public save(var0: java_io_OutputStream | null, var1: string | null): Promise<void>;
    // ================== Method save ==================
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public saveSync(var0: java_io_OutputStream | null, var1: string | null): void;
    // ================== Method store ==================
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public store(var0: java_io_OutputStream | null, var1: string | null): Promise<void>;
    // ================== Method store ==================
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public storeSync(var0: java_io_OutputStream | null, var1: string | null): void;
    /**
     * @param var0 original type: 'java.io.Writer'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public store(var0: java_io_Writer | null, var1: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.Writer'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public storeSync(var0: java_io_Writer | null, var1: string | null): void;
    // ================== Method loadFromXML ==================
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'void'
     */
    public loadFromXML(var0: java_io_InputStream | null): Promise<void>;
    // ================== Method loadFromXML ==================
    /**
     * @param var0 original type: 'java.io.InputStream'
     * @return original return type: 'void'
     */
    public loadFromXMLSync(var0: java_io_InputStream | null): void;
    // ================== Method storeToXML ==================
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public storeToXML(var0: java_io_OutputStream | null, var1: string | null): Promise<void>;
    // ================== Method storeToXML ==================
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public storeToXMLSync(var0: java_io_OutputStream | null, var1: string | null): void;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public storeToXML(var0: java_io_OutputStream | null, var1: string | null, var2: string | null): Promise<void>;
    /**
     * @param var0 original type: 'java.io.OutputStream'
     * @param var1 original type: 'java.lang.String'
     * @param var2 original type: 'java.lang.String'
     * @return original return type: 'void'
     */
    public storeToXMLSync(var0: java_io_OutputStream | null, var1: string | null, var2: string | null): void;
    // ================== Method propertyNames ==================
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    public propertyNames(): Promise<java_util_Enumeration | null>;
    // ================== Method propertyNames ==================
    /**
     * @return original return type: 'java.util.Enumeration'
     */
    public propertyNamesSync(): java_util_Enumeration | null;
    // ================== Method stringPropertyNames ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public stringPropertyNames(): Promise<java_util_Set | null>;
    // ================== Method stringPropertyNames ==================
    /**
     * @return original return type: 'java.util.Set'
     */
    public stringPropertyNamesSync(): java_util_Set | null;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equals(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method equals ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public equalsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCode(): Promise<number>;
    // ================== Method hashCode ==================
    /**
     * @return original return type: 'int'
     */
    public hashCodeSync(): number;
    // ================== Method clone ==================
    /**
     * @return original return type: 'java.lang.Object'
     */
    public clone(): Promise<BasicOrJavaType | null>;
    // ================== Method clone ==================
    /**
     * @return original return type: 'java.lang.Object'
     */
    public cloneSync(): BasicOrJavaType | null;
    // ================== Method isEmpty ==================
    /**
     * @return original return type: 'boolean'
     */
    public isEmpty(): Promise<boolean>;
    // ================== Method isEmpty ==================
    /**
     * @return original return type: 'boolean'
     */
    public isEmptySync(): boolean;
    // ================== Method contains ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public contains(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method contains ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public containsSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method size ==================
    /**
     * @return original return type: 'int'
     */
    public size(): Promise<number>;
    // ================== Method size ==================
    /**
     * @return original return type: 'int'
     */
    public sizeSync(): number;
    // ================== Method containsValue ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public containsValue(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method containsValue ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public containsValueSync(var0: BasicOrJavaType | null): boolean;
    // ================== Method containsKey ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public containsKey(var0: BasicOrJavaType | null): Promise<boolean>;
    // ================== Method containsKey ==================
    /**
     * @param var0 original type: 'java.lang.Object'
     * @return original return type: 'boolean'
     */
    public containsKeySync(var0: BasicOrJavaType | null): boolean;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): Promise<void>;
    // ================== Method wait ==================
    /**
     * @param var0 original type: 'long'
     * @param var1 original type: 'int'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number, var1: java_lang_Integer | number): void;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public wait(var0: java_lang_Long | bigint | number): Promise<void>;
    /**
     * @param var0 original type: 'long'
     * @return original return type: 'void'
     */
    public waitSync(var0: java_lang_Long | bigint | number): void;
    /**
     * @return original return type: 'void'
     */
    public wait(): Promise<void>;
    /**
     * @return original return type: 'void'
     */
    public waitSync(): void;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClass(): Promise<java_lang_Class>;
    // ================== Method getClass ==================
    /**
     * @return original return type: 'java.lang.Class'
     */
    public getClassSync(): java_lang_Class;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notify(): Promise<void>;
    // ================== Method notify ==================
    /**
     * @return original return type: 'void'
     */
    public notifySync(): void;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAll(): Promise<void>;
    // ================== Method notifyAll ==================
    /**
     * @return original return type: 'void'
     */
    public notifyAllSync(): void;
}

/**
 * Class java.security.Provider.
 *
 * This actually imports the java class for further use.
 * The class ProviderClass only defines types, this is the class you should actually import.
 * Please note that this statement imports the underlying java class at runtime, which may take a while.
 * This was generated by java-bridge.
 * You should probably not edit this.
 */
export class Provider extends importClass<typeof ProviderClass>("java.security.Provider") {
    /**
     * Private constructor to prevent instantiation
     * as this is either an abstract class or an interface
     */
    private constructor() {
        super();
    }
}
export default Provider;